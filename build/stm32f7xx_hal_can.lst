ARM GAS  C:\Users\XAVIER~1\AppData\Local\Temp\cc1dYJ0Y.s 			page 1


   1              		.cpu cortex-m7
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"stm32f7xx_hal_can.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.HAL_CAN_MspInit,"ax",%progbits
  18              		.align	1
  19              		.weak	HAL_CAN_MspInit
  20              		.arch armv7e-m
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  24              		.fpu fpv5-sp-d16
  26              	HAL_CAN_MspInit:
  27              	.LVL0:
  28              	.LFB143:
  29              		.file 1 "Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c"
   1:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** /**
   2:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   ******************************************************************************
   3:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   * @file    stm32f7xx_hal_can.c
   4:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   * @author  MCD Application Team
   5:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   * @brief   CAN HAL module driver.
   6:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   *          This file provides firmware functions to manage the following
   7:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   *          functionalities of the Controller Area Network (CAN) peripheral:
   8:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   *           + Initialization and de-initialization functions
   9:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   *           + Configuration functions
  10:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   *           + Control functions
  11:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   *           + Interrupts management
  12:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   *           + Callbacks functions
  13:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   *           + Peripheral State and Error functions
  14:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   *
  15:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   ******************************************************************************
  16:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   * @attention
  17:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   *
  18:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   * Copyright (c) 2017 STMicroelectronics.
  19:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   * All rights reserved.
  20:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   *
  21:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   * This software is licensed under terms that can be found in the LICENSE file
  22:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   * in the root directory of this software component.
  23:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  24:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   *
  25:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   ******************************************************************************
  26:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   @verbatim
  27:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   ==============================================================================
  28:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****                         ##### How to use this driver #####
  29:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   ==============================================================================
ARM GAS  C:\Users\XAVIER~1\AppData\Local\Temp\cc1dYJ0Y.s 			page 2


  30:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****     [..]
  31:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****       (#) Initialize the CAN low level resources by implementing the
  32:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****           HAL_CAN_MspInit():
  33:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****          (++) Enable the CAN interface clock using __HAL_RCC_CANx_CLK_ENABLE()
  34:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****          (++) Configure CAN pins
  35:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****              (+++) Enable the clock for the CAN GPIOs
  36:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****              (+++) Configure CAN pins as alternate function open-drain
  37:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****          (++) In case of using interrupts (e.g. HAL_CAN_ActivateNotification())
  38:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****              (+++) Configure the CAN interrupt priority using
  39:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****                    HAL_NVIC_SetPriority()
  40:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****              (+++) Enable the CAN IRQ handler using HAL_NVIC_EnableIRQ()
  41:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****              (+++) In CAN IRQ handler, call HAL_CAN_IRQHandler()
  42:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** 
  43:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****       (#) Initialize the CAN peripheral using HAL_CAN_Init() function. This
  44:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****           function resorts to HAL_CAN_MspInit() for low-level initialization.
  45:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** 
  46:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****       (#) Configure the reception filters using the following configuration
  47:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****           functions:
  48:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****             (++) HAL_CAN_ConfigFilter()
  49:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** 
  50:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****       (#) Start the CAN module using HAL_CAN_Start() function. At this level
  51:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****           the node is active on the bus: it receive messages, and can send
  52:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****           messages.
  53:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** 
  54:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****       (#) To manage messages transmission, the following Tx control functions
  55:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****           can be used:
  56:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****             (++) HAL_CAN_AddTxMessage() to request transmission of a new
  57:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****                  message.
  58:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****             (++) HAL_CAN_AbortTxRequest() to abort transmission of a pending
  59:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****                  message.
  60:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****             (++) HAL_CAN_GetTxMailboxesFreeLevel() to get the number of free Tx
  61:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****                  mailboxes.
  62:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****             (++) HAL_CAN_IsTxMessagePending() to check if a message is pending
  63:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****                  in a Tx mailbox.
  64:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****             (++) HAL_CAN_GetTxTimestamp() to get the timestamp of Tx message
  65:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****                  sent, if time triggered communication mode is enabled.
  66:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** 
  67:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****       (#) When a message is received into the CAN Rx FIFOs, it can be retrieved
  68:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****           using the HAL_CAN_GetRxMessage() function. The function
  69:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****           HAL_CAN_GetRxFifoFillLevel() allows to know how many Rx message are
  70:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****           stored in the Rx Fifo.
  71:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** 
  72:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****       (#) Calling the HAL_CAN_Stop() function stops the CAN module.
  73:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** 
  74:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****       (#) The deinitialization is achieved with HAL_CAN_DeInit() function.
  75:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** 
  76:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** 
  77:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****       *** Polling mode operation ***
  78:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****       ==============================
  79:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****     [..]
  80:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****       (#) Reception:
  81:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****             (++) Monitor reception of message using HAL_CAN_GetRxFifoFillLevel()
  82:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****                  until at least one message is received.
  83:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****             (++) Then get the message using HAL_CAN_GetRxMessage().
  84:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** 
  85:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****       (#) Transmission:
  86:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****             (++) Monitor the Tx mailboxes availability until at least one Tx
ARM GAS  C:\Users\XAVIER~1\AppData\Local\Temp\cc1dYJ0Y.s 			page 3


  87:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****                  mailbox is free, using HAL_CAN_GetTxMailboxesFreeLevel().
  88:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****             (++) Then request transmission of a message using
  89:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****                  HAL_CAN_AddTxMessage().
  90:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** 
  91:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** 
  92:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****       *** Interrupt mode operation ***
  93:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****       ================================
  94:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****     [..]
  95:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****       (#) Notifications are activated using HAL_CAN_ActivateNotification()
  96:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****           function. Then, the process can be controlled through the
  97:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****           available user callbacks: HAL_CAN_xxxCallback(), using same APIs
  98:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****           HAL_CAN_GetRxMessage() and HAL_CAN_AddTxMessage().
  99:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** 
 100:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****       (#) Notifications can be deactivated using
 101:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****           HAL_CAN_DeactivateNotification() function.
 102:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** 
 103:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****       (#) Special care should be taken for CAN_IT_RX_FIFO0_MSG_PENDING and
 104:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****           CAN_IT_RX_FIFO1_MSG_PENDING notifications. These notifications trig
 105:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****           the callbacks HAL_CAN_RxFIFO0MsgPendingCallback() and
 106:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****           HAL_CAN_RxFIFO1MsgPendingCallback(). User has two possible options
 107:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****           here.
 108:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****             (++) Directly get the Rx message in the callback, using
 109:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****                  HAL_CAN_GetRxMessage().
 110:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****             (++) Or deactivate the notification in the callback without
 111:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****                  getting the Rx message. The Rx message can then be got later
 112:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****                  using HAL_CAN_GetRxMessage(). Once the Rx message have been
 113:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****                  read, the notification can be activated again.
 114:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** 
 115:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** 
 116:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****       *** Sleep mode ***
 117:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****       ==================
 118:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****     [..]
 119:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****       (#) The CAN peripheral can be put in sleep mode (low power), using
 120:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****           HAL_CAN_RequestSleep(). The sleep mode will be entered as soon as the
 121:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****           current CAN activity (transmission or reception of a CAN frame) will
 122:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****           be completed.
 123:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** 
 124:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****       (#) A notification can be activated to be informed when the sleep mode
 125:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****           will be entered.
 126:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** 
 127:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****       (#) It can be checked if the sleep mode is entered using
 128:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****           HAL_CAN_IsSleepActive().
 129:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****           Note that the CAN state (accessible from the API HAL_CAN_GetState())
 130:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****           is HAL_CAN_STATE_SLEEP_PENDING as soon as the sleep mode request is
 131:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****           submitted (the sleep mode is not yet entered), and become
 132:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****           HAL_CAN_STATE_SLEEP_ACTIVE when the sleep mode is effective.
 133:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** 
 134:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****       (#) The wake-up from sleep mode can be triggered by two ways:
 135:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****             (++) Using HAL_CAN_WakeUp(). When returning from this function,
 136:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****                  the sleep mode is exited (if return status is HAL_OK).
 137:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****             (++) When a start of Rx CAN frame is detected by the CAN peripheral,
 138:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****                  if automatic wake up mode is enabled.
 139:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** 
 140:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   *** Callback registration ***
 141:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   =============================================
 142:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** 
 143:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   The compilation define  USE_HAL_CAN_REGISTER_CALLBACKS when set to 1
ARM GAS  C:\Users\XAVIER~1\AppData\Local\Temp\cc1dYJ0Y.s 			page 4


 144:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   allows the user to configure dynamically the driver callbacks.
 145:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   Use Function HAL_CAN_RegisterCallback() to register an interrupt callback.
 146:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** 
 147:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   Function HAL_CAN_RegisterCallback() allows to register following callbacks:
 148:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****     (+) TxMailbox0CompleteCallback   : Tx Mailbox 0 Complete Callback.
 149:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****     (+) TxMailbox1CompleteCallback   : Tx Mailbox 1 Complete Callback.
 150:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****     (+) TxMailbox2CompleteCallback   : Tx Mailbox 2 Complete Callback.
 151:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****     (+) TxMailbox0AbortCallback      : Tx Mailbox 0 Abort Callback.
 152:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****     (+) TxMailbox1AbortCallback      : Tx Mailbox 1 Abort Callback.
 153:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****     (+) TxMailbox2AbortCallback      : Tx Mailbox 2 Abort Callback.
 154:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****     (+) RxFifo0MsgPendingCallback    : Rx Fifo 0 Message Pending Callback.
 155:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****     (+) RxFifo0FullCallback          : Rx Fifo 0 Full Callback.
 156:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****     (+) RxFifo1MsgPendingCallback    : Rx Fifo 1 Message Pending Callback.
 157:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****     (+) RxFifo1FullCallback          : Rx Fifo 1 Full Callback.
 158:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****     (+) SleepCallback                : Sleep Callback.
 159:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****     (+) WakeUpFromRxMsgCallback      : Wake Up From Rx Message Callback.
 160:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****     (+) ErrorCallback                : Error Callback.
 161:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****     (+) MspInitCallback              : CAN MspInit.
 162:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****     (+) MspDeInitCallback            : CAN MspDeInit.
 163:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   This function takes as parameters the HAL peripheral handle, the Callback ID
 164:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   and a pointer to the user callback function.
 165:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** 
 166:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   Use function HAL_CAN_UnRegisterCallback() to reset a callback to the default
 167:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   weak function.
 168:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   HAL_CAN_UnRegisterCallback takes as parameters the HAL peripheral handle,
 169:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   and the Callback ID.
 170:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   This function allows to reset following callbacks:
 171:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****     (+) TxMailbox0CompleteCallback   : Tx Mailbox 0 Complete Callback.
 172:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****     (+) TxMailbox1CompleteCallback   : Tx Mailbox 1 Complete Callback.
 173:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****     (+) TxMailbox2CompleteCallback   : Tx Mailbox 2 Complete Callback.
 174:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****     (+) TxMailbox0AbortCallback      : Tx Mailbox 0 Abort Callback.
 175:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****     (+) TxMailbox1AbortCallback      : Tx Mailbox 1 Abort Callback.
 176:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****     (+) TxMailbox2AbortCallback      : Tx Mailbox 2 Abort Callback.
 177:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****     (+) RxFifo0MsgPendingCallback    : Rx Fifo 0 Message Pending Callback.
 178:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****     (+) RxFifo0FullCallback          : Rx Fifo 0 Full Callback.
 179:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****     (+) RxFifo1MsgPendingCallback    : Rx Fifo 1 Message Pending Callback.
 180:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****     (+) RxFifo1FullCallback          : Rx Fifo 1 Full Callback.
 181:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****     (+) SleepCallback                : Sleep Callback.
 182:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****     (+) WakeUpFromRxMsgCallback      : Wake Up From Rx Message Callback.
 183:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****     (+) ErrorCallback                : Error Callback.
 184:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****     (+) MspInitCallback              : CAN MspInit.
 185:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****     (+) MspDeInitCallback            : CAN MspDeInit.
 186:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** 
 187:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   By default, after the HAL_CAN_Init() and when the state is HAL_CAN_STATE_RESET,
 188:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   all callbacks are set to the corresponding weak functions:
 189:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   example HAL_CAN_ErrorCallback().
 190:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   Exception done for MspInit and MspDeInit functions that are
 191:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   reset to the legacy weak function in the HAL_CAN_Init()/ HAL_CAN_DeInit() only when
 192:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   these callbacks are null (not registered beforehand).
 193:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   if not, MspInit or MspDeInit are not null, the HAL_CAN_Init()/ HAL_CAN_DeInit()
 194:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   keep and use the user MspInit/MspDeInit callbacks (registered beforehand)
 195:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** 
 196:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   Callbacks can be registered/unregistered in HAL_CAN_STATE_READY state only.
 197:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   Exception done MspInit/MspDeInit that can be registered/unregistered
 198:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   in HAL_CAN_STATE_READY or HAL_CAN_STATE_RESET state,
 199:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   thus registered (user) MspInit/DeInit callbacks can be used during the Init/DeInit.
 200:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   In that case first register the MspInit/MspDeInit user callbacks
ARM GAS  C:\Users\XAVIER~1\AppData\Local\Temp\cc1dYJ0Y.s 			page 5


 201:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   using HAL_CAN_RegisterCallback() before calling HAL_CAN_DeInit()
 202:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   or HAL_CAN_Init() function.
 203:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** 
 204:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   When The compilation define USE_HAL_CAN_REGISTER_CALLBACKS is set to 0 or
 205:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   not defined, the callback registration feature is not available and all callbacks
 206:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   are set to the corresponding weak functions.
 207:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** 
 208:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   @endverbatim
 209:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   ******************************************************************************
 210:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   */
 211:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** 
 212:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** /* Includes ------------------------------------------------------------------*/
 213:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** #include "stm32f7xx_hal.h"
 214:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** 
 215:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** /** @addtogroup STM32F7xx_HAL_Driver
 216:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   * @{
 217:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   */
 218:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** 
 219:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** #if defined(CAN1)
 220:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** 
 221:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** /** @defgroup CAN CAN
 222:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   * @brief CAN driver modules
 223:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   * @{
 224:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   */
 225:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** 
 226:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** #ifdef HAL_CAN_MODULE_ENABLED
 227:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** 
 228:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** #ifdef HAL_CAN_LEGACY_MODULE_ENABLED
 229:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** #error "The CAN driver cannot be used with its legacy, Please enable only one CAN module at once"
 230:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** #endif /* HAL_CAN_LEGACY_MODULE_ENABLED */
 231:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** 
 232:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** /* Private typedef -----------------------------------------------------------*/
 233:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** /* Private define ------------------------------------------------------------*/
 234:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** /** @defgroup CAN_Private_Constants CAN Private Constants
 235:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   * @{
 236:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   */
 237:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** #define CAN_TIMEOUT_VALUE 10U
 238:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** /**
 239:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   * @}
 240:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   */
 241:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** /* Private macro -------------------------------------------------------------*/
 242:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** /* Private variables ---------------------------------------------------------*/
 243:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** /* Private function prototypes -----------------------------------------------*/
 244:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** /* Exported functions --------------------------------------------------------*/
 245:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** 
 246:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** /** @defgroup CAN_Exported_Functions CAN Exported Functions
 247:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   * @{
 248:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   */
 249:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** 
 250:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** /** @defgroup CAN_Exported_Functions_Group1 Initialization and de-initialization functions
 251:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****  *  @brief    Initialization and Configuration functions
 252:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****  *
 253:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** @verbatim
 254:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   ==============================================================================
 255:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****               ##### Initialization and de-initialization functions #####
 256:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   ==============================================================================
 257:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****     [..]  This section provides functions allowing to:
ARM GAS  C:\Users\XAVIER~1\AppData\Local\Temp\cc1dYJ0Y.s 			page 6


 258:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****       (+) HAL_CAN_Init                       : Initialize and configure the CAN.
 259:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****       (+) HAL_CAN_DeInit                     : De-initialize the CAN.
 260:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****       (+) HAL_CAN_MspInit                    : Initialize the CAN MSP.
 261:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****       (+) HAL_CAN_MspDeInit                  : DeInitialize the CAN MSP.
 262:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** 
 263:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** @endverbatim
 264:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   * @{
 265:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   */
 266:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** 
 267:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** /**
 268:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   * @brief  Initializes the CAN peripheral according to the specified
 269:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   *         parameters in the CAN_InitStruct.
 270:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   * @param  hcan pointer to a CAN_HandleTypeDef structure that contains
 271:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   *         the configuration information for the specified CAN.
 272:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   * @retval HAL status
 273:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   */
 274:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** HAL_StatusTypeDef HAL_CAN_Init(CAN_HandleTypeDef *hcan)
 275:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** {
 276:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   uint32_t tickstart;
 277:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** 
 278:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   /* Check CAN handle */
 279:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   if (hcan == NULL)
 280:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   {
 281:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****     return HAL_ERROR;
 282:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   }
 283:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** 
 284:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   /* Check the parameters */
 285:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   assert_param(IS_CAN_ALL_INSTANCE(hcan->Instance));
 286:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   assert_param(IS_FUNCTIONAL_STATE(hcan->Init.TimeTriggeredMode));
 287:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   assert_param(IS_FUNCTIONAL_STATE(hcan->Init.AutoBusOff));
 288:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   assert_param(IS_FUNCTIONAL_STATE(hcan->Init.AutoWakeUp));
 289:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   assert_param(IS_FUNCTIONAL_STATE(hcan->Init.AutoRetransmission));
 290:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   assert_param(IS_FUNCTIONAL_STATE(hcan->Init.ReceiveFifoLocked));
 291:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   assert_param(IS_FUNCTIONAL_STATE(hcan->Init.TransmitFifoPriority));
 292:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   assert_param(IS_CAN_MODE(hcan->Init.Mode));
 293:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   assert_param(IS_CAN_SJW(hcan->Init.SyncJumpWidth));
 294:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   assert_param(IS_CAN_BS1(hcan->Init.TimeSeg1));
 295:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   assert_param(IS_CAN_BS2(hcan->Init.TimeSeg2));
 296:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   assert_param(IS_CAN_PRESCALER(hcan->Init.Prescaler));
 297:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** 
 298:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** #if USE_HAL_CAN_REGISTER_CALLBACKS == 1
 299:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   if (hcan->State == HAL_CAN_STATE_RESET)
 300:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   {
 301:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****     /* Reset callbacks to legacy functions */
 302:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****     hcan->RxFifo0MsgPendingCallback  =  HAL_CAN_RxFifo0MsgPendingCallback;  /* Legacy weak RxFifo0M
 303:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****     hcan->RxFifo0FullCallback        =  HAL_CAN_RxFifo0FullCallback;        /* Legacy weak RxFifo0F
 304:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****     hcan->RxFifo1MsgPendingCallback  =  HAL_CAN_RxFifo1MsgPendingCallback;  /* Legacy weak RxFifo1M
 305:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****     hcan->RxFifo1FullCallback        =  HAL_CAN_RxFifo1FullCallback;        /* Legacy weak RxFifo1F
 306:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****     hcan->TxMailbox0CompleteCallback =  HAL_CAN_TxMailbox0CompleteCallback; /* Legacy weak TxMailbo
 307:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****     hcan->TxMailbox1CompleteCallback =  HAL_CAN_TxMailbox1CompleteCallback; /* Legacy weak TxMailbo
 308:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****     hcan->TxMailbox2CompleteCallback =  HAL_CAN_TxMailbox2CompleteCallback; /* Legacy weak TxMailbo
 309:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****     hcan->TxMailbox0AbortCallback    =  HAL_CAN_TxMailbox0AbortCallback;    /* Legacy weak TxMailbo
 310:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****     hcan->TxMailbox1AbortCallback    =  HAL_CAN_TxMailbox1AbortCallback;    /* Legacy weak TxMailbo
 311:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****     hcan->TxMailbox2AbortCallback    =  HAL_CAN_TxMailbox2AbortCallback;    /* Legacy weak TxMailbo
 312:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****     hcan->SleepCallback              =  HAL_CAN_SleepCallback;              /* Legacy weak SleepCal
 313:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****     hcan->WakeUpFromRxMsgCallback    =  HAL_CAN_WakeUpFromRxMsgCallback;    /* Legacy weak WakeUpFr
 314:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****     hcan->ErrorCallback              =  HAL_CAN_ErrorCallback;              /* Legacy weak ErrorCal
ARM GAS  C:\Users\XAVIER~1\AppData\Local\Temp\cc1dYJ0Y.s 			page 7


 315:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** 
 316:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****     if (hcan->MspInitCallback == NULL)
 317:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****     {
 318:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****       hcan->MspInitCallback = HAL_CAN_MspInit; /* Legacy weak MspInit */
 319:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****     }
 320:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** 
 321:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****     /* Init the low level hardware: CLOCK, NVIC */
 322:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****     hcan->MspInitCallback(hcan);
 323:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   }
 324:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** 
 325:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** #else
 326:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   if (hcan->State == HAL_CAN_STATE_RESET)
 327:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   {
 328:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****     /* Init the low level hardware: CLOCK, NVIC */
 329:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****     HAL_CAN_MspInit(hcan);
 330:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   }
 331:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** #endif /* (USE_HAL_CAN_REGISTER_CALLBACKS) */
 332:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** 
 333:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   /* Request initialisation */
 334:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   SET_BIT(hcan->Instance->MCR, CAN_MCR_INRQ);
 335:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** 
 336:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   /* Get tick */
 337:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   tickstart = HAL_GetTick();
 338:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** 
 339:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   /* Wait initialisation acknowledge */
 340:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   while ((hcan->Instance->MSR & CAN_MSR_INAK) == 0U)
 341:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   {
 342:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****     if ((HAL_GetTick() - tickstart) > CAN_TIMEOUT_VALUE)
 343:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****     {
 344:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****       /* Update error code */
 345:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****       hcan->ErrorCode |= HAL_CAN_ERROR_TIMEOUT;
 346:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** 
 347:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****       /* Change CAN state */
 348:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****       hcan->State = HAL_CAN_STATE_ERROR;
 349:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** 
 350:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****       return HAL_ERROR;
 351:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****     }
 352:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   }
 353:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** 
 354:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   /* Exit from sleep mode */
 355:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   CLEAR_BIT(hcan->Instance->MCR, CAN_MCR_SLEEP);
 356:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** 
 357:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   /* Get tick */
 358:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   tickstart = HAL_GetTick();
 359:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** 
 360:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   /* Check Sleep mode leave acknowledge */
 361:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   while ((hcan->Instance->MSR & CAN_MSR_SLAK) != 0U)
 362:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   {
 363:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****     if ((HAL_GetTick() - tickstart) > CAN_TIMEOUT_VALUE)
 364:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****     {
 365:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****       /* Update error code */
 366:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****       hcan->ErrorCode |= HAL_CAN_ERROR_TIMEOUT;
 367:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** 
 368:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****       /* Change CAN state */
 369:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****       hcan->State = HAL_CAN_STATE_ERROR;
 370:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** 
 371:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****       return HAL_ERROR;
ARM GAS  C:\Users\XAVIER~1\AppData\Local\Temp\cc1dYJ0Y.s 			page 8


 372:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****     }
 373:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   }
 374:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** 
 375:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   /* Set the time triggered communication mode */
 376:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   if (hcan->Init.TimeTriggeredMode == ENABLE)
 377:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   {
 378:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****     SET_BIT(hcan->Instance->MCR, CAN_MCR_TTCM);
 379:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   }
 380:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   else
 381:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   {
 382:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****     CLEAR_BIT(hcan->Instance->MCR, CAN_MCR_TTCM);
 383:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   }
 384:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** 
 385:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   /* Set the automatic bus-off management */
 386:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   if (hcan->Init.AutoBusOff == ENABLE)
 387:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   {
 388:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****     SET_BIT(hcan->Instance->MCR, CAN_MCR_ABOM);
 389:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   }
 390:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   else
 391:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   {
 392:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****     CLEAR_BIT(hcan->Instance->MCR, CAN_MCR_ABOM);
 393:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   }
 394:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** 
 395:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   /* Set the automatic wake-up mode */
 396:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   if (hcan->Init.AutoWakeUp == ENABLE)
 397:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   {
 398:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****     SET_BIT(hcan->Instance->MCR, CAN_MCR_AWUM);
 399:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   }
 400:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   else
 401:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   {
 402:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****     CLEAR_BIT(hcan->Instance->MCR, CAN_MCR_AWUM);
 403:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   }
 404:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** 
 405:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   /* Set the automatic retransmission */
 406:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   if (hcan->Init.AutoRetransmission == ENABLE)
 407:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   {
 408:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****     CLEAR_BIT(hcan->Instance->MCR, CAN_MCR_NART);
 409:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   }
 410:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   else
 411:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   {
 412:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****     SET_BIT(hcan->Instance->MCR, CAN_MCR_NART);
 413:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   }
 414:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** 
 415:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   /* Set the receive FIFO locked mode */
 416:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   if (hcan->Init.ReceiveFifoLocked == ENABLE)
 417:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   {
 418:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****     SET_BIT(hcan->Instance->MCR, CAN_MCR_RFLM);
 419:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   }
 420:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   else
 421:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   {
 422:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****     CLEAR_BIT(hcan->Instance->MCR, CAN_MCR_RFLM);
 423:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   }
 424:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** 
 425:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   /* Set the transmit FIFO priority */
 426:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   if (hcan->Init.TransmitFifoPriority == ENABLE)
 427:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   {
 428:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****     SET_BIT(hcan->Instance->MCR, CAN_MCR_TXFP);
ARM GAS  C:\Users\XAVIER~1\AppData\Local\Temp\cc1dYJ0Y.s 			page 9


 429:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   }
 430:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   else
 431:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   {
 432:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****     CLEAR_BIT(hcan->Instance->MCR, CAN_MCR_TXFP);
 433:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   }
 434:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** 
 435:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   /* Set the bit timing register */
 436:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   WRITE_REG(hcan->Instance->BTR, (uint32_t)(hcan->Init.Mode           |
 437:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****                                             hcan->Init.SyncJumpWidth  |
 438:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****                                             hcan->Init.TimeSeg1       |
 439:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****                                             hcan->Init.TimeSeg2       |
 440:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****                                             (hcan->Init.Prescaler - 1U)));
 441:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** 
 442:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   /* Initialize the error code */
 443:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   hcan->ErrorCode = HAL_CAN_ERROR_NONE;
 444:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** 
 445:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   /* Initialize the CAN state */
 446:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   hcan->State = HAL_CAN_STATE_READY;
 447:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** 
 448:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   /* Return function status */
 449:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   return HAL_OK;
 450:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** }
 451:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** 
 452:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** /**
 453:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   * @brief  Deinitializes the CAN peripheral registers to their default
 454:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   *         reset values.
 455:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   * @param  hcan pointer to a CAN_HandleTypeDef structure that contains
 456:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   *         the configuration information for the specified CAN.
 457:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   * @retval HAL status
 458:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   */
 459:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** HAL_StatusTypeDef HAL_CAN_DeInit(CAN_HandleTypeDef *hcan)
 460:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** {
 461:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   /* Check CAN handle */
 462:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   if (hcan == NULL)
 463:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   {
 464:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****     return HAL_ERROR;
 465:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   }
 466:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** 
 467:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   /* Check the parameters */
 468:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   assert_param(IS_CAN_ALL_INSTANCE(hcan->Instance));
 469:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** 
 470:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   /* Stop the CAN module */
 471:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   (void)HAL_CAN_Stop(hcan);
 472:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** 
 473:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** #if USE_HAL_CAN_REGISTER_CALLBACKS == 1
 474:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   if (hcan->MspDeInitCallback == NULL)
 475:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   {
 476:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****     hcan->MspDeInitCallback = HAL_CAN_MspDeInit; /* Legacy weak MspDeInit */
 477:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   }
 478:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** 
 479:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   /* DeInit the low level hardware: CLOCK, NVIC */
 480:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   hcan->MspDeInitCallback(hcan);
 481:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** 
 482:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** #else
 483:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   /* DeInit the low level hardware: CLOCK, NVIC */
 484:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   HAL_CAN_MspDeInit(hcan);
 485:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** #endif /* (USE_HAL_CAN_REGISTER_CALLBACKS) */
ARM GAS  C:\Users\XAVIER~1\AppData\Local\Temp\cc1dYJ0Y.s 			page 10


 486:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** 
 487:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   /* Reset the CAN peripheral */
 488:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   SET_BIT(hcan->Instance->MCR, CAN_MCR_RESET);
 489:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** 
 490:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   /* Reset the CAN ErrorCode */
 491:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   hcan->ErrorCode = HAL_CAN_ERROR_NONE;
 492:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** 
 493:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   /* Change CAN state */
 494:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   hcan->State = HAL_CAN_STATE_RESET;
 495:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** 
 496:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   /* Return function status */
 497:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   return HAL_OK;
 498:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** }
 499:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** 
 500:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** /**
 501:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   * @brief  Initializes the CAN MSP.
 502:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   * @param  hcan pointer to a CAN_HandleTypeDef structure that contains
 503:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   *         the configuration information for the specified CAN.
 504:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   * @retval None
 505:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   */
 506:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** __weak void HAL_CAN_MspInit(CAN_HandleTypeDef *hcan)
 507:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** {
  30              		.loc 1 507 1 view -0
  31              		.cfi_startproc
  32              		@ args = 0, pretend = 0, frame = 0
  33              		@ frame_needed = 0, uses_anonymous_args = 0
  34              		@ link register save eliminated.
 508:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   /* Prevent unused argument(s) compilation warning */
 509:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   UNUSED(hcan);
  35              		.loc 1 509 3 view .LVU1
 510:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** 
 511:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
 512:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****             the HAL_CAN_MspInit could be implemented in the user file
 513:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****    */
 514:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** }
  36              		.loc 1 514 1 is_stmt 0 view .LVU2
  37 0000 7047     		bx	lr
  38              		.cfi_endproc
  39              	.LFE143:
  41              		.section	.text.HAL_CAN_Init,"ax",%progbits
  42              		.align	1
  43              		.global	HAL_CAN_Init
  44              		.syntax unified
  45              		.thumb
  46              		.thumb_func
  47              		.fpu fpv5-sp-d16
  49              	HAL_CAN_Init:
  50              	.LVL1:
  51              	.LFB141:
 275:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   uint32_t tickstart;
  52              		.loc 1 275 1 is_stmt 1 view -0
  53              		.cfi_startproc
  54              		@ args = 0, pretend = 0, frame = 0
  55              		@ frame_needed = 0, uses_anonymous_args = 0
 276:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** 
  56              		.loc 1 276 3 view .LVU4
 279:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   {
ARM GAS  C:\Users\XAVIER~1\AppData\Local\Temp\cc1dYJ0Y.s 			page 11


  57              		.loc 1 279 3 view .LVU5
 279:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   {
  58              		.loc 1 279 6 is_stmt 0 view .LVU6
  59 0000 0028     		cmp	r0, #0
  60 0002 00F0A180 		beq	.L21
 275:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   uint32_t tickstart;
  61              		.loc 1 275 1 view .LVU7
  62 0006 38B5     		push	{r3, r4, r5, lr}
  63              	.LCFI0:
  64              		.cfi_def_cfa_offset 16
  65              		.cfi_offset 3, -16
  66              		.cfi_offset 4, -12
  67              		.cfi_offset 5, -8
  68              		.cfi_offset 14, -4
  69 0008 0446     		mov	r4, r0
 285:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   assert_param(IS_FUNCTIONAL_STATE(hcan->Init.TimeTriggeredMode));
  70              		.loc 1 285 3 is_stmt 1 view .LVU8
 286:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   assert_param(IS_FUNCTIONAL_STATE(hcan->Init.AutoBusOff));
  71              		.loc 1 286 3 view .LVU9
 287:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   assert_param(IS_FUNCTIONAL_STATE(hcan->Init.AutoWakeUp));
  72              		.loc 1 287 3 view .LVU10
 288:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   assert_param(IS_FUNCTIONAL_STATE(hcan->Init.AutoRetransmission));
  73              		.loc 1 288 3 view .LVU11
 289:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   assert_param(IS_FUNCTIONAL_STATE(hcan->Init.ReceiveFifoLocked));
  74              		.loc 1 289 3 view .LVU12
 290:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   assert_param(IS_FUNCTIONAL_STATE(hcan->Init.TransmitFifoPriority));
  75              		.loc 1 290 3 view .LVU13
 291:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   assert_param(IS_CAN_MODE(hcan->Init.Mode));
  76              		.loc 1 291 3 view .LVU14
 292:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   assert_param(IS_CAN_SJW(hcan->Init.SyncJumpWidth));
  77              		.loc 1 292 3 view .LVU15
 293:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   assert_param(IS_CAN_BS1(hcan->Init.TimeSeg1));
  78              		.loc 1 293 3 view .LVU16
 294:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   assert_param(IS_CAN_BS2(hcan->Init.TimeSeg2));
  79              		.loc 1 294 3 view .LVU17
 295:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   assert_param(IS_CAN_PRESCALER(hcan->Init.Prescaler));
  80              		.loc 1 295 3 view .LVU18
 296:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** 
  81              		.loc 1 296 3 view .LVU19
 326:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   {
  82              		.loc 1 326 3 view .LVU20
 326:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   {
  83              		.loc 1 326 11 is_stmt 0 view .LVU21
  84 000a 90F82030 		ldrb	r3, [r0, #32]	@ zero_extendqisi2
 326:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   {
  85              		.loc 1 326 6 view .LVU22
  86 000e D3B1     		cbz	r3, .L26
  87              	.LVL2:
  88              	.L4:
 334:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** 
  89              		.loc 1 334 3 is_stmt 1 view .LVU23
  90 0010 2268     		ldr	r2, [r4]
  91 0012 1368     		ldr	r3, [r2]
  92 0014 43F00103 		orr	r3, r3, #1
  93 0018 1360     		str	r3, [r2]
 337:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** 
  94              		.loc 1 337 3 view .LVU24
ARM GAS  C:\Users\XAVIER~1\AppData\Local\Temp\cc1dYJ0Y.s 			page 12


 337:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** 
  95              		.loc 1 337 15 is_stmt 0 view .LVU25
  96 001a FFF7FEFF 		bl	HAL_GetTick
  97              	.LVL3:
  98 001e 0546     		mov	r5, r0
  99              	.LVL4:
 340:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   {
 100              		.loc 1 340 3 is_stmt 1 view .LVU26
 101              	.L5:
 340:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   {
 102              		.loc 1 340 9 view .LVU27
 340:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   {
 103              		.loc 1 340 15 is_stmt 0 view .LVU28
 104 0020 2368     		ldr	r3, [r4]
 340:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   {
 105              		.loc 1 340 25 view .LVU29
 106 0022 5A68     		ldr	r2, [r3, #4]
 340:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   {
 107              		.loc 1 340 9 view .LVU30
 108 0024 12F0010F 		tst	r2, #1
 109 0028 10D1     		bne	.L27
 342:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****     {
 110              		.loc 1 342 5 is_stmt 1 view .LVU31
 342:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****     {
 111              		.loc 1 342 10 is_stmt 0 view .LVU32
 112 002a FFF7FEFF 		bl	HAL_GetTick
 113              	.LVL5:
 342:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****     {
 114              		.loc 1 342 24 view .LVU33
 115 002e 401B     		subs	r0, r0, r5
 342:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****     {
 116              		.loc 1 342 8 view .LVU34
 117 0030 0A28     		cmp	r0, #10
 118 0032 F5D9     		bls	.L5
 345:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** 
 119              		.loc 1 345 7 is_stmt 1 view .LVU35
 345:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** 
 120              		.loc 1 345 23 is_stmt 0 view .LVU36
 121 0034 636A     		ldr	r3, [r4, #36]
 122 0036 43F40033 		orr	r3, r3, #131072
 123 003a 6362     		str	r3, [r4, #36]
 348:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** 
 124              		.loc 1 348 7 is_stmt 1 view .LVU37
 348:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** 
 125              		.loc 1 348 19 is_stmt 0 view .LVU38
 126 003c 0523     		movs	r3, #5
 127 003e 84F82030 		strb	r3, [r4, #32]
 350:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****     }
 128              		.loc 1 350 7 is_stmt 1 view .LVU39
 350:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****     }
 129              		.loc 1 350 14 is_stmt 0 view .LVU40
 130 0042 0120     		movs	r0, #1
 131              	.L3:
 450:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** 
 132              		.loc 1 450 1 view .LVU41
 133 0044 38BD     		pop	{r3, r4, r5, pc}
 134              	.LVL6:
ARM GAS  C:\Users\XAVIER~1\AppData\Local\Temp\cc1dYJ0Y.s 			page 13


 135              	.L26:
 329:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   }
 136              		.loc 1 329 5 is_stmt 1 view .LVU42
 137 0046 FFF7FEFF 		bl	HAL_CAN_MspInit
 138              	.LVL7:
 329:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   }
 139              		.loc 1 329 5 is_stmt 0 view .LVU43
 140 004a E1E7     		b	.L4
 141              	.LVL8:
 142              	.L27:
 355:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** 
 143              		.loc 1 355 3 is_stmt 1 view .LVU44
 144 004c 1A68     		ldr	r2, [r3]
 145 004e 22F00202 		bic	r2, r2, #2
 146 0052 1A60     		str	r2, [r3]
 358:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** 
 147              		.loc 1 358 3 view .LVU45
 358:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** 
 148              		.loc 1 358 15 is_stmt 0 view .LVU46
 149 0054 FFF7FEFF 		bl	HAL_GetTick
 150              	.LVL9:
 151 0058 0546     		mov	r5, r0
 152              	.LVL10:
 361:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   {
 153              		.loc 1 361 3 is_stmt 1 view .LVU47
 154              	.L7:
 361:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   {
 155              		.loc 1 361 9 view .LVU48
 361:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   {
 156              		.loc 1 361 15 is_stmt 0 view .LVU49
 157 005a 2368     		ldr	r3, [r4]
 361:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   {
 158              		.loc 1 361 25 view .LVU50
 159 005c 5A68     		ldr	r2, [r3, #4]
 361:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   {
 160              		.loc 1 361 9 view .LVU51
 161 005e 12F0020F 		tst	r2, #2
 162 0062 0DD0     		beq	.L28
 363:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****     {
 163              		.loc 1 363 5 is_stmt 1 view .LVU52
 363:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****     {
 164              		.loc 1 363 10 is_stmt 0 view .LVU53
 165 0064 FFF7FEFF 		bl	HAL_GetTick
 166              	.LVL11:
 363:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****     {
 167              		.loc 1 363 24 view .LVU54
 168 0068 401B     		subs	r0, r0, r5
 363:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****     {
 169              		.loc 1 363 8 view .LVU55
 170 006a 0A28     		cmp	r0, #10
 171 006c F5D9     		bls	.L7
 366:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** 
 172              		.loc 1 366 7 is_stmt 1 view .LVU56
 366:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** 
 173              		.loc 1 366 23 is_stmt 0 view .LVU57
 174 006e 636A     		ldr	r3, [r4, #36]
 175 0070 43F40033 		orr	r3, r3, #131072
ARM GAS  C:\Users\XAVIER~1\AppData\Local\Temp\cc1dYJ0Y.s 			page 14


 176 0074 6362     		str	r3, [r4, #36]
 369:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** 
 177              		.loc 1 369 7 is_stmt 1 view .LVU58
 369:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** 
 178              		.loc 1 369 19 is_stmt 0 view .LVU59
 179 0076 0523     		movs	r3, #5
 180 0078 84F82030 		strb	r3, [r4, #32]
 371:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****     }
 181              		.loc 1 371 7 is_stmt 1 view .LVU60
 371:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****     }
 182              		.loc 1 371 14 is_stmt 0 view .LVU61
 183 007c 0120     		movs	r0, #1
 184 007e E1E7     		b	.L3
 185              	.L28:
 376:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   {
 186              		.loc 1 376 3 is_stmt 1 view .LVU62
 376:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   {
 187              		.loc 1 376 17 is_stmt 0 view .LVU63
 188 0080 227E     		ldrb	r2, [r4, #24]	@ zero_extendqisi2
 376:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   {
 189              		.loc 1 376 6 view .LVU64
 190 0082 012A     		cmp	r2, #1
 191 0084 3DD0     		beq	.L29
 382:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   }
 192              		.loc 1 382 5 is_stmt 1 view .LVU65
 193 0086 1A68     		ldr	r2, [r3]
 194 0088 22F08002 		bic	r2, r2, #128
 195 008c 1A60     		str	r2, [r3]
 196              	.L10:
 386:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   {
 197              		.loc 1 386 3 view .LVU66
 386:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   {
 198              		.loc 1 386 17 is_stmt 0 view .LVU67
 199 008e 637E     		ldrb	r3, [r4, #25]	@ zero_extendqisi2
 386:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   {
 200              		.loc 1 386 6 view .LVU68
 201 0090 012B     		cmp	r3, #1
 202 0092 3BD0     		beq	.L30
 392:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   }
 203              		.loc 1 392 5 is_stmt 1 view .LVU69
 204 0094 2268     		ldr	r2, [r4]
 205 0096 1368     		ldr	r3, [r2]
 206 0098 23F04003 		bic	r3, r3, #64
 207 009c 1360     		str	r3, [r2]
 208              	.L12:
 396:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   {
 209              		.loc 1 396 3 view .LVU70
 396:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   {
 210              		.loc 1 396 17 is_stmt 0 view .LVU71
 211 009e A37E     		ldrb	r3, [r4, #26]	@ zero_extendqisi2
 396:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   {
 212              		.loc 1 396 6 view .LVU72
 213 00a0 012B     		cmp	r3, #1
 214 00a2 39D0     		beq	.L31
 402:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   }
 215              		.loc 1 402 5 is_stmt 1 view .LVU73
 216 00a4 2268     		ldr	r2, [r4]
ARM GAS  C:\Users\XAVIER~1\AppData\Local\Temp\cc1dYJ0Y.s 			page 15


 217 00a6 1368     		ldr	r3, [r2]
 218 00a8 23F02003 		bic	r3, r3, #32
 219 00ac 1360     		str	r3, [r2]
 220              	.L14:
 406:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   {
 221              		.loc 1 406 3 view .LVU74
 406:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   {
 222              		.loc 1 406 17 is_stmt 0 view .LVU75
 223 00ae E37E     		ldrb	r3, [r4, #27]	@ zero_extendqisi2
 406:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   {
 224              		.loc 1 406 6 view .LVU76
 225 00b0 012B     		cmp	r3, #1
 226 00b2 37D0     		beq	.L32
 412:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   }
 227              		.loc 1 412 5 is_stmt 1 view .LVU77
 228 00b4 2268     		ldr	r2, [r4]
 229 00b6 1368     		ldr	r3, [r2]
 230 00b8 43F01003 		orr	r3, r3, #16
 231 00bc 1360     		str	r3, [r2]
 232              	.L16:
 416:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   {
 233              		.loc 1 416 3 view .LVU78
 416:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   {
 234              		.loc 1 416 17 is_stmt 0 view .LVU79
 235 00be 237F     		ldrb	r3, [r4, #28]	@ zero_extendqisi2
 416:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   {
 236              		.loc 1 416 6 view .LVU80
 237 00c0 012B     		cmp	r3, #1
 238 00c2 35D0     		beq	.L33
 422:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   }
 239              		.loc 1 422 5 is_stmt 1 view .LVU81
 240 00c4 2268     		ldr	r2, [r4]
 241 00c6 1368     		ldr	r3, [r2]
 242 00c8 23F00803 		bic	r3, r3, #8
 243 00cc 1360     		str	r3, [r2]
 244              	.L18:
 426:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   {
 245              		.loc 1 426 3 view .LVU82
 426:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   {
 246              		.loc 1 426 17 is_stmt 0 view .LVU83
 247 00ce 637F     		ldrb	r3, [r4, #29]	@ zero_extendqisi2
 426:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   {
 248              		.loc 1 426 6 view .LVU84
 249 00d0 012B     		cmp	r3, #1
 250 00d2 33D0     		beq	.L34
 432:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   }
 251              		.loc 1 432 5 is_stmt 1 view .LVU85
 252 00d4 2268     		ldr	r2, [r4]
 253 00d6 1368     		ldr	r3, [r2]
 254 00d8 23F00403 		bic	r3, r3, #4
 255 00dc 1360     		str	r3, [r2]
 256              	.L20:
 436:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****                                             hcan->Init.SyncJumpWidth  |
 257              		.loc 1 436 3 view .LVU86
 258 00de A368     		ldr	r3, [r4, #8]
 259 00e0 E268     		ldr	r2, [r4, #12]
 260 00e2 1343     		orrs	r3, r3, r2
ARM GAS  C:\Users\XAVIER~1\AppData\Local\Temp\cc1dYJ0Y.s 			page 16


 261 00e4 2269     		ldr	r2, [r4, #16]
 262 00e6 1343     		orrs	r3, r3, r2
 263 00e8 6269     		ldr	r2, [r4, #20]
 264 00ea 1343     		orrs	r3, r3, r2
 265 00ec 6268     		ldr	r2, [r4, #4]
 266 00ee 013A     		subs	r2, r2, #1
 267 00f0 2168     		ldr	r1, [r4]
 268 00f2 1343     		orrs	r3, r3, r2
 269 00f4 CB61     		str	r3, [r1, #28]
 443:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** 
 270              		.loc 1 443 3 view .LVU87
 443:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** 
 271              		.loc 1 443 19 is_stmt 0 view .LVU88
 272 00f6 0020     		movs	r0, #0
 273 00f8 6062     		str	r0, [r4, #36]
 446:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** 
 274              		.loc 1 446 3 is_stmt 1 view .LVU89
 446:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** 
 275              		.loc 1 446 15 is_stmt 0 view .LVU90
 276 00fa 0123     		movs	r3, #1
 277 00fc 84F82030 		strb	r3, [r4, #32]
 449:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** }
 278              		.loc 1 449 3 is_stmt 1 view .LVU91
 449:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** }
 279              		.loc 1 449 10 is_stmt 0 view .LVU92
 280 0100 A0E7     		b	.L3
 281              	.L29:
 378:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   }
 282              		.loc 1 378 5 is_stmt 1 view .LVU93
 283 0102 1A68     		ldr	r2, [r3]
 284 0104 42F08002 		orr	r2, r2, #128
 285 0108 1A60     		str	r2, [r3]
 286 010a C0E7     		b	.L10
 287              	.L30:
 388:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   }
 288              		.loc 1 388 5 view .LVU94
 289 010c 2268     		ldr	r2, [r4]
 290 010e 1368     		ldr	r3, [r2]
 291 0110 43F04003 		orr	r3, r3, #64
 292 0114 1360     		str	r3, [r2]
 293 0116 C2E7     		b	.L12
 294              	.L31:
 398:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   }
 295              		.loc 1 398 5 view .LVU95
 296 0118 2268     		ldr	r2, [r4]
 297 011a 1368     		ldr	r3, [r2]
 298 011c 43F02003 		orr	r3, r3, #32
 299 0120 1360     		str	r3, [r2]
 300 0122 C4E7     		b	.L14
 301              	.L32:
 408:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   }
 302              		.loc 1 408 5 view .LVU96
 303 0124 2268     		ldr	r2, [r4]
 304 0126 1368     		ldr	r3, [r2]
 305 0128 23F01003 		bic	r3, r3, #16
 306 012c 1360     		str	r3, [r2]
 307 012e C6E7     		b	.L16
ARM GAS  C:\Users\XAVIER~1\AppData\Local\Temp\cc1dYJ0Y.s 			page 17


 308              	.L33:
 418:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   }
 309              		.loc 1 418 5 view .LVU97
 310 0130 2268     		ldr	r2, [r4]
 311 0132 1368     		ldr	r3, [r2]
 312 0134 43F00803 		orr	r3, r3, #8
 313 0138 1360     		str	r3, [r2]
 314 013a C8E7     		b	.L18
 315              	.L34:
 428:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   }
 316              		.loc 1 428 5 view .LVU98
 317 013c 2268     		ldr	r2, [r4]
 318 013e 1368     		ldr	r3, [r2]
 319 0140 43F00403 		orr	r3, r3, #4
 320 0144 1360     		str	r3, [r2]
 321 0146 CAE7     		b	.L20
 322              	.LVL12:
 323              	.L21:
 324              	.LCFI1:
 325              		.cfi_def_cfa_offset 0
 326              		.cfi_restore 3
 327              		.cfi_restore 4
 328              		.cfi_restore 5
 329              		.cfi_restore 14
 281:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   }
 330              		.loc 1 281 12 is_stmt 0 view .LVU99
 331 0148 0120     		movs	r0, #1
 332              	.LVL13:
 450:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** 
 333              		.loc 1 450 1 view .LVU100
 334 014a 7047     		bx	lr
 335              		.cfi_endproc
 336              	.LFE141:
 338              		.section	.text.HAL_CAN_MspDeInit,"ax",%progbits
 339              		.align	1
 340              		.weak	HAL_CAN_MspDeInit
 341              		.syntax unified
 342              		.thumb
 343              		.thumb_func
 344              		.fpu fpv5-sp-d16
 346              	HAL_CAN_MspDeInit:
 347              	.LVL14:
 348              	.LFB144:
 515:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** 
 516:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** /**
 517:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   * @brief  DeInitializes the CAN MSP.
 518:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   * @param  hcan pointer to a CAN_HandleTypeDef structure that contains
 519:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   *         the configuration information for the specified CAN.
 520:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   * @retval None
 521:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   */
 522:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** __weak void HAL_CAN_MspDeInit(CAN_HandleTypeDef *hcan)
 523:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** {
 349              		.loc 1 523 1 is_stmt 1 view -0
 350              		.cfi_startproc
 351              		@ args = 0, pretend = 0, frame = 0
 352              		@ frame_needed = 0, uses_anonymous_args = 0
 353              		@ link register save eliminated.
ARM GAS  C:\Users\XAVIER~1\AppData\Local\Temp\cc1dYJ0Y.s 			page 18


 524:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   /* Prevent unused argument(s) compilation warning */
 525:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   UNUSED(hcan);
 354              		.loc 1 525 3 view .LVU102
 526:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** 
 527:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
 528:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****             the HAL_CAN_MspDeInit could be implemented in the user file
 529:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****    */
 530:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** }
 355              		.loc 1 530 1 is_stmt 0 view .LVU103
 356 0000 7047     		bx	lr
 357              		.cfi_endproc
 358              	.LFE144:
 360              		.section	.text.HAL_CAN_ConfigFilter,"ax",%progbits
 361              		.align	1
 362              		.global	HAL_CAN_ConfigFilter
 363              		.syntax unified
 364              		.thumb
 365              		.thumb_func
 366              		.fpu fpv5-sp-d16
 368              	HAL_CAN_ConfigFilter:
 369              	.LVL15:
 370              	.LFB145:
 531:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** 
 532:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** #if USE_HAL_CAN_REGISTER_CALLBACKS == 1
 533:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** /**
 534:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   * @brief  Register a CAN CallBack.
 535:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   *         To be used instead of the weak predefined callback
 536:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   * @param  hcan pointer to a CAN_HandleTypeDef structure that contains
 537:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   *         the configuration information for CAN module
 538:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   * @param  CallbackID ID of the callback to be registered
 539:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   *         This parameter can be one of the following values:
 540:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   *           @arg @ref HAL_CAN_TX_MAILBOX0_COMPLETE_CB_ID Tx Mailbox 0 Complete callback ID
 541:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   *           @arg @ref HAL_CAN_TX_MAILBOX1_COMPLETE_CB_ID Tx Mailbox 1 Complete callback ID
 542:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   *           @arg @ref HAL_CAN_TX_MAILBOX2_COMPLETE_CB_ID Tx Mailbox 2 Complete callback ID
 543:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   *           @arg @ref HAL_CAN_TX_MAILBOX0_ABORT_CB_ID Tx Mailbox 0 Abort callback ID
 544:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   *           @arg @ref HAL_CAN_TX_MAILBOX1_ABORT_CB_ID Tx Mailbox 1 Abort callback ID
 545:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   *           @arg @ref HAL_CAN_TX_MAILBOX2_ABORT_CB_ID Tx Mailbox 2 Abort callback ID
 546:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   *           @arg @ref HAL_CAN_RX_FIFO0_MSG_PENDING_CB_ID Rx Fifo 0 message pending callback ID
 547:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   *           @arg @ref HAL_CAN_RX_FIFO0_FULL_CB_ID Rx Fifo 0 full callback ID
 548:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   *           @arg @ref HAL_CAN_RX_FIFO1_MSG_PENDING_CB_ID Rx Fifo 1 message pending callback ID
 549:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   *           @arg @ref HAL_CAN_RX_FIFO1_FULL_CB_ID Rx Fifo 1 full callback ID
 550:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   *           @arg @ref HAL_CAN_SLEEP_CB_ID Sleep callback ID
 551:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   *           @arg @ref HAL_CAN_WAKEUP_FROM_RX_MSG_CB_ID Wake Up from Rx message callback ID
 552:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   *           @arg @ref HAL_CAN_ERROR_CB_ID Error callback ID
 553:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   *           @arg @ref HAL_CAN_MSPINIT_CB_ID MspInit callback ID
 554:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   *           @arg @ref HAL_CAN_MSPDEINIT_CB_ID MspDeInit callback ID
 555:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   * @param  pCallback pointer to the Callback function
 556:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   * @retval HAL status
 557:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   */
 558:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** HAL_StatusTypeDef HAL_CAN_RegisterCallback(CAN_HandleTypeDef *hcan, HAL_CAN_CallbackIDTypeDef Callb
 559:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****                                            void (* pCallback)(CAN_HandleTypeDef *_hcan))
 560:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** {
 561:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   HAL_StatusTypeDef status = HAL_OK;
 562:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** 
 563:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   if (pCallback == NULL)
 564:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   {
 565:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****     /* Update the error code */
ARM GAS  C:\Users\XAVIER~1\AppData\Local\Temp\cc1dYJ0Y.s 			page 19


 566:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****     hcan->ErrorCode |= HAL_CAN_ERROR_INVALID_CALLBACK;
 567:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** 
 568:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****     return HAL_ERROR;
 569:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   }
 570:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** 
 571:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   if (hcan->State == HAL_CAN_STATE_READY)
 572:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   {
 573:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****     switch (CallbackID)
 574:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****     {
 575:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****       case HAL_CAN_TX_MAILBOX0_COMPLETE_CB_ID :
 576:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****         hcan->TxMailbox0CompleteCallback = pCallback;
 577:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****         break;
 578:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** 
 579:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****       case HAL_CAN_TX_MAILBOX1_COMPLETE_CB_ID :
 580:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****         hcan->TxMailbox1CompleteCallback = pCallback;
 581:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****         break;
 582:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** 
 583:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****       case HAL_CAN_TX_MAILBOX2_COMPLETE_CB_ID :
 584:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****         hcan->TxMailbox2CompleteCallback = pCallback;
 585:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****         break;
 586:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** 
 587:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****       case HAL_CAN_TX_MAILBOX0_ABORT_CB_ID :
 588:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****         hcan->TxMailbox0AbortCallback = pCallback;
 589:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****         break;
 590:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** 
 591:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****       case HAL_CAN_TX_MAILBOX1_ABORT_CB_ID :
 592:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****         hcan->TxMailbox1AbortCallback = pCallback;
 593:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****         break;
 594:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** 
 595:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****       case HAL_CAN_TX_MAILBOX2_ABORT_CB_ID :
 596:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****         hcan->TxMailbox2AbortCallback = pCallback;
 597:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****         break;
 598:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** 
 599:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****       case HAL_CAN_RX_FIFO0_MSG_PENDING_CB_ID :
 600:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****         hcan->RxFifo0MsgPendingCallback = pCallback;
 601:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****         break;
 602:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** 
 603:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****       case HAL_CAN_RX_FIFO0_FULL_CB_ID :
 604:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****         hcan->RxFifo0FullCallback = pCallback;
 605:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****         break;
 606:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** 
 607:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****       case HAL_CAN_RX_FIFO1_MSG_PENDING_CB_ID :
 608:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****         hcan->RxFifo1MsgPendingCallback = pCallback;
 609:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****         break;
 610:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** 
 611:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****       case HAL_CAN_RX_FIFO1_FULL_CB_ID :
 612:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****         hcan->RxFifo1FullCallback = pCallback;
 613:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****         break;
 614:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** 
 615:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****       case HAL_CAN_SLEEP_CB_ID :
 616:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****         hcan->SleepCallback = pCallback;
 617:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****         break;
 618:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** 
 619:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****       case HAL_CAN_WAKEUP_FROM_RX_MSG_CB_ID :
 620:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****         hcan->WakeUpFromRxMsgCallback = pCallback;
 621:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****         break;
 622:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** 
ARM GAS  C:\Users\XAVIER~1\AppData\Local\Temp\cc1dYJ0Y.s 			page 20


 623:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****       case HAL_CAN_ERROR_CB_ID :
 624:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****         hcan->ErrorCallback = pCallback;
 625:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****         break;
 626:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** 
 627:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****       case HAL_CAN_MSPINIT_CB_ID :
 628:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****         hcan->MspInitCallback = pCallback;
 629:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****         break;
 630:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** 
 631:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****       case HAL_CAN_MSPDEINIT_CB_ID :
 632:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****         hcan->MspDeInitCallback = pCallback;
 633:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****         break;
 634:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** 
 635:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****       default :
 636:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****         /* Update the error code */
 637:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****         hcan->ErrorCode |= HAL_CAN_ERROR_INVALID_CALLBACK;
 638:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** 
 639:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****         /* Return error status */
 640:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****         status =  HAL_ERROR;
 641:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****         break;
 642:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****     }
 643:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   }
 644:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   else if (hcan->State == HAL_CAN_STATE_RESET)
 645:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   {
 646:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****     switch (CallbackID)
 647:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****     {
 648:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****       case HAL_CAN_MSPINIT_CB_ID :
 649:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****         hcan->MspInitCallback = pCallback;
 650:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****         break;
 651:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** 
 652:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****       case HAL_CAN_MSPDEINIT_CB_ID :
 653:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****         hcan->MspDeInitCallback = pCallback;
 654:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****         break;
 655:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** 
 656:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****       default :
 657:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****         /* Update the error code */
 658:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****         hcan->ErrorCode |= HAL_CAN_ERROR_INVALID_CALLBACK;
 659:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** 
 660:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****         /* Return error status */
 661:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****         status =  HAL_ERROR;
 662:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****         break;
 663:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****     }
 664:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   }
 665:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   else
 666:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   {
 667:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****     /* Update the error code */
 668:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****     hcan->ErrorCode |= HAL_CAN_ERROR_INVALID_CALLBACK;
 669:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** 
 670:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****     /* Return error status */
 671:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****     status =  HAL_ERROR;
 672:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   }
 673:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** 
 674:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   return status;
 675:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** }
 676:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** 
 677:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** /**
 678:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   * @brief  Unregister a CAN CallBack.
 679:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   *         CAN callback is redirected to the weak predefined callback
ARM GAS  C:\Users\XAVIER~1\AppData\Local\Temp\cc1dYJ0Y.s 			page 21


 680:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   * @param  hcan pointer to a CAN_HandleTypeDef structure that contains
 681:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   *         the configuration information for CAN module
 682:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   * @param  CallbackID ID of the callback to be unregistered
 683:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   *         This parameter can be one of the following values:
 684:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   *           @arg @ref HAL_CAN_TX_MAILBOX0_COMPLETE_CB_ID Tx Mailbox 0 Complete callback ID
 685:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   *           @arg @ref HAL_CAN_TX_MAILBOX1_COMPLETE_CB_ID Tx Mailbox 1 Complete callback ID
 686:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   *           @arg @ref HAL_CAN_TX_MAILBOX2_COMPLETE_CB_ID Tx Mailbox 2 Complete callback ID
 687:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   *           @arg @ref HAL_CAN_TX_MAILBOX0_ABORT_CB_ID Tx Mailbox 0 Abort callback ID
 688:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   *           @arg @ref HAL_CAN_TX_MAILBOX1_ABORT_CB_ID Tx Mailbox 1 Abort callback ID
 689:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   *           @arg @ref HAL_CAN_TX_MAILBOX2_ABORT_CB_ID Tx Mailbox 2 Abort callback ID
 690:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   *           @arg @ref HAL_CAN_RX_FIFO0_MSG_PENDING_CB_ID Rx Fifo 0 message pending callback ID
 691:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   *           @arg @ref HAL_CAN_RX_FIFO0_FULL_CB_ID Rx Fifo 0 full callback ID
 692:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   *           @arg @ref HAL_CAN_RX_FIFO1_MSG_PENDING_CB_ID Rx Fifo 1 message pending callback ID
 693:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   *           @arg @ref HAL_CAN_RX_FIFO1_FULL_CB_ID Rx Fifo 1 full callback ID
 694:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   *           @arg @ref HAL_CAN_SLEEP_CB_ID Sleep callback ID
 695:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   *           @arg @ref HAL_CAN_WAKEUP_FROM_RX_MSG_CB_ID Wake Up from Rx message callback ID
 696:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   *           @arg @ref HAL_CAN_ERROR_CB_ID Error callback ID
 697:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   *           @arg @ref HAL_CAN_MSPINIT_CB_ID MspInit callback ID
 698:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   *           @arg @ref HAL_CAN_MSPDEINIT_CB_ID MspDeInit callback ID
 699:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   * @retval HAL status
 700:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   */
 701:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** HAL_StatusTypeDef HAL_CAN_UnRegisterCallback(CAN_HandleTypeDef *hcan, HAL_CAN_CallbackIDTypeDef Cal
 702:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** {
 703:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   HAL_StatusTypeDef status = HAL_OK;
 704:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** 
 705:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   if (hcan->State == HAL_CAN_STATE_READY)
 706:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   {
 707:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****     switch (CallbackID)
 708:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****     {
 709:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****       case HAL_CAN_TX_MAILBOX0_COMPLETE_CB_ID :
 710:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****         hcan->TxMailbox0CompleteCallback = HAL_CAN_TxMailbox0CompleteCallback;
 711:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****         break;
 712:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** 
 713:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****       case HAL_CAN_TX_MAILBOX1_COMPLETE_CB_ID :
 714:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****         hcan->TxMailbox1CompleteCallback = HAL_CAN_TxMailbox1CompleteCallback;
 715:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****         break;
 716:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** 
 717:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****       case HAL_CAN_TX_MAILBOX2_COMPLETE_CB_ID :
 718:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****         hcan->TxMailbox2CompleteCallback = HAL_CAN_TxMailbox2CompleteCallback;
 719:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****         break;
 720:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** 
 721:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****       case HAL_CAN_TX_MAILBOX0_ABORT_CB_ID :
 722:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****         hcan->TxMailbox0AbortCallback = HAL_CAN_TxMailbox0AbortCallback;
 723:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****         break;
 724:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** 
 725:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****       case HAL_CAN_TX_MAILBOX1_ABORT_CB_ID :
 726:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****         hcan->TxMailbox1AbortCallback = HAL_CAN_TxMailbox1AbortCallback;
 727:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****         break;
 728:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** 
 729:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****       case HAL_CAN_TX_MAILBOX2_ABORT_CB_ID :
 730:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****         hcan->TxMailbox2AbortCallback = HAL_CAN_TxMailbox2AbortCallback;
 731:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****         break;
 732:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** 
 733:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****       case HAL_CAN_RX_FIFO0_MSG_PENDING_CB_ID :
 734:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****         hcan->RxFifo0MsgPendingCallback = HAL_CAN_RxFifo0MsgPendingCallback;
 735:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****         break;
 736:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** 
ARM GAS  C:\Users\XAVIER~1\AppData\Local\Temp\cc1dYJ0Y.s 			page 22


 737:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****       case HAL_CAN_RX_FIFO0_FULL_CB_ID :
 738:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****         hcan->RxFifo0FullCallback = HAL_CAN_RxFifo0FullCallback;
 739:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****         break;
 740:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** 
 741:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****       case HAL_CAN_RX_FIFO1_MSG_PENDING_CB_ID :
 742:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****         hcan->RxFifo1MsgPendingCallback = HAL_CAN_RxFifo1MsgPendingCallback;
 743:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****         break;
 744:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** 
 745:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****       case HAL_CAN_RX_FIFO1_FULL_CB_ID :
 746:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****         hcan->RxFifo1FullCallback = HAL_CAN_RxFifo1FullCallback;
 747:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****         break;
 748:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** 
 749:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****       case HAL_CAN_SLEEP_CB_ID :
 750:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****         hcan->SleepCallback = HAL_CAN_SleepCallback;
 751:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****         break;
 752:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** 
 753:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****       case HAL_CAN_WAKEUP_FROM_RX_MSG_CB_ID :
 754:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****         hcan->WakeUpFromRxMsgCallback = HAL_CAN_WakeUpFromRxMsgCallback;
 755:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****         break;
 756:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** 
 757:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****       case HAL_CAN_ERROR_CB_ID :
 758:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****         hcan->ErrorCallback = HAL_CAN_ErrorCallback;
 759:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****         break;
 760:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** 
 761:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****       case HAL_CAN_MSPINIT_CB_ID :
 762:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****         hcan->MspInitCallback = HAL_CAN_MspInit;
 763:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****         break;
 764:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** 
 765:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****       case HAL_CAN_MSPDEINIT_CB_ID :
 766:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****         hcan->MspDeInitCallback = HAL_CAN_MspDeInit;
 767:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****         break;
 768:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** 
 769:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****       default :
 770:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****         /* Update the error code */
 771:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****         hcan->ErrorCode |= HAL_CAN_ERROR_INVALID_CALLBACK;
 772:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** 
 773:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****         /* Return error status */
 774:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****         status =  HAL_ERROR;
 775:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****         break;
 776:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****     }
 777:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   }
 778:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   else if (hcan->State == HAL_CAN_STATE_RESET)
 779:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   {
 780:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****     switch (CallbackID)
 781:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****     {
 782:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****       case HAL_CAN_MSPINIT_CB_ID :
 783:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****         hcan->MspInitCallback = HAL_CAN_MspInit;
 784:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****         break;
 785:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** 
 786:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****       case HAL_CAN_MSPDEINIT_CB_ID :
 787:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****         hcan->MspDeInitCallback = HAL_CAN_MspDeInit;
 788:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****         break;
 789:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** 
 790:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****       default :
 791:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****         /* Update the error code */
 792:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****         hcan->ErrorCode |= HAL_CAN_ERROR_INVALID_CALLBACK;
 793:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** 
ARM GAS  C:\Users\XAVIER~1\AppData\Local\Temp\cc1dYJ0Y.s 			page 23


 794:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****         /* Return error status */
 795:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****         status =  HAL_ERROR;
 796:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****         break;
 797:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****     }
 798:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   }
 799:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   else
 800:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   {
 801:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****     /* Update the error code */
 802:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****     hcan->ErrorCode |= HAL_CAN_ERROR_INVALID_CALLBACK;
 803:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** 
 804:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****     /* Return error status */
 805:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****     status =  HAL_ERROR;
 806:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   }
 807:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** 
 808:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   return status;
 809:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** }
 810:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** #endif /* USE_HAL_CAN_REGISTER_CALLBACKS */
 811:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** 
 812:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** /**
 813:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   * @}
 814:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   */
 815:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** 
 816:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** /** @defgroup CAN_Exported_Functions_Group2 Configuration functions
 817:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****  *  @brief    Configuration functions.
 818:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****  *
 819:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** @verbatim
 820:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   ==============================================================================
 821:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****               ##### Configuration functions #####
 822:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   ==============================================================================
 823:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****     [..]  This section provides functions allowing to:
 824:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****       (+) HAL_CAN_ConfigFilter            : Configure the CAN reception filters
 825:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** 
 826:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** @endverbatim
 827:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   * @{
 828:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   */
 829:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** 
 830:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** /**
 831:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   * @brief  Configures the CAN reception filter according to the specified
 832:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   *         parameters in the CAN_FilterInitStruct.
 833:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   * @param  hcan pointer to a CAN_HandleTypeDef structure that contains
 834:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   *         the configuration information for the specified CAN.
 835:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   * @param  sFilterConfig pointer to a CAN_FilterTypeDef structure that
 836:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   *         contains the filter configuration information.
 837:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   * @retval None
 838:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   */
 839:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** HAL_StatusTypeDef HAL_CAN_ConfigFilter(CAN_HandleTypeDef *hcan, const CAN_FilterTypeDef *sFilterCon
 840:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** {
 371              		.loc 1 840 1 is_stmt 1 view -0
 372              		.cfi_startproc
 373              		@ args = 0, pretend = 0, frame = 0
 374              		@ frame_needed = 0, uses_anonymous_args = 0
 841:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   uint32_t filternbrbitpos;
 375              		.loc 1 841 3 view .LVU105
 842:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   CAN_TypeDef *can_ip = hcan->Instance;
 376              		.loc 1 842 3 view .LVU106
 843:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   HAL_CAN_StateTypeDef state = hcan->State;
 377              		.loc 1 843 3 view .LVU107
ARM GAS  C:\Users\XAVIER~1\AppData\Local\Temp\cc1dYJ0Y.s 			page 24


 378              		.loc 1 843 24 is_stmt 0 view .LVU108
 379 0000 90F82030 		ldrb	r3, [r0, #32]	@ zero_extendqisi2
 380              	.LVL16:
 844:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** 
 845:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   if ((state == HAL_CAN_STATE_READY) ||
 381              		.loc 1 845 3 is_stmt 1 view .LVU109
 382              		.loc 1 845 38 is_stmt 0 view .LVU110
 383 0004 013B     		subs	r3, r3, #1
 384              	.LVL17:
 385              		.loc 1 845 38 view .LVU111
 386 0006 DBB2     		uxtb	r3, r3
 387              		.loc 1 845 6 view .LVU112
 388 0008 012B     		cmp	r3, #1
 389 000a 05D9     		bls	.L50
 846:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****       (state == HAL_CAN_STATE_LISTENING))
 847:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   {
 848:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****     /* Check the parameters */
 849:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****     assert_param(IS_CAN_FILTER_ID_HALFWORD(sFilterConfig->FilterIdHigh));
 850:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****     assert_param(IS_CAN_FILTER_ID_HALFWORD(sFilterConfig->FilterIdLow));
 851:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****     assert_param(IS_CAN_FILTER_ID_HALFWORD(sFilterConfig->FilterMaskIdHigh));
 852:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****     assert_param(IS_CAN_FILTER_ID_HALFWORD(sFilterConfig->FilterMaskIdLow));
 853:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****     assert_param(IS_CAN_FILTER_MODE(sFilterConfig->FilterMode));
 854:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****     assert_param(IS_CAN_FILTER_SCALE(sFilterConfig->FilterScale));
 855:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****     assert_param(IS_CAN_FILTER_FIFO(sFilterConfig->FilterFIFOAssignment));
 856:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****     assert_param(IS_CAN_FILTER_ACTIVATION(sFilterConfig->FilterActivation));
 857:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** 
 858:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** #if defined(CAN3)
 859:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****     /* Check the CAN instance */
 860:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****     if (hcan->Instance == CAN3)
 861:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****     {
 862:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****       /* CAN3 is single instance with 14 dedicated filters banks */
 863:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** 
 864:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****       /* Check the parameters */
 865:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****       assert_param(IS_CAN_FILTER_BANK_SINGLE(sFilterConfig->FilterBank));
 866:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****     }
 867:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****     else
 868:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****     {
 869:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****       /* CAN1 and CAN2 are dual instances with 28 common filters banks */
 870:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****       /* Select master instance to access the filter banks */
 871:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****       can_ip = CAN1;
 872:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** 
 873:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****       /* Check the parameters */
 874:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****       assert_param(IS_CAN_FILTER_BANK_DUAL(sFilterConfig->FilterBank));
 875:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****       assert_param(IS_CAN_FILTER_BANK_DUAL(sFilterConfig->SlaveStartFilterBank));
 876:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****     }
 877:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** #elif defined(CAN2)
 878:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****     /* CAN1 and CAN2 are dual instances with 28 common filters banks */
 879:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****     /* Select master instance to access the filter banks */
 880:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****     can_ip = CAN1;
 881:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** 
 882:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****     /* Check the parameters */
 883:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****     assert_param(IS_CAN_FILTER_BANK_DUAL(sFilterConfig->FilterBank));
 884:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****     assert_param(IS_CAN_FILTER_BANK_DUAL(sFilterConfig->SlaveStartFilterBank));
 885:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** #else
 886:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****     /* CAN1 is single instance with 14 dedicated filters banks */
 887:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** 
 888:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****     /* Check the parameters */
ARM GAS  C:\Users\XAVIER~1\AppData\Local\Temp\cc1dYJ0Y.s 			page 25


 889:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****     assert_param(IS_CAN_FILTER_BANK_SINGLE(sFilterConfig->FilterBank));
 890:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** #endif
 891:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** 
 892:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****     /* Initialisation mode for the filter */
 893:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****     SET_BIT(can_ip->FMR, CAN_FMR_FINIT);
 894:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** 
 895:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** #if defined(CAN3)
 896:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****     /* Check the CAN instance */
 897:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****     if (can_ip == CAN1)
 898:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****     {
 899:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****       /* Select the start filter number of CAN2 slave instance */
 900:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****       CLEAR_BIT(can_ip->FMR, CAN_FMR_CAN2SB);
 901:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****       SET_BIT(can_ip->FMR, sFilterConfig->SlaveStartFilterBank << CAN_FMR_CAN2SB_Pos);
 902:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****     }
 903:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** 
 904:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** #elif defined(CAN2)
 905:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****     /* Select the start filter number of CAN2 slave instance */
 906:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****     CLEAR_BIT(can_ip->FMR, CAN_FMR_CAN2SB);
 907:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****     SET_BIT(can_ip->FMR, sFilterConfig->SlaveStartFilterBank << CAN_FMR_CAN2SB_Pos);
 908:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** 
 909:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** #endif
 910:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****     /* Convert filter number into bit position */
 911:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****     filternbrbitpos = (uint32_t)1 << (sFilterConfig->FilterBank & 0x1FU);
 912:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** 
 913:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****     /* Filter Deactivation */
 914:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****     CLEAR_BIT(can_ip->FA1R, filternbrbitpos);
 915:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** 
 916:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****     /* Filter Scale */
 917:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****     if (sFilterConfig->FilterScale == CAN_FILTERSCALE_16BIT)
 918:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****     {
 919:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****       /* 16-bit scale for the filter */
 920:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****       CLEAR_BIT(can_ip->FS1R, filternbrbitpos);
 921:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** 
 922:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****       /* First 16-bit identifier and First 16-bit mask */
 923:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****       /* Or First 16-bit identifier and Second 16-bit identifier */
 924:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****       can_ip->sFilterRegister[sFilterConfig->FilterBank].FR1 =
 925:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****         ((0x0000FFFFU & (uint32_t)sFilterConfig->FilterMaskIdLow) << 16U) |
 926:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****         (0x0000FFFFU & (uint32_t)sFilterConfig->FilterIdLow);
 927:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** 
 928:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****       /* Second 16-bit identifier and Second 16-bit mask */
 929:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****       /* Or Third 16-bit identifier and Fourth 16-bit identifier */
 930:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****       can_ip->sFilterRegister[sFilterConfig->FilterBank].FR2 =
 931:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****         ((0x0000FFFFU & (uint32_t)sFilterConfig->FilterMaskIdHigh) << 16U) |
 932:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****         (0x0000FFFFU & (uint32_t)sFilterConfig->FilterIdHigh);
 933:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****     }
 934:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** 
 935:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****     if (sFilterConfig->FilterScale == CAN_FILTERSCALE_32BIT)
 936:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****     {
 937:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****       /* 32-bit scale for the filter */
 938:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****       SET_BIT(can_ip->FS1R, filternbrbitpos);
 939:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** 
 940:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****       /* 32-bit identifier or First 32-bit identifier */
 941:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****       can_ip->sFilterRegister[sFilterConfig->FilterBank].FR1 =
 942:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****         ((0x0000FFFFU & (uint32_t)sFilterConfig->FilterIdHigh) << 16U) |
 943:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****         (0x0000FFFFU & (uint32_t)sFilterConfig->FilterIdLow);
 944:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** 
 945:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****       /* 32-bit mask or Second 32-bit identifier */
ARM GAS  C:\Users\XAVIER~1\AppData\Local\Temp\cc1dYJ0Y.s 			page 26


 946:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****       can_ip->sFilterRegister[sFilterConfig->FilterBank].FR2 =
 947:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****         ((0x0000FFFFU & (uint32_t)sFilterConfig->FilterMaskIdHigh) << 16U) |
 948:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****         (0x0000FFFFU & (uint32_t)sFilterConfig->FilterMaskIdLow);
 949:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****     }
 950:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** 
 951:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****     /* Filter Mode */
 952:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****     if (sFilterConfig->FilterMode == CAN_FILTERMODE_IDMASK)
 953:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****     {
 954:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****       /* Id/Mask mode for the filter*/
 955:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****       CLEAR_BIT(can_ip->FM1R, filternbrbitpos);
 956:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****     }
 957:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****     else /* CAN_FilterInitStruct->CAN_FilterMode == CAN_FilterMode_IdList */
 958:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****     {
 959:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****       /* Identifier list mode for the filter*/
 960:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****       SET_BIT(can_ip->FM1R, filternbrbitpos);
 961:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****     }
 962:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** 
 963:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****     /* Filter FIFO assignment */
 964:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****     if (sFilterConfig->FilterFIFOAssignment == CAN_FILTER_FIFO0)
 965:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****     {
 966:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****       /* FIFO 0 assignation for the filter */
 967:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****       CLEAR_BIT(can_ip->FFA1R, filternbrbitpos);
 968:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****     }
 969:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****     else
 970:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****     {
 971:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****       /* FIFO 1 assignation for the filter */
 972:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****       SET_BIT(can_ip->FFA1R, filternbrbitpos);
 973:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****     }
 974:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** 
 975:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****     /* Filter activation */
 976:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****     if (sFilterConfig->FilterActivation == CAN_FILTER_ENABLE)
 977:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****     {
 978:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****       SET_BIT(can_ip->FA1R, filternbrbitpos);
 979:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****     }
 980:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** 
 981:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****     /* Leave the initialisation mode for the filter */
 982:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****     CLEAR_BIT(can_ip->FMR, CAN_FMR_FINIT);
 983:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** 
 984:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****     /* Return function status */
 985:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****     return HAL_OK;
 986:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   }
 987:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   else
 988:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   {
 989:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****     /* Update error code */
 990:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****     hcan->ErrorCode |= HAL_CAN_ERROR_NOT_INITIALIZED;
 390              		.loc 1 990 5 is_stmt 1 view .LVU113
 391              		.loc 1 990 21 is_stmt 0 view .LVU114
 392 000c 436A     		ldr	r3, [r0, #36]
 393 000e 43F48023 		orr	r3, r3, #262144
 394 0012 4362     		str	r3, [r0, #36]
 991:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** 
 992:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****     return HAL_ERROR;
 395              		.loc 1 992 5 is_stmt 1 view .LVU115
 396              		.loc 1 992 12 is_stmt 0 view .LVU116
 397 0014 0120     		movs	r0, #1
 398              	.LVL18:
 993:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   }
ARM GAS  C:\Users\XAVIER~1\AppData\Local\Temp\cc1dYJ0Y.s 			page 27


 994:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** }
 399              		.loc 1 994 1 view .LVU117
 400 0016 7047     		bx	lr
 401              	.LVL19:
 402              	.L50:
 840:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   uint32_t filternbrbitpos;
 403              		.loc 1 840 1 view .LVU118
 404 0018 30B5     		push	{r4, r5, lr}
 405              	.LCFI2:
 406              		.cfi_def_cfa_offset 12
 407              		.cfi_offset 4, -12
 408              		.cfi_offset 5, -8
 409              		.cfi_offset 14, -4
 849:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****     assert_param(IS_CAN_FILTER_ID_HALFWORD(sFilterConfig->FilterIdLow));
 410              		.loc 1 849 5 is_stmt 1 view .LVU119
 850:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****     assert_param(IS_CAN_FILTER_ID_HALFWORD(sFilterConfig->FilterMaskIdHigh));
 411              		.loc 1 850 5 view .LVU120
 851:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****     assert_param(IS_CAN_FILTER_ID_HALFWORD(sFilterConfig->FilterMaskIdLow));
 412              		.loc 1 851 5 view .LVU121
 852:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****     assert_param(IS_CAN_FILTER_MODE(sFilterConfig->FilterMode));
 413              		.loc 1 852 5 view .LVU122
 853:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****     assert_param(IS_CAN_FILTER_SCALE(sFilterConfig->FilterScale));
 414              		.loc 1 853 5 view .LVU123
 854:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****     assert_param(IS_CAN_FILTER_FIFO(sFilterConfig->FilterFIFOAssignment));
 415              		.loc 1 854 5 view .LVU124
 855:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****     assert_param(IS_CAN_FILTER_ACTIVATION(sFilterConfig->FilterActivation));
 416              		.loc 1 855 5 view .LVU125
 856:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** 
 417              		.loc 1 856 5 view .LVU126
 880:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** 
 418              		.loc 1 880 5 view .LVU127
 419              	.LVL20:
 883:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****     assert_param(IS_CAN_FILTER_BANK_DUAL(sFilterConfig->SlaveStartFilterBank));
 420              		.loc 1 883 5 view .LVU128
 884:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** #else
 421              		.loc 1 884 5 view .LVU129
 893:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** 
 422              		.loc 1 893 5 view .LVU130
 423 001a 464B     		ldr	r3, .L53
 424 001c D3F80022 		ldr	r2, [r3, #512]
 425 0020 42F00102 		orr	r2, r2, #1
 426 0024 C3F80022 		str	r2, [r3, #512]
 906:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****     SET_BIT(can_ip->FMR, sFilterConfig->SlaveStartFilterBank << CAN_FMR_CAN2SB_Pos);
 427              		.loc 1 906 5 view .LVU131
 428 0028 D3F80022 		ldr	r2, [r3, #512]
 429 002c 22F47C52 		bic	r2, r2, #16128
 430 0030 C3F80022 		str	r2, [r3, #512]
 907:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** 
 431              		.loc 1 907 5 view .LVU132
 432 0034 D3F80022 		ldr	r2, [r3, #512]
 433 0038 486A     		ldr	r0, [r1, #36]
 434              	.LVL21:
 907:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** 
 435              		.loc 1 907 5 is_stmt 0 view .LVU133
 436 003a 42EA0022 		orr	r2, r2, r0, lsl #8
 437 003e C3F80022 		str	r2, [r3, #512]
 911:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** 
ARM GAS  C:\Users\XAVIER~1\AppData\Local\Temp\cc1dYJ0Y.s 			page 28


 438              		.loc 1 911 5 is_stmt 1 view .LVU134
 911:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** 
 439              		.loc 1 911 52 is_stmt 0 view .LVU135
 440 0042 4A69     		ldr	r2, [r1, #20]
 911:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** 
 441              		.loc 1 911 65 view .LVU136
 442 0044 02F01F02 		and	r2, r2, #31
 911:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** 
 443              		.loc 1 911 21 view .LVU137
 444 0048 0120     		movs	r0, #1
 445 004a 00FA02F2 		lsl	r2, r0, r2
 446              	.LVL22:
 914:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** 
 447              		.loc 1 914 5 is_stmt 1 view .LVU138
 448 004e D3F81C02 		ldr	r0, [r3, #540]
 449 0052 6FEA020C 		mvn	ip, r2
 450 0056 20EA0200 		bic	r0, r0, r2
 451 005a C3F81C02 		str	r0, [r3, #540]
 917:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****     {
 452              		.loc 1 917 5 view .LVU139
 917:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****     {
 453              		.loc 1 917 22 is_stmt 0 view .LVU140
 454 005e CB69     		ldr	r3, [r1, #28]
 917:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****     {
 455              		.loc 1 917 8 view .LVU141
 456 0060 C3B9     		cbnz	r3, .L38
 920:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** 
 457              		.loc 1 920 7 is_stmt 1 view .LVU142
 458 0062 344B     		ldr	r3, .L53
 459 0064 D3F80C02 		ldr	r0, [r3, #524]
 460 0068 0CEA0000 		and	r0, ip, r0
 461 006c C3F80C02 		str	r0, [r3, #524]
 924:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****         ((0x0000FFFFU & (uint32_t)sFilterConfig->FilterMaskIdLow) << 16U) |
 462              		.loc 1 924 7 view .LVU143
 926:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** 
 463              		.loc 1 926 22 is_stmt 0 view .LVU144
 464 0070 8C88     		ldrh	r4, [r1, #4]
 924:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****         ((0x0000FFFFU & (uint32_t)sFilterConfig->FilterMaskIdLow) << 16U) |
 465              		.loc 1 924 44 view .LVU145
 466 0072 4869     		ldr	r0, [r1, #20]
 925:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****         (0x0000FFFFU & (uint32_t)sFilterConfig->FilterIdLow);
 467              		.loc 1 925 75 view .LVU146
 468 0074 CD68     		ldr	r5, [r1, #12]
 469 0076 44EA0544 		orr	r4, r4, r5, lsl #16
 924:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****         ((0x0000FFFFU & (uint32_t)sFilterConfig->FilterMaskIdLow) << 16U) |
 470              		.loc 1 924 62 view .LVU147
 471 007a 4830     		adds	r0, r0, #72
 472 007c 43F83040 		str	r4, [r3, r0, lsl #3]
 930:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****         ((0x0000FFFFU & (uint32_t)sFilterConfig->FilterMaskIdHigh) << 16U) |
 473              		.loc 1 930 7 is_stmt 1 view .LVU148
 931:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****         (0x0000FFFFU & (uint32_t)sFilterConfig->FilterIdHigh);
 474              		.loc 1 931 48 is_stmt 0 view .LVU149
 475 0080 8C68     		ldr	r4, [r1, #8]
 932:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****     }
 476              		.loc 1 932 22 view .LVU150
 477 0082 0888     		ldrh	r0, [r1]
 931:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****         (0x0000FFFFU & (uint32_t)sFilterConfig->FilterIdHigh);
ARM GAS  C:\Users\XAVIER~1\AppData\Local\Temp\cc1dYJ0Y.s 			page 29


 478              		.loc 1 931 76 view .LVU151
 479 0084 40EA0440 		orr	r0, r0, r4, lsl #16
 930:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****         ((0x0000FFFFU & (uint32_t)sFilterConfig->FilterMaskIdHigh) << 16U) |
 480              		.loc 1 930 62 view .LVU152
 481 0088 4C69     		ldr	r4, [r1, #20]
 482 008a 04F1480E 		add	lr, r4, #72
 483 008e 03EBCE03 		add	r3, r3, lr, lsl #3
 484 0092 5860     		str	r0, [r3, #4]
 485              	.L38:
 935:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****     {
 486              		.loc 1 935 5 is_stmt 1 view .LVU153
 935:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****     {
 487              		.loc 1 935 22 is_stmt 0 view .LVU154
 488 0094 CB69     		ldr	r3, [r1, #28]
 935:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****     {
 489              		.loc 1 935 8 view .LVU155
 490 0096 012B     		cmp	r3, #1
 491 0098 1ED0     		beq	.L51
 492              	.L39:
 952:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****     {
 493              		.loc 1 952 5 is_stmt 1 view .LVU156
 952:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****     {
 494              		.loc 1 952 22 is_stmt 0 view .LVU157
 495 009a 8B69     		ldr	r3, [r1, #24]
 952:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****     {
 496              		.loc 1 952 8 view .LVU158
 497 009c 002B     		cmp	r3, #0
 498 009e 33D1     		bne	.L40
 955:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****     }
 499              		.loc 1 955 7 is_stmt 1 view .LVU159
 500 00a0 2448     		ldr	r0, .L53
 501 00a2 D0F80432 		ldr	r3, [r0, #516]
 502 00a6 0CEA0303 		and	r3, ip, r3
 503 00aa C0F80432 		str	r3, [r0, #516]
 504              	.L41:
 964:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****     {
 505              		.loc 1 964 5 view .LVU160
 964:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****     {
 506              		.loc 1 964 22 is_stmt 0 view .LVU161
 507 00ae 0B69     		ldr	r3, [r1, #16]
 964:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****     {
 508              		.loc 1 964 8 view .LVU162
 509 00b0 8BBB     		cbnz	r3, .L42
 967:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****     }
 510              		.loc 1 967 7 is_stmt 1 view .LVU163
 511 00b2 2048     		ldr	r0, .L53
 512 00b4 D0F81432 		ldr	r3, [r0, #532]
 513 00b8 0CEA0303 		and	r3, ip, r3
 514 00bc C0F81432 		str	r3, [r0, #532]
 515              	.L43:
 976:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****     {
 516              		.loc 1 976 5 view .LVU164
 976:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****     {
 517              		.loc 1 976 22 is_stmt 0 view .LVU165
 518 00c0 0B6A     		ldr	r3, [r1, #32]
 976:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****     {
 519              		.loc 1 976 8 view .LVU166
ARM GAS  C:\Users\XAVIER~1\AppData\Local\Temp\cc1dYJ0Y.s 			page 30


 520 00c2 012B     		cmp	r3, #1
 521 00c4 2ED0     		beq	.L52
 522              	.LVL23:
 523              	.L44:
 982:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** 
 524              		.loc 1 982 5 is_stmt 1 view .LVU167
 525 00c6 1B4A     		ldr	r2, .L53
 526 00c8 D2F80032 		ldr	r3, [r2, #512]
 527 00cc 23F00103 		bic	r3, r3, #1
 528 00d0 C2F80032 		str	r3, [r2, #512]
 985:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   }
 529              		.loc 1 985 5 view .LVU168
 985:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   }
 530              		.loc 1 985 12 is_stmt 0 view .LVU169
 531 00d4 0020     		movs	r0, #0
 532              		.loc 1 994 1 view .LVU170
 533 00d6 30BD     		pop	{r4, r5, pc}
 534              	.LVL24:
 535              	.L51:
 938:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** 
 536              		.loc 1 938 7 is_stmt 1 view .LVU171
 537 00d8 164B     		ldr	r3, .L53
 538 00da D3F80C02 		ldr	r0, [r3, #524]
 539 00de 1043     		orrs	r0, r0, r2
 540 00e0 C3F80C02 		str	r0, [r3, #524]
 941:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****         ((0x0000FFFFU & (uint32_t)sFilterConfig->FilterIdHigh) << 16U) |
 541              		.loc 1 941 7 view .LVU172
 943:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** 
 542              		.loc 1 943 22 is_stmt 0 view .LVU173
 543 00e4 8C88     		ldrh	r4, [r1, #4]
 941:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****         ((0x0000FFFFU & (uint32_t)sFilterConfig->FilterIdHigh) << 16U) |
 544              		.loc 1 941 44 view .LVU174
 545 00e6 4869     		ldr	r0, [r1, #20]
 942:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****         (0x0000FFFFU & (uint32_t)sFilterConfig->FilterIdLow);
 546              		.loc 1 942 72 view .LVU175
 547 00e8 0D68     		ldr	r5, [r1]
 548 00ea 44EA0544 		orr	r4, r4, r5, lsl #16
 941:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****         ((0x0000FFFFU & (uint32_t)sFilterConfig->FilterIdHigh) << 16U) |
 549              		.loc 1 941 62 view .LVU176
 550 00ee 4830     		adds	r0, r0, #72
 551 00f0 43F83040 		str	r4, [r3, r0, lsl #3]
 946:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****         ((0x0000FFFFU & (uint32_t)sFilterConfig->FilterMaskIdHigh) << 16U) |
 552              		.loc 1 946 7 is_stmt 1 view .LVU177
 948:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****     }
 553              		.loc 1 948 22 is_stmt 0 view .LVU178
 554 00f4 8889     		ldrh	r0, [r1, #12]
 946:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****         ((0x0000FFFFU & (uint32_t)sFilterConfig->FilterMaskIdHigh) << 16U) |
 555              		.loc 1 946 44 view .LVU179
 556 00f6 4C69     		ldr	r4, [r1, #20]
 947:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****         (0x0000FFFFU & (uint32_t)sFilterConfig->FilterMaskIdLow);
 557              		.loc 1 947 76 view .LVU180
 558 00f8 8D68     		ldr	r5, [r1, #8]
 559 00fa 40EA0540 		orr	r0, r0, r5, lsl #16
 946:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****         ((0x0000FFFFU & (uint32_t)sFilterConfig->FilterMaskIdHigh) << 16U) |
 560              		.loc 1 946 62 view .LVU181
 561 00fe 4834     		adds	r4, r4, #72
 562 0100 03EBC403 		add	r3, r3, r4, lsl #3
ARM GAS  C:\Users\XAVIER~1\AppData\Local\Temp\cc1dYJ0Y.s 			page 31


 563 0104 5860     		str	r0, [r3, #4]
 564 0106 C8E7     		b	.L39
 565              	.L40:
 960:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****     }
 566              		.loc 1 960 7 is_stmt 1 view .LVU182
 567 0108 0A48     		ldr	r0, .L53
 568 010a D0F80432 		ldr	r3, [r0, #516]
 569 010e 1343     		orrs	r3, r3, r2
 570 0110 C0F80432 		str	r3, [r0, #516]
 571 0114 CBE7     		b	.L41
 572              	.L42:
 972:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****     }
 573              		.loc 1 972 7 view .LVU183
 574 0116 0748     		ldr	r0, .L53
 575 0118 D0F81432 		ldr	r3, [r0, #532]
 576 011c 1343     		orrs	r3, r3, r2
 577 011e C0F81432 		str	r3, [r0, #532]
 578 0122 CDE7     		b	.L43
 579              	.L52:
 978:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****     }
 580              		.loc 1 978 7 view .LVU184
 581 0124 0349     		ldr	r1, .L53
 582              	.LVL25:
 978:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****     }
 583              		.loc 1 978 7 is_stmt 0 view .LVU185
 584 0126 D1F81C32 		ldr	r3, [r1, #540]
 585 012a 1A43     		orrs	r2, r2, r3
 586              	.LVL26:
 978:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****     }
 587              		.loc 1 978 7 view .LVU186
 588 012c C1F81C22 		str	r2, [r1, #540]
 589 0130 C9E7     		b	.L44
 590              	.L54:
 591 0132 00BF     		.align	2
 592              	.L53:
 593 0134 00640040 		.word	1073767424
 594              		.cfi_endproc
 595              	.LFE145:
 597              		.section	.text.HAL_CAN_Start,"ax",%progbits
 598              		.align	1
 599              		.global	HAL_CAN_Start
 600              		.syntax unified
 601              		.thumb
 602              		.thumb_func
 603              		.fpu fpv5-sp-d16
 605              	HAL_CAN_Start:
 606              	.LVL27:
 607              	.LFB146:
 995:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** 
 996:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** /**
 997:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   * @}
 998:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   */
 999:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** 
1000:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** /** @defgroup CAN_Exported_Functions_Group3 Control functions
1001:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****  *  @brief    Control functions
1002:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****  *
1003:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** @verbatim
ARM GAS  C:\Users\XAVIER~1\AppData\Local\Temp\cc1dYJ0Y.s 			page 32


1004:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   ==============================================================================
1005:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****                       ##### Control functions #####
1006:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   ==============================================================================
1007:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****     [..]  This section provides functions allowing to:
1008:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****       (+) HAL_CAN_Start                    : Start the CAN module
1009:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****       (+) HAL_CAN_Stop                     : Stop the CAN module
1010:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****       (+) HAL_CAN_RequestSleep             : Request sleep mode entry.
1011:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****       (+) HAL_CAN_WakeUp                   : Wake up from sleep mode.
1012:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****       (+) HAL_CAN_IsSleepActive            : Check is sleep mode is active.
1013:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****       (+) HAL_CAN_AddTxMessage             : Add a message to the Tx mailboxes
1014:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****                                              and activate the corresponding
1015:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****                                              transmission request
1016:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****       (+) HAL_CAN_AbortTxRequest           : Abort transmission request
1017:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****       (+) HAL_CAN_GetTxMailboxesFreeLevel  : Return Tx mailboxes free level
1018:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****       (+) HAL_CAN_IsTxMessagePending       : Check if a transmission request is
1019:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****                                              pending on the selected Tx mailbox
1020:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****       (+) HAL_CAN_GetRxMessage             : Get a CAN frame from the Rx FIFO
1021:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****       (+) HAL_CAN_GetRxFifoFillLevel       : Return Rx FIFO fill level
1022:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** 
1023:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** @endverbatim
1024:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   * @{
1025:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   */
1026:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** 
1027:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** /**
1028:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   * @brief  Start the CAN module.
1029:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   * @param  hcan pointer to an CAN_HandleTypeDef structure that contains
1030:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   *         the configuration information for the specified CAN.
1031:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   * @retval HAL status
1032:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   */
1033:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** HAL_StatusTypeDef HAL_CAN_Start(CAN_HandleTypeDef *hcan)
1034:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** {
 608              		.loc 1 1034 1 is_stmt 1 view -0
 609              		.cfi_startproc
 610              		@ args = 0, pretend = 0, frame = 0
 611              		@ frame_needed = 0, uses_anonymous_args = 0
 612              		.loc 1 1034 1 is_stmt 0 view .LVU188
 613 0000 70B5     		push	{r4, r5, r6, lr}
 614              	.LCFI3:
 615              		.cfi_def_cfa_offset 16
 616              		.cfi_offset 4, -16
 617              		.cfi_offset 5, -12
 618              		.cfi_offset 6, -8
 619              		.cfi_offset 14, -4
 620 0002 0446     		mov	r4, r0
1035:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   uint32_t tickstart;
 621              		.loc 1 1035 3 is_stmt 1 view .LVU189
1036:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** 
1037:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   if (hcan->State == HAL_CAN_STATE_READY)
 622              		.loc 1 1037 3 view .LVU190
 623              		.loc 1 1037 11 is_stmt 0 view .LVU191
 624 0004 90F82050 		ldrb	r5, [r0, #32]	@ zero_extendqisi2
 625 0008 EDB2     		uxtb	r5, r5
 626              		.loc 1 1037 6 view .LVU192
 627 000a 012D     		cmp	r5, #1
 628 000c 06D0     		beq	.L61
1038:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   {
1039:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****     /* Change CAN peripheral state */
ARM GAS  C:\Users\XAVIER~1\AppData\Local\Temp\cc1dYJ0Y.s 			page 33


1040:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****     hcan->State = HAL_CAN_STATE_LISTENING;
1041:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** 
1042:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****     /* Request leave initialisation */
1043:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****     CLEAR_BIT(hcan->Instance->MCR, CAN_MCR_INRQ);
1044:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** 
1045:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****     /* Get tick */
1046:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****     tickstart = HAL_GetTick();
1047:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** 
1048:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****     /* Wait the acknowledge */
1049:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****     while ((hcan->Instance->MSR & CAN_MSR_INAK) != 0U)
1050:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****     {
1051:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****       /* Check for the Timeout */
1052:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****       if ((HAL_GetTick() - tickstart) > CAN_TIMEOUT_VALUE)
1053:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****       {
1054:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****         /* Update error code */
1055:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****         hcan->ErrorCode |= HAL_CAN_ERROR_TIMEOUT;
1056:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** 
1057:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****         /* Change CAN state */
1058:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****         hcan->State = HAL_CAN_STATE_ERROR;
1059:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** 
1060:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****         return HAL_ERROR;
1061:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****       }
1062:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****     }
1063:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** 
1064:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****     /* Reset the CAN ErrorCode */
1065:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****     hcan->ErrorCode = HAL_CAN_ERROR_NONE;
1066:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** 
1067:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****     /* Return function status */
1068:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****     return HAL_OK;
1069:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   }
1070:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   else
1071:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   {
1072:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****     /* Update error code */
1073:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****     hcan->ErrorCode |= HAL_CAN_ERROR_NOT_READY;
 629              		.loc 1 1073 5 is_stmt 1 view .LVU193
 630              		.loc 1 1073 21 is_stmt 0 view .LVU194
 631 000e 436A     		ldr	r3, [r0, #36]
 632 0010 43F40023 		orr	r3, r3, #524288
 633 0014 4362     		str	r3, [r0, #36]
1074:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** 
1075:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****     return HAL_ERROR;
 634              		.loc 1 1075 5 is_stmt 1 view .LVU195
 635              		.loc 1 1075 12 is_stmt 0 view .LVU196
 636 0016 0125     		movs	r5, #1
 637              	.LVL28:
 638              	.L58:
1076:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   }
1077:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** }
 639              		.loc 1 1077 1 view .LVU197
 640 0018 2846     		mov	r0, r5
 641 001a 70BD     		pop	{r4, r5, r6, pc}
 642              	.LVL29:
 643              	.L61:
1040:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** 
 644              		.loc 1 1040 5 is_stmt 1 view .LVU198
1040:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** 
 645              		.loc 1 1040 17 is_stmt 0 view .LVU199
ARM GAS  C:\Users\XAVIER~1\AppData\Local\Temp\cc1dYJ0Y.s 			page 34


 646 001c 0223     		movs	r3, #2
 647 001e 80F82030 		strb	r3, [r0, #32]
1043:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** 
 648              		.loc 1 1043 5 is_stmt 1 view .LVU200
 649 0022 0268     		ldr	r2, [r0]
 650 0024 1368     		ldr	r3, [r2]
 651 0026 23F00103 		bic	r3, r3, #1
 652 002a 1360     		str	r3, [r2]
1046:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** 
 653              		.loc 1 1046 5 view .LVU201
1046:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** 
 654              		.loc 1 1046 17 is_stmt 0 view .LVU202
 655 002c FFF7FEFF 		bl	HAL_GetTick
 656              	.LVL30:
1046:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** 
 657              		.loc 1 1046 17 view .LVU203
 658 0030 0646     		mov	r6, r0
 659              	.LVL31:
1049:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****     {
 660              		.loc 1 1049 5 is_stmt 1 view .LVU204
 661              	.L57:
1049:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****     {
 662              		.loc 1 1049 11 view .LVU205
1049:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****     {
 663              		.loc 1 1049 17 is_stmt 0 view .LVU206
 664 0032 2368     		ldr	r3, [r4]
1049:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****     {
 665              		.loc 1 1049 27 view .LVU207
 666 0034 5B68     		ldr	r3, [r3, #4]
1049:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****     {
 667              		.loc 1 1049 11 view .LVU208
 668 0036 13F0010F 		tst	r3, #1
 669 003a 0CD0     		beq	.L62
1052:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****       {
 670              		.loc 1 1052 7 is_stmt 1 view .LVU209
1052:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****       {
 671              		.loc 1 1052 12 is_stmt 0 view .LVU210
 672 003c FFF7FEFF 		bl	HAL_GetTick
 673              	.LVL32:
1052:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****       {
 674              		.loc 1 1052 26 view .LVU211
 675 0040 831B     		subs	r3, r0, r6
1052:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****       {
 676              		.loc 1 1052 10 view .LVU212
 677 0042 0A2B     		cmp	r3, #10
 678 0044 F5D9     		bls	.L57
1055:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** 
 679              		.loc 1 1055 9 is_stmt 1 view .LVU213
1055:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** 
 680              		.loc 1 1055 25 is_stmt 0 view .LVU214
 681 0046 636A     		ldr	r3, [r4, #36]
 682 0048 43F40033 		orr	r3, r3, #131072
 683 004c 6362     		str	r3, [r4, #36]
1058:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** 
 684              		.loc 1 1058 9 is_stmt 1 view .LVU215
1058:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** 
 685              		.loc 1 1058 21 is_stmt 0 view .LVU216
ARM GAS  C:\Users\XAVIER~1\AppData\Local\Temp\cc1dYJ0Y.s 			page 35


 686 004e 0523     		movs	r3, #5
 687 0050 84F82030 		strb	r3, [r4, #32]
1060:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****       }
 688              		.loc 1 1060 9 is_stmt 1 view .LVU217
1060:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****       }
 689              		.loc 1 1060 16 is_stmt 0 view .LVU218
 690 0054 E0E7     		b	.L58
 691              	.L62:
1065:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** 
 692              		.loc 1 1065 5 is_stmt 1 view .LVU219
1065:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** 
 693              		.loc 1 1065 21 is_stmt 0 view .LVU220
 694 0056 0025     		movs	r5, #0
 695 0058 6562     		str	r5, [r4, #36]
1068:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   }
 696              		.loc 1 1068 5 is_stmt 1 view .LVU221
1068:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   }
 697              		.loc 1 1068 12 is_stmt 0 view .LVU222
 698 005a DDE7     		b	.L58
 699              		.cfi_endproc
 700              	.LFE146:
 702              		.section	.text.HAL_CAN_Stop,"ax",%progbits
 703              		.align	1
 704              		.global	HAL_CAN_Stop
 705              		.syntax unified
 706              		.thumb
 707              		.thumb_func
 708              		.fpu fpv5-sp-d16
 710              	HAL_CAN_Stop:
 711              	.LVL33:
 712              	.LFB147:
1078:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** 
1079:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** /**
1080:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   * @brief  Stop the CAN module and enable access to configuration registers.
1081:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   * @param  hcan pointer to an CAN_HandleTypeDef structure that contains
1082:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   *         the configuration information for the specified CAN.
1083:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   * @retval HAL status
1084:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   */
1085:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** HAL_StatusTypeDef HAL_CAN_Stop(CAN_HandleTypeDef *hcan)
1086:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** {
 713              		.loc 1 1086 1 is_stmt 1 view -0
 714              		.cfi_startproc
 715              		@ args = 0, pretend = 0, frame = 0
 716              		@ frame_needed = 0, uses_anonymous_args = 0
 717              		.loc 1 1086 1 is_stmt 0 view .LVU224
 718 0000 38B5     		push	{r3, r4, r5, lr}
 719              	.LCFI4:
 720              		.cfi_def_cfa_offset 16
 721              		.cfi_offset 3, -16
 722              		.cfi_offset 4, -12
 723              		.cfi_offset 5, -8
 724              		.cfi_offset 14, -4
 725 0002 0446     		mov	r4, r0
1087:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   uint32_t tickstart;
 726              		.loc 1 1087 3 is_stmt 1 view .LVU225
1088:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** 
1089:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   if (hcan->State == HAL_CAN_STATE_LISTENING)
ARM GAS  C:\Users\XAVIER~1\AppData\Local\Temp\cc1dYJ0Y.s 			page 36


 727              		.loc 1 1089 3 view .LVU226
 728              		.loc 1 1089 11 is_stmt 0 view .LVU227
 729 0004 90F82030 		ldrb	r3, [r0, #32]	@ zero_extendqisi2
 730 0008 DBB2     		uxtb	r3, r3
 731              		.loc 1 1089 6 view .LVU228
 732 000a 022B     		cmp	r3, #2
 733 000c 05D0     		beq	.L69
1090:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   {
1091:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****     /* Request initialisation */
1092:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****     SET_BIT(hcan->Instance->MCR, CAN_MCR_INRQ);
1093:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** 
1094:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****     /* Get tick */
1095:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****     tickstart = HAL_GetTick();
1096:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** 
1097:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****     /* Wait the acknowledge */
1098:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****     while ((hcan->Instance->MSR & CAN_MSR_INAK) == 0U)
1099:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****     {
1100:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****       /* Check for the Timeout */
1101:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****       if ((HAL_GetTick() - tickstart) > CAN_TIMEOUT_VALUE)
1102:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****       {
1103:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****         /* Update error code */
1104:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****         hcan->ErrorCode |= HAL_CAN_ERROR_TIMEOUT;
1105:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** 
1106:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****         /* Change CAN state */
1107:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****         hcan->State = HAL_CAN_STATE_ERROR;
1108:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** 
1109:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****         return HAL_ERROR;
1110:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****       }
1111:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****     }
1112:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** 
1113:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****     /* Exit from sleep mode */
1114:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****     CLEAR_BIT(hcan->Instance->MCR, CAN_MCR_SLEEP);
1115:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** 
1116:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****     /* Change CAN peripheral state */
1117:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****     hcan->State = HAL_CAN_STATE_READY;
1118:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** 
1119:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****     /* Return function status */
1120:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****     return HAL_OK;
1121:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   }
1122:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   else
1123:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   {
1124:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****     /* Update error code */
1125:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****     hcan->ErrorCode |= HAL_CAN_ERROR_NOT_STARTED;
 734              		.loc 1 1125 5 is_stmt 1 view .LVU229
 735              		.loc 1 1125 21 is_stmt 0 view .LVU230
 736 000e 436A     		ldr	r3, [r0, #36]
 737 0010 43F48013 		orr	r3, r3, #1048576
 738 0014 4362     		str	r3, [r0, #36]
1126:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** 
1127:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****     return HAL_ERROR;
 739              		.loc 1 1127 5 is_stmt 1 view .LVU231
 740              		.loc 1 1127 12 is_stmt 0 view .LVU232
 741 0016 0120     		movs	r0, #1
 742              	.LVL34:
 743              	.L66:
1128:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   }
1129:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** }
ARM GAS  C:\Users\XAVIER~1\AppData\Local\Temp\cc1dYJ0Y.s 			page 37


 744              		.loc 1 1129 1 view .LVU233
 745 0018 38BD     		pop	{r3, r4, r5, pc}
 746              	.LVL35:
 747              	.L69:
1092:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** 
 748              		.loc 1 1092 5 is_stmt 1 view .LVU234
 749 001a 0268     		ldr	r2, [r0]
 750 001c 1368     		ldr	r3, [r2]
 751 001e 43F00103 		orr	r3, r3, #1
 752 0022 1360     		str	r3, [r2]
1095:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** 
 753              		.loc 1 1095 5 view .LVU235
1095:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** 
 754              		.loc 1 1095 17 is_stmt 0 view .LVU236
 755 0024 FFF7FEFF 		bl	HAL_GetTick
 756              	.LVL36:
1095:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** 
 757              		.loc 1 1095 17 view .LVU237
 758 0028 0546     		mov	r5, r0
 759              	.LVL37:
1098:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****     {
 760              		.loc 1 1098 5 is_stmt 1 view .LVU238
 761              	.L65:
1098:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****     {
 762              		.loc 1 1098 11 view .LVU239
1098:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****     {
 763              		.loc 1 1098 17 is_stmt 0 view .LVU240
 764 002a 2368     		ldr	r3, [r4]
1098:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****     {
 765              		.loc 1 1098 27 view .LVU241
 766 002c 5A68     		ldr	r2, [r3, #4]
1098:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****     {
 767              		.loc 1 1098 11 view .LVU242
 768 002e 12F0010F 		tst	r2, #1
 769 0032 0DD1     		bne	.L70
1101:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****       {
 770              		.loc 1 1101 7 is_stmt 1 view .LVU243
1101:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****       {
 771              		.loc 1 1101 12 is_stmt 0 view .LVU244
 772 0034 FFF7FEFF 		bl	HAL_GetTick
 773              	.LVL38:
1101:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****       {
 774              		.loc 1 1101 26 view .LVU245
 775 0038 431B     		subs	r3, r0, r5
1101:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****       {
 776              		.loc 1 1101 10 view .LVU246
 777 003a 0A2B     		cmp	r3, #10
 778 003c F5D9     		bls	.L65
1104:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** 
 779              		.loc 1 1104 9 is_stmt 1 view .LVU247
1104:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** 
 780              		.loc 1 1104 25 is_stmt 0 view .LVU248
 781 003e 636A     		ldr	r3, [r4, #36]
 782 0040 43F40033 		orr	r3, r3, #131072
 783 0044 6362     		str	r3, [r4, #36]
1107:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** 
 784              		.loc 1 1107 9 is_stmt 1 view .LVU249
ARM GAS  C:\Users\XAVIER~1\AppData\Local\Temp\cc1dYJ0Y.s 			page 38


1107:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** 
 785              		.loc 1 1107 21 is_stmt 0 view .LVU250
 786 0046 0523     		movs	r3, #5
 787 0048 84F82030 		strb	r3, [r4, #32]
1109:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****       }
 788              		.loc 1 1109 9 is_stmt 1 view .LVU251
1109:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****       }
 789              		.loc 1 1109 16 is_stmt 0 view .LVU252
 790 004c 0120     		movs	r0, #1
 791 004e E3E7     		b	.L66
 792              	.L70:
1114:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** 
 793              		.loc 1 1114 5 is_stmt 1 view .LVU253
 794 0050 1A68     		ldr	r2, [r3]
 795 0052 22F00202 		bic	r2, r2, #2
 796 0056 1A60     		str	r2, [r3]
1117:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** 
 797              		.loc 1 1117 5 view .LVU254
1117:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** 
 798              		.loc 1 1117 17 is_stmt 0 view .LVU255
 799 0058 0123     		movs	r3, #1
 800 005a 84F82030 		strb	r3, [r4, #32]
1120:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   }
 801              		.loc 1 1120 5 is_stmt 1 view .LVU256
1120:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   }
 802              		.loc 1 1120 12 is_stmt 0 view .LVU257
 803 005e 0020     		movs	r0, #0
 804 0060 DAE7     		b	.L66
 805              		.cfi_endproc
 806              	.LFE147:
 808              		.section	.text.HAL_CAN_DeInit,"ax",%progbits
 809              		.align	1
 810              		.global	HAL_CAN_DeInit
 811              		.syntax unified
 812              		.thumb
 813              		.thumb_func
 814              		.fpu fpv5-sp-d16
 816              	HAL_CAN_DeInit:
 817              	.LVL39:
 818              	.LFB142:
 460:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   /* Check CAN handle */
 819              		.loc 1 460 1 is_stmt 1 view -0
 820              		.cfi_startproc
 821              		@ args = 0, pretend = 0, frame = 0
 822              		@ frame_needed = 0, uses_anonymous_args = 0
 462:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   {
 823              		.loc 1 462 3 view .LVU259
 462:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   {
 824              		.loc 1 462 6 is_stmt 0 view .LVU260
 825 0000 80B1     		cbz	r0, .L73
 460:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   /* Check CAN handle */
 826              		.loc 1 460 1 view .LVU261
 827 0002 10B5     		push	{r4, lr}
 828              	.LCFI5:
 829              		.cfi_def_cfa_offset 8
 830              		.cfi_offset 4, -8
 831              		.cfi_offset 14, -4
ARM GAS  C:\Users\XAVIER~1\AppData\Local\Temp\cc1dYJ0Y.s 			page 39


 832 0004 0446     		mov	r4, r0
 468:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** 
 833              		.loc 1 468 3 is_stmt 1 view .LVU262
 471:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** 
 834              		.loc 1 471 3 view .LVU263
 471:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** 
 835              		.loc 1 471 9 is_stmt 0 view .LVU264
 836 0006 FFF7FEFF 		bl	HAL_CAN_Stop
 837              	.LVL40:
 484:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** #endif /* (USE_HAL_CAN_REGISTER_CALLBACKS) */
 838              		.loc 1 484 3 is_stmt 1 view .LVU265
 839 000a 2046     		mov	r0, r4
 840 000c FFF7FEFF 		bl	HAL_CAN_MspDeInit
 841              	.LVL41:
 488:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** 
 842              		.loc 1 488 3 view .LVU266
 843 0010 2268     		ldr	r2, [r4]
 844 0012 1368     		ldr	r3, [r2]
 845 0014 43F40043 		orr	r3, r3, #32768
 846 0018 1360     		str	r3, [r2]
 491:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** 
 847              		.loc 1 491 3 view .LVU267
 491:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** 
 848              		.loc 1 491 19 is_stmt 0 view .LVU268
 849 001a 0020     		movs	r0, #0
 850 001c 6062     		str	r0, [r4, #36]
 494:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** 
 851              		.loc 1 494 3 is_stmt 1 view .LVU269
 494:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** 
 852              		.loc 1 494 15 is_stmt 0 view .LVU270
 853 001e 84F82000 		strb	r0, [r4, #32]
 497:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** }
 854              		.loc 1 497 3 is_stmt 1 view .LVU271
 498:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** 
 855              		.loc 1 498 1 is_stmt 0 view .LVU272
 856 0022 10BD     		pop	{r4, pc}
 857              	.LVL42:
 858              	.L73:
 859              	.LCFI6:
 860              		.cfi_def_cfa_offset 0
 861              		.cfi_restore 4
 862              		.cfi_restore 14
 464:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   }
 863              		.loc 1 464 12 view .LVU273
 864 0024 0120     		movs	r0, #1
 865              	.LVL43:
 498:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** 
 866              		.loc 1 498 1 view .LVU274
 867 0026 7047     		bx	lr
 868              		.cfi_endproc
 869              	.LFE142:
 871              		.section	.text.HAL_CAN_RequestSleep,"ax",%progbits
 872              		.align	1
 873              		.global	HAL_CAN_RequestSleep
 874              		.syntax unified
 875              		.thumb
 876              		.thumb_func
ARM GAS  C:\Users\XAVIER~1\AppData\Local\Temp\cc1dYJ0Y.s 			page 40


 877              		.fpu fpv5-sp-d16
 879              	HAL_CAN_RequestSleep:
 880              	.LVL44:
 881              	.LFB148:
1130:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** 
1131:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** /**
1132:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   * @brief  Request the sleep mode (low power) entry.
1133:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   *         When returning from this function, Sleep mode will be entered
1134:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   *         as soon as the current CAN activity (transmission or reception
1135:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   *         of a CAN frame) has been completed.
1136:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   * @param  hcan pointer to a CAN_HandleTypeDef structure that contains
1137:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   *         the configuration information for the specified CAN.
1138:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   * @retval HAL status.
1139:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   */
1140:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** HAL_StatusTypeDef HAL_CAN_RequestSleep(CAN_HandleTypeDef *hcan)
1141:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** {
 882              		.loc 1 1141 1 is_stmt 1 view -0
 883              		.cfi_startproc
 884              		@ args = 0, pretend = 0, frame = 0
 885              		@ frame_needed = 0, uses_anonymous_args = 0
 886              		@ link register save eliminated.
1142:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   HAL_CAN_StateTypeDef state = hcan->State;
 887              		.loc 1 1142 3 view .LVU276
 888              		.loc 1 1142 24 is_stmt 0 view .LVU277
 889 0000 90F82030 		ldrb	r3, [r0, #32]	@ zero_extendqisi2
 890              	.LVL45:
1143:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** 
1144:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   if ((state == HAL_CAN_STATE_READY) ||
 891              		.loc 1 1144 3 is_stmt 1 view .LVU278
 892              		.loc 1 1144 38 is_stmt 0 view .LVU279
 893 0004 013B     		subs	r3, r3, #1
 894              	.LVL46:
 895              		.loc 1 1144 38 view .LVU280
 896 0006 DBB2     		uxtb	r3, r3
 897              		.loc 1 1144 6 view .LVU281
 898 0008 012B     		cmp	r3, #1
 899 000a 05D9     		bls	.L81
1145:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****       (state == HAL_CAN_STATE_LISTENING))
1146:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   {
1147:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****     /* Request Sleep mode */
1148:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****     SET_BIT(hcan->Instance->MCR, CAN_MCR_SLEEP);
1149:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** 
1150:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****     /* Return function status */
1151:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****     return HAL_OK;
1152:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   }
1153:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   else
1154:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   {
1155:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****     /* Update error code */
1156:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****     hcan->ErrorCode |= HAL_CAN_ERROR_NOT_INITIALIZED;
 900              		.loc 1 1156 5 is_stmt 1 view .LVU282
 901              		.loc 1 1156 21 is_stmt 0 view .LVU283
 902 000c 436A     		ldr	r3, [r0, #36]
 903 000e 43F48023 		orr	r3, r3, #262144
 904 0012 4362     		str	r3, [r0, #36]
1157:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** 
1158:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****     /* Return function status */
1159:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****     return HAL_ERROR;
ARM GAS  C:\Users\XAVIER~1\AppData\Local\Temp\cc1dYJ0Y.s 			page 41


 905              		.loc 1 1159 5 is_stmt 1 view .LVU284
 906              		.loc 1 1159 12 is_stmt 0 view .LVU285
 907 0014 0120     		movs	r0, #1
 908              	.LVL47:
1160:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   }
1161:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** }
 909              		.loc 1 1161 1 view .LVU286
 910 0016 7047     		bx	lr
 911              	.LVL48:
 912              	.L81:
1148:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** 
 913              		.loc 1 1148 5 is_stmt 1 view .LVU287
 914 0018 0268     		ldr	r2, [r0]
 915 001a 1368     		ldr	r3, [r2]
 916 001c 43F00203 		orr	r3, r3, #2
 917 0020 1360     		str	r3, [r2]
1151:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   }
 918              		.loc 1 1151 5 view .LVU288
1151:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   }
 919              		.loc 1 1151 12 is_stmt 0 view .LVU289
 920 0022 0020     		movs	r0, #0
 921              	.LVL49:
1151:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   }
 922              		.loc 1 1151 12 view .LVU290
 923 0024 7047     		bx	lr
 924              		.cfi_endproc
 925              	.LFE148:
 927              		.section	.text.HAL_CAN_WakeUp,"ax",%progbits
 928              		.align	1
 929              		.global	HAL_CAN_WakeUp
 930              		.syntax unified
 931              		.thumb
 932              		.thumb_func
 933              		.fpu fpv5-sp-d16
 935              	HAL_CAN_WakeUp:
 936              	.LVL50:
 937              	.LFB149:
1162:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** 
1163:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** /**
1164:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   * @brief  Wake up from sleep mode.
1165:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   *         When returning with HAL_OK status from this function, Sleep mode
1166:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   *         is exited.
1167:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   * @param  hcan pointer to a CAN_HandleTypeDef structure that contains
1168:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   *         the configuration information for the specified CAN.
1169:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   * @retval HAL status.
1170:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   */
1171:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** HAL_StatusTypeDef HAL_CAN_WakeUp(CAN_HandleTypeDef *hcan)
1172:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** {
 938              		.loc 1 1172 1 is_stmt 1 view -0
 939              		.cfi_startproc
 940              		@ args = 0, pretend = 0, frame = 8
 941              		@ frame_needed = 0, uses_anonymous_args = 0
 942              		@ link register save eliminated.
 943              		.loc 1 1172 1 is_stmt 0 view .LVU292
 944 0000 82B0     		sub	sp, sp, #8
 945              	.LCFI7:
 946              		.cfi_def_cfa_offset 8
ARM GAS  C:\Users\XAVIER~1\AppData\Local\Temp\cc1dYJ0Y.s 			page 42


1173:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   __IO uint32_t count = 0;
 947              		.loc 1 1173 3 is_stmt 1 view .LVU293
 948              		.loc 1 1173 17 is_stmt 0 view .LVU294
 949 0002 0023     		movs	r3, #0
 950 0004 0193     		str	r3, [sp, #4]
1174:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   uint32_t timeout = 1000000U;
 951              		.loc 1 1174 3 is_stmt 1 view .LVU295
 952              	.LVL51:
1175:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   HAL_CAN_StateTypeDef state = hcan->State;
 953              		.loc 1 1175 3 view .LVU296
 954              		.loc 1 1175 24 is_stmt 0 view .LVU297
 955 0006 90F82030 		ldrb	r3, [r0, #32]	@ zero_extendqisi2
 956              	.LVL52:
1176:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** 
1177:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   if ((state == HAL_CAN_STATE_READY) ||
 957              		.loc 1 1177 3 is_stmt 1 view .LVU298
 958              		.loc 1 1177 38 is_stmt 0 view .LVU299
 959 000a 013B     		subs	r3, r3, #1
 960              	.LVL53:
 961              		.loc 1 1177 38 view .LVU300
 962 000c DBB2     		uxtb	r3, r3
 963              		.loc 1 1177 6 view .LVU301
 964 000e 012B     		cmp	r3, #1
 965 0010 18D8     		bhi	.L83
1178:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****       (state == HAL_CAN_STATE_LISTENING))
1179:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   {
1180:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****     /* Wake up request */
1181:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****     CLEAR_BIT(hcan->Instance->MCR, CAN_MCR_SLEEP);
 966              		.loc 1 1181 5 is_stmt 1 view .LVU302
 967 0012 0268     		ldr	r2, [r0]
 968 0014 1368     		ldr	r3, [r2]
 969 0016 23F00203 		bic	r3, r3, #2
 970 001a 1360     		str	r3, [r2]
 971              	.L86:
1182:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** 
1183:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****     /* Wait sleep mode is exited */
1184:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****     do
 972              		.loc 1 1184 5 view .LVU303
1185:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****     {
1186:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****       /* Increment counter */
1187:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****       count++;
 973              		.loc 1 1187 7 view .LVU304
 974              		.loc 1 1187 12 is_stmt 0 view .LVU305
 975 001c 019B     		ldr	r3, [sp, #4]
 976 001e 0133     		adds	r3, r3, #1
 977 0020 0193     		str	r3, [sp, #4]
1188:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** 
1189:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****       /* Check if timeout is reached */
1190:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****       if (count > timeout)
 978              		.loc 1 1190 7 is_stmt 1 view .LVU306
 979              		.loc 1 1190 17 is_stmt 0 view .LVU307
 980 0022 019A     		ldr	r2, [sp, #4]
 981              		.loc 1 1190 10 view .LVU308
 982 0024 0B4B     		ldr	r3, .L89
 983 0026 9A42     		cmp	r2, r3
 984 0028 06D8     		bhi	.L88
1191:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****       {
ARM GAS  C:\Users\XAVIER~1\AppData\Local\Temp\cc1dYJ0Y.s 			page 43


1192:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****         /* Update error code */
1193:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****         hcan->ErrorCode |= HAL_CAN_ERROR_TIMEOUT;
1194:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** 
1195:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****         return HAL_ERROR;
1196:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****       }
1197:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****     }
1198:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****     while ((hcan->Instance->MSR & CAN_MSR_SLAK) != 0U);
 985              		.loc 1 1198 11 is_stmt 1 view .LVU309
 986              		.loc 1 1198 17 is_stmt 0 view .LVU310
 987 002a 0368     		ldr	r3, [r0]
 988              		.loc 1 1198 27 view .LVU311
 989 002c 5B68     		ldr	r3, [r3, #4]
 990              		.loc 1 1198 5 view .LVU312
 991 002e 13F0020F 		tst	r3, #2
 992 0032 F3D1     		bne	.L86
1199:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** 
1200:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****     /* Return function status */
1201:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****     return HAL_OK;
 993              		.loc 1 1201 12 view .LVU313
 994 0034 0020     		movs	r0, #0
 995              	.LVL54:
 996              		.loc 1 1201 12 view .LVU314
 997 0036 0AE0     		b	.L85
 998              	.LVL55:
 999              	.L88:
1193:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** 
 1000              		.loc 1 1193 9 is_stmt 1 view .LVU315
1193:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** 
 1001              		.loc 1 1193 25 is_stmt 0 view .LVU316
 1002 0038 436A     		ldr	r3, [r0, #36]
 1003 003a 43F40033 		orr	r3, r3, #131072
 1004 003e 4362     		str	r3, [r0, #36]
1195:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****       }
 1005              		.loc 1 1195 9 is_stmt 1 view .LVU317
1195:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****       }
 1006              		.loc 1 1195 16 is_stmt 0 view .LVU318
 1007 0040 0120     		movs	r0, #1
 1008              	.LVL56:
1195:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****       }
 1009              		.loc 1 1195 16 view .LVU319
 1010 0042 04E0     		b	.L85
 1011              	.LVL57:
 1012              	.L83:
1202:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   }
1203:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   else
1204:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   {
1205:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****     /* Update error code */
1206:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****     hcan->ErrorCode |= HAL_CAN_ERROR_NOT_INITIALIZED;
 1013              		.loc 1 1206 5 is_stmt 1 view .LVU320
 1014              		.loc 1 1206 21 is_stmt 0 view .LVU321
 1015 0044 436A     		ldr	r3, [r0, #36]
 1016 0046 43F48023 		orr	r3, r3, #262144
 1017 004a 4362     		str	r3, [r0, #36]
1207:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** 
1208:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****     return HAL_ERROR;
 1018              		.loc 1 1208 5 is_stmt 1 view .LVU322
 1019              		.loc 1 1208 12 is_stmt 0 view .LVU323
ARM GAS  C:\Users\XAVIER~1\AppData\Local\Temp\cc1dYJ0Y.s 			page 44


 1020 004c 0120     		movs	r0, #1
 1021              	.LVL58:
 1022              	.L85:
1209:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   }
1210:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** }
 1023              		.loc 1 1210 1 view .LVU324
 1024 004e 02B0     		add	sp, sp, #8
 1025              	.LCFI8:
 1026              		.cfi_def_cfa_offset 0
 1027              		@ sp needed
 1028 0050 7047     		bx	lr
 1029              	.L90:
 1030 0052 00BF     		.align	2
 1031              	.L89:
 1032 0054 40420F00 		.word	1000000
 1033              		.cfi_endproc
 1034              	.LFE149:
 1036              		.section	.text.HAL_CAN_IsSleepActive,"ax",%progbits
 1037              		.align	1
 1038              		.global	HAL_CAN_IsSleepActive
 1039              		.syntax unified
 1040              		.thumb
 1041              		.thumb_func
 1042              		.fpu fpv5-sp-d16
 1044              	HAL_CAN_IsSleepActive:
 1045              	.LVL59:
 1046              	.LFB150:
1211:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** 
1212:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** /**
1213:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   * @brief  Check is sleep mode is active.
1214:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   * @param  hcan pointer to a CAN_HandleTypeDef structure that contains
1215:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   *         the configuration information for the specified CAN.
1216:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   * @retval Status
1217:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   *          - 0 : Sleep mode is not active.
1218:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   *          - 1 : Sleep mode is active.
1219:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   */
1220:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** uint32_t HAL_CAN_IsSleepActive(const CAN_HandleTypeDef *hcan)
1221:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** {
 1047              		.loc 1 1221 1 is_stmt 1 view -0
 1048              		.cfi_startproc
 1049              		@ args = 0, pretend = 0, frame = 0
 1050              		@ frame_needed = 0, uses_anonymous_args = 0
 1051              		@ link register save eliminated.
1222:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   uint32_t status = 0U;
 1052              		.loc 1 1222 3 view .LVU326
1223:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   HAL_CAN_StateTypeDef state = hcan->State;
 1053              		.loc 1 1223 3 view .LVU327
 1054              		.loc 1 1223 24 is_stmt 0 view .LVU328
 1055 0000 90F82030 		ldrb	r3, [r0, #32]	@ zero_extendqisi2
 1056              	.LVL60:
1224:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** 
1225:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   if ((state == HAL_CAN_STATE_READY) ||
 1057              		.loc 1 1225 3 is_stmt 1 view .LVU329
 1058              		.loc 1 1225 38 is_stmt 0 view .LVU330
 1059 0004 013B     		subs	r3, r3, #1
 1060              	.LVL61:
 1061              		.loc 1 1225 38 view .LVU331
ARM GAS  C:\Users\XAVIER~1\AppData\Local\Temp\cc1dYJ0Y.s 			page 45


 1062 0006 DBB2     		uxtb	r3, r3
 1063              		.loc 1 1225 6 view .LVU332
 1064 0008 012B     		cmp	r3, #1
 1065 000a 01D9     		bls	.L95
1222:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   HAL_CAN_StateTypeDef state = hcan->State;
 1066              		.loc 1 1222 12 view .LVU333
 1067 000c 0020     		movs	r0, #0
 1068              	.LVL62:
1222:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   HAL_CAN_StateTypeDef state = hcan->State;
 1069              		.loc 1 1222 12 view .LVU334
 1070 000e 7047     		bx	lr
 1071              	.LVL63:
 1072              	.L95:
1226:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****       (state == HAL_CAN_STATE_LISTENING))
1227:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   {
1228:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****     /* Check Sleep mode */
1229:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****     if ((hcan->Instance->MSR & CAN_MSR_SLAK) != 0U)
 1073              		.loc 1 1229 5 is_stmt 1 view .LVU335
 1074              		.loc 1 1229 14 is_stmt 0 view .LVU336
 1075 0010 0368     		ldr	r3, [r0]
 1076              		.loc 1 1229 24 view .LVU337
 1077 0012 5868     		ldr	r0, [r3, #4]
 1078              	.LVL64:
 1079              		.loc 1 1229 8 view .LVU338
 1080 0014 10F00200 		ands	r0, r0, #2
 1081 0018 00D1     		bne	.L94
 1082 001a 7047     		bx	lr
 1083              	.L94:
1230:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****     {
1231:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****       status = 1U;
 1084              		.loc 1 1231 14 view .LVU339
 1085 001c 0120     		movs	r0, #1
 1086              	.LVL65:
1232:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****     }
1233:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   }
1234:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** 
1235:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   /* Return function status */
1236:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   return status;
 1087              		.loc 1 1236 3 is_stmt 1 view .LVU340
1237:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** }
 1088              		.loc 1 1237 1 is_stmt 0 view .LVU341
 1089 001e 7047     		bx	lr
 1090              		.cfi_endproc
 1091              	.LFE150:
 1093              		.section	.text.HAL_CAN_AddTxMessage,"ax",%progbits
 1094              		.align	1
 1095              		.global	HAL_CAN_AddTxMessage
 1096              		.syntax unified
 1097              		.thumb
 1098              		.thumb_func
 1099              		.fpu fpv5-sp-d16
 1101              	HAL_CAN_AddTxMessage:
 1102              	.LVL66:
 1103              	.LFB151:
1238:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** 
1239:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** /**
1240:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   * @brief  Add a message to the first free Tx mailbox and activate the
ARM GAS  C:\Users\XAVIER~1\AppData\Local\Temp\cc1dYJ0Y.s 			page 46


1241:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   *         corresponding transmission request.
1242:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   * @param  hcan pointer to a CAN_HandleTypeDef structure that contains
1243:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   *         the configuration information for the specified CAN.
1244:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   * @param  pHeader pointer to a CAN_TxHeaderTypeDef structure.
1245:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   * @param  aData array containing the payload of the Tx frame.
1246:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   * @param  pTxMailbox pointer to a variable where the function will return
1247:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   *         the TxMailbox used to store the Tx message.
1248:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   *         This parameter can be a value of @arg CAN_Tx_Mailboxes.
1249:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   * @retval HAL status
1250:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   */
1251:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** HAL_StatusTypeDef HAL_CAN_AddTxMessage(CAN_HandleTypeDef *hcan, const CAN_TxHeaderTypeDef *pHeader,
1252:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****                                        const uint8_t aData[], uint32_t *pTxMailbox)
1253:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** {
 1104              		.loc 1 1253 1 is_stmt 1 view -0
 1105              		.cfi_startproc
 1106              		@ args = 0, pretend = 0, frame = 0
 1107              		@ frame_needed = 0, uses_anonymous_args = 0
 1108              		.loc 1 1253 1 is_stmt 0 view .LVU343
 1109 0000 30B5     		push	{r4, r5, lr}
 1110              	.LCFI9:
 1111              		.cfi_def_cfa_offset 12
 1112              		.cfi_offset 4, -12
 1113              		.cfi_offset 5, -8
 1114              		.cfi_offset 14, -4
1254:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   uint32_t transmitmailbox;
 1115              		.loc 1 1254 3 is_stmt 1 view .LVU344
1255:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   HAL_CAN_StateTypeDef state = hcan->State;
 1116              		.loc 1 1255 3 view .LVU345
 1117              		.loc 1 1255 24 is_stmt 0 view .LVU346
 1118 0002 90F820C0 		ldrb	ip, [r0, #32]	@ zero_extendqisi2
 1119              	.LVL67:
1256:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   uint32_t tsr = READ_REG(hcan->Instance->TSR);
 1120              		.loc 1 1256 3 is_stmt 1 view .LVU347
 1121              		.loc 1 1256 12 is_stmt 0 view .LVU348
 1122 0006 0468     		ldr	r4, [r0]
 1123 0008 A468     		ldr	r4, [r4, #8]
 1124              	.LVL68:
1257:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** 
1258:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   /* Check the parameters */
1259:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   assert_param(IS_CAN_IDTYPE(pHeader->IDE));
 1125              		.loc 1 1259 3 is_stmt 1 view .LVU349
1260:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   assert_param(IS_CAN_RTR(pHeader->RTR));
 1126              		.loc 1 1260 3 view .LVU350
1261:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   assert_param(IS_CAN_DLC(pHeader->DLC));
 1127              		.loc 1 1261 3 view .LVU351
1262:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   if (pHeader->IDE == CAN_ID_STD)
 1128              		.loc 1 1262 3 view .LVU352
1263:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   {
1264:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****     assert_param(IS_CAN_STDID(pHeader->StdId));
1265:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   }
1266:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   else
1267:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   {
1268:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****     assert_param(IS_CAN_EXTID(pHeader->ExtId));
 1129              		.loc 1 1268 5 view .LVU353
1269:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   }
1270:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   assert_param(IS_FUNCTIONAL_STATE(pHeader->TransmitGlobalTime));
 1130              		.loc 1 1270 3 view .LVU354
ARM GAS  C:\Users\XAVIER~1\AppData\Local\Temp\cc1dYJ0Y.s 			page 47


1271:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** 
1272:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   if ((state == HAL_CAN_STATE_READY) ||
 1131              		.loc 1 1272 3 view .LVU355
 1132              		.loc 1 1272 38 is_stmt 0 view .LVU356
 1133 000a 0CF1FF3C 		add	ip, ip, #-1
 1134              	.LVL69:
 1135              		.loc 1 1272 38 view .LVU357
 1136 000e 5FFA8CFC 		uxtb	ip, ip
 1137              		.loc 1 1272 6 view .LVU358
 1138 0012 BCF1010F 		cmp	ip, #1
 1139 0016 62D8     		bhi	.L97
1273:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****       (state == HAL_CAN_STATE_LISTENING))
1274:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   {
1275:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****     /* Check that all the Tx mailboxes are not full */
1276:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****     if (((tsr & CAN_TSR_TME0) != 0U) ||
 1140              		.loc 1 1276 5 is_stmt 1 view .LVU359
 1141              		.loc 1 1276 8 is_stmt 0 view .LVU360
 1142 0018 14F0E05F 		tst	r4, #469762048
 1143 001c 59D0     		beq	.L98
1277:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****         ((tsr & CAN_TSR_TME1) != 0U) ||
1278:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****         ((tsr & CAN_TSR_TME2) != 0U))
1279:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****     {
1280:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****       /* Select an empty transmit mailbox */
1281:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****       transmitmailbox = (tsr & CAN_TSR_CODE) >> CAN_TSR_CODE_Pos;
 1144              		.loc 1 1281 7 is_stmt 1 view .LVU361
 1145              		.loc 1 1281 23 is_stmt 0 view .LVU362
 1146 001e C4F3016C 		ubfx	ip, r4, #24, #2
 1147              	.LVL70:
1282:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** 
1283:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****       /* Store the Tx mailbox */
1284:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****       *pTxMailbox = (uint32_t)1 << transmitmailbox;
 1148              		.loc 1 1284 7 is_stmt 1 view .LVU363
 1149              		.loc 1 1284 33 is_stmt 0 view .LVU364
 1150 0022 0124     		movs	r4, #1
 1151              	.LVL71:
 1152              		.loc 1 1284 33 view .LVU365
 1153 0024 04FA0CF4 		lsl	r4, r4, ip
 1154              		.loc 1 1284 19 view .LVU366
 1155 0028 1C60     		str	r4, [r3]
1285:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** 
1286:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****       /* Set up the Id */
1287:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****       if (pHeader->IDE == CAN_ID_STD)
 1156              		.loc 1 1287 7 is_stmt 1 view .LVU367
 1157              		.loc 1 1287 18 is_stmt 0 view .LVU368
 1158 002a 8B68     		ldr	r3, [r1, #8]
 1159              	.LVL72:
 1160              		.loc 1 1287 10 view .LVU369
 1161 002c 002B     		cmp	r3, #0
 1162 002e 3DD1     		bne	.L99
1288:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****       {
1289:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****         hcan->Instance->sTxMailBox[transmitmailbox].TIR = ((pHeader->StdId << CAN_TI0R_STID_Pos) |
 1163              		.loc 1 1289 9 is_stmt 1 view .LVU370
 1164              		.loc 1 1289 68 is_stmt 0 view .LVU371
 1165 0030 0D68     		ldr	r5, [r1]
1290:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****                                                            pHeader->RTR);
 1166              		.loc 1 1290 67 view .LVU372
 1167 0032 CB68     		ldr	r3, [r1, #12]
ARM GAS  C:\Users\XAVIER~1\AppData\Local\Temp\cc1dYJ0Y.s 			page 48


1289:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****                                                            pHeader->RTR);
 1168              		.loc 1 1289 13 view .LVU373
 1169 0034 0468     		ldr	r4, [r0]
1289:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****                                                            pHeader->RTR);
 1170              		.loc 1 1289 98 view .LVU374
 1171 0036 43EA4555 		orr	r5, r3, r5, lsl #21
1289:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****                                                            pHeader->RTR);
 1172              		.loc 1 1289 57 view .LVU375
 1173 003a 0CF11803 		add	r3, ip, #24
 1174 003e 1B01     		lsls	r3, r3, #4
 1175 0040 E550     		str	r5, [r4, r3]
 1176              	.L100:
1291:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****       }
1292:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****       else
1293:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****       {
1294:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****         hcan->Instance->sTxMailBox[transmitmailbox].TIR = ((pHeader->ExtId << CAN_TI0R_EXID_Pos) |
1295:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****                                                            pHeader->IDE |
1296:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****                                                            pHeader->RTR);
1297:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****       }
1298:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** 
1299:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****       /* Set up the DLC */
1300:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****       hcan->Instance->sTxMailBox[transmitmailbox].TDTR = (pHeader->DLC);
 1177              		.loc 1 1300 7 is_stmt 1 view .LVU376
 1178              		.loc 1 1300 11 is_stmt 0 view .LVU377
 1179 0042 0368     		ldr	r3, [r0]
 1180              		.loc 1 1300 66 view .LVU378
 1181 0044 0C69     		ldr	r4, [r1, #16]
 1182              		.loc 1 1300 56 view .LVU379
 1183 0046 0CF1180E 		add	lr, ip, #24
 1184 004a 03EB0E13 		add	r3, r3, lr, lsl #4
 1185 004e 5C60     		str	r4, [r3, #4]
1301:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** 
1302:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****       /* Set up the Transmit Global Time mode */
1303:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****       if (pHeader->TransmitGlobalTime == ENABLE)
 1186              		.loc 1 1303 7 is_stmt 1 view .LVU380
 1187              		.loc 1 1303 18 is_stmt 0 view .LVU381
 1188 0050 0B7D     		ldrb	r3, [r1, #20]	@ zero_extendqisi2
 1189              		.loc 1 1303 10 view .LVU382
 1190 0052 012B     		cmp	r3, #1
 1191 0054 35D0     		beq	.L104
 1192              	.LVL73:
 1193              	.L101:
1304:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****       {
1305:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****         SET_BIT(hcan->Instance->sTxMailBox[transmitmailbox].TDTR, CAN_TDT0R_TGT);
1306:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****       }
1307:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** 
1308:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****       /* Set up the data field */
1309:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****       WRITE_REG(hcan->Instance->sTxMailBox[transmitmailbox].TDHR,
 1194              		.loc 1 1309 7 is_stmt 1 view .LVU383
 1195 0056 D179     		ldrb	r1, [r2, #7]	@ zero_extendqisi2
 1196 0058 9379     		ldrb	r3, [r2, #6]	@ zero_extendqisi2
 1197 005a 1B04     		lsls	r3, r3, #16
 1198 005c 43EA0163 		orr	r3, r3, r1, lsl #24
 1199 0060 5179     		ldrb	r1, [r2, #5]	@ zero_extendqisi2
 1200 0062 43EA0123 		orr	r3, r3, r1, lsl #8
 1201 0066 1479     		ldrb	r4, [r2, #4]	@ zero_extendqisi2
 1202 0068 0168     		ldr	r1, [r0]
ARM GAS  C:\Users\XAVIER~1\AppData\Local\Temp\cc1dYJ0Y.s 			page 49


 1203 006a 2343     		orrs	r3, r3, r4
 1204 006c 01EB0C11 		add	r1, r1, ip, lsl #4
 1205 0070 C1F88C31 		str	r3, [r1, #396]
1310:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****                 ((uint32_t)aData[7] << CAN_TDH0R_DATA7_Pos) |
1311:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****                 ((uint32_t)aData[6] << CAN_TDH0R_DATA6_Pos) |
1312:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****                 ((uint32_t)aData[5] << CAN_TDH0R_DATA5_Pos) |
1313:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****                 ((uint32_t)aData[4] << CAN_TDH0R_DATA4_Pos));
1314:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****       WRITE_REG(hcan->Instance->sTxMailBox[transmitmailbox].TDLR,
 1206              		.loc 1 1314 7 view .LVU384
 1207 0074 D178     		ldrb	r1, [r2, #3]	@ zero_extendqisi2
 1208 0076 9378     		ldrb	r3, [r2, #2]	@ zero_extendqisi2
 1209 0078 1B04     		lsls	r3, r3, #16
 1210 007a 43EA0163 		orr	r3, r3, r1, lsl #24
 1211 007e 5178     		ldrb	r1, [r2, #1]	@ zero_extendqisi2
 1212 0080 43EA0123 		orr	r3, r3, r1, lsl #8
 1213 0084 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 1214 0086 0268     		ldr	r2, [r0]
 1215              	.LVL74:
 1216              		.loc 1 1314 7 is_stmt 0 view .LVU385
 1217 0088 0B43     		orrs	r3, r3, r1
 1218 008a 02EB0C12 		add	r2, r2, ip, lsl #4
 1219 008e C2F88831 		str	r3, [r2, #392]
1315:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****                 ((uint32_t)aData[3] << CAN_TDL0R_DATA3_Pos) |
1316:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****                 ((uint32_t)aData[2] << CAN_TDL0R_DATA2_Pos) |
1317:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****                 ((uint32_t)aData[1] << CAN_TDL0R_DATA1_Pos) |
1318:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****                 ((uint32_t)aData[0] << CAN_TDL0R_DATA0_Pos));
1319:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** 
1320:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****       /* Request transmission */
1321:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****       SET_BIT(hcan->Instance->sTxMailBox[transmitmailbox].TIR, CAN_TI0R_TXRQ);
 1220              		.loc 1 1321 7 is_stmt 1 view .LVU386
 1221 0092 0268     		ldr	r2, [r0]
 1222 0094 0CF1180C 		add	ip, ip, #24
 1223              	.LVL75:
 1224              		.loc 1 1321 7 is_stmt 0 view .LVU387
 1225 0098 4FEA0C1C 		lsl	ip, ip, #4
 1226 009c 52F80C30 		ldr	r3, [r2, ip]
 1227 00a0 43F00103 		orr	r3, r3, #1
 1228 00a4 42F80C30 		str	r3, [r2, ip]
1322:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** 
1323:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****       /* Return function status */
1324:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****       return HAL_OK;
 1229              		.loc 1 1324 7 is_stmt 1 view .LVU388
 1230              		.loc 1 1324 14 is_stmt 0 view .LVU389
 1231 00a8 0020     		movs	r0, #0
 1232              	.LVL76:
 1233              		.loc 1 1324 14 view .LVU390
 1234 00aa 1DE0     		b	.L102
 1235              	.LVL77:
 1236              	.L99:
1294:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****                                                            pHeader->IDE |
 1237              		.loc 1 1294 9 is_stmt 1 view .LVU391
1294:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****                                                            pHeader->IDE |
 1238              		.loc 1 1294 68 is_stmt 0 view .LVU392
 1239 00ac 4C68     		ldr	r4, [r1, #4]
1294:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****                                                            pHeader->IDE |
 1240              		.loc 1 1294 98 view .LVU393
 1241 00ae 43EAC403 		orr	r3, r3, r4, lsl #3
ARM GAS  C:\Users\XAVIER~1\AppData\Local\Temp\cc1dYJ0Y.s 			page 50


1296:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****       }
 1242              		.loc 1 1296 67 view .LVU394
 1243 00b2 CC68     		ldr	r4, [r1, #12]
1295:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****                                                            pHeader->RTR);
 1244              		.loc 1 1295 73 view .LVU395
 1245 00b4 2343     		orrs	r3, r3, r4
1294:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****                                                            pHeader->IDE |
 1246              		.loc 1 1294 57 view .LVU396
 1247 00b6 0CF11804 		add	r4, ip, #24
 1248 00ba 2401     		lsls	r4, r4, #4
 1249 00bc 0568     		ldr	r5, [r0]
 1250 00be 2B51     		str	r3, [r5, r4]
 1251 00c0 BFE7     		b	.L100
 1252              	.L104:
1305:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****       }
 1253              		.loc 1 1305 9 is_stmt 1 view .LVU397
 1254 00c2 0368     		ldr	r3, [r0]
 1255 00c4 03EB0E13 		add	r3, r3, lr, lsl #4
 1256 00c8 5968     		ldr	r1, [r3, #4]
 1257              	.LVL78:
1305:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****       }
 1258              		.loc 1 1305 9 is_stmt 0 view .LVU398
 1259 00ca 41F48071 		orr	r1, r1, #256
 1260 00ce 5960     		str	r1, [r3, #4]
 1261 00d0 C1E7     		b	.L101
 1262              	.LVL79:
 1263              	.L98:
1325:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****     }
1326:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****     else
1327:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****     {
1328:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****       /* Update error code */
1329:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****       hcan->ErrorCode |= HAL_CAN_ERROR_PARAM;
 1264              		.loc 1 1329 7 is_stmt 1 view .LVU399
 1265              		.loc 1 1329 23 is_stmt 0 view .LVU400
 1266 00d2 436A     		ldr	r3, [r0, #36]
 1267              	.LVL80:
 1268              		.loc 1 1329 23 view .LVU401
 1269 00d4 43F40013 		orr	r3, r3, #2097152
 1270 00d8 4362     		str	r3, [r0, #36]
1330:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** 
1331:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****       return HAL_ERROR;
 1271              		.loc 1 1331 7 is_stmt 1 view .LVU402
 1272              		.loc 1 1331 14 is_stmt 0 view .LVU403
 1273 00da 0120     		movs	r0, #1
 1274              	.LVL81:
 1275              		.loc 1 1331 14 view .LVU404
 1276 00dc 04E0     		b	.L102
 1277              	.LVL82:
 1278              	.L97:
1332:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****     }
1333:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   }
1334:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   else
1335:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   {
1336:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****     /* Update error code */
1337:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****     hcan->ErrorCode |= HAL_CAN_ERROR_NOT_INITIALIZED;
 1279              		.loc 1 1337 5 is_stmt 1 view .LVU405
 1280              		.loc 1 1337 21 is_stmt 0 view .LVU406
ARM GAS  C:\Users\XAVIER~1\AppData\Local\Temp\cc1dYJ0Y.s 			page 51


 1281 00de 436A     		ldr	r3, [r0, #36]
 1282              	.LVL83:
 1283              		.loc 1 1337 21 view .LVU407
 1284 00e0 43F48023 		orr	r3, r3, #262144
 1285 00e4 4362     		str	r3, [r0, #36]
1338:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** 
1339:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****     return HAL_ERROR;
 1286              		.loc 1 1339 5 is_stmt 1 view .LVU408
 1287              		.loc 1 1339 12 is_stmt 0 view .LVU409
 1288 00e6 0120     		movs	r0, #1
 1289              	.LVL84:
 1290              	.L102:
1340:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   }
1341:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** }
 1291              		.loc 1 1341 1 view .LVU410
 1292 00e8 30BD     		pop	{r4, r5, pc}
 1293              		.cfi_endproc
 1294              	.LFE151:
 1296              		.section	.text.HAL_CAN_AbortTxRequest,"ax",%progbits
 1297              		.align	1
 1298              		.global	HAL_CAN_AbortTxRequest
 1299              		.syntax unified
 1300              		.thumb
 1301              		.thumb_func
 1302              		.fpu fpv5-sp-d16
 1304              	HAL_CAN_AbortTxRequest:
 1305              	.LVL85:
 1306              	.LFB152:
1342:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** 
1343:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** /**
1344:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   * @brief  Abort transmission requests
1345:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   * @param  hcan pointer to an CAN_HandleTypeDef structure that contains
1346:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   *         the configuration information for the specified CAN.
1347:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   * @param  TxMailboxes List of the Tx Mailboxes to abort.
1348:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   *         This parameter can be any combination of @arg CAN_Tx_Mailboxes.
1349:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   * @retval HAL status
1350:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   */
1351:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** HAL_StatusTypeDef HAL_CAN_AbortTxRequest(CAN_HandleTypeDef *hcan, uint32_t TxMailboxes)
1352:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** {
 1307              		.loc 1 1352 1 is_stmt 1 view -0
 1308              		.cfi_startproc
 1309              		@ args = 0, pretend = 0, frame = 0
 1310              		@ frame_needed = 0, uses_anonymous_args = 0
 1311              		@ link register save eliminated.
1353:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   HAL_CAN_StateTypeDef state = hcan->State;
 1312              		.loc 1 1353 3 view .LVU412
 1313              		.loc 1 1353 24 is_stmt 0 view .LVU413
 1314 0000 90F82030 		ldrb	r3, [r0, #32]	@ zero_extendqisi2
 1315              	.LVL86:
1354:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** 
1355:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   /* Check function parameters */
1356:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   assert_param(IS_CAN_TX_MAILBOX_LIST(TxMailboxes));
 1316              		.loc 1 1356 3 is_stmt 1 view .LVU414
1357:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** 
1358:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   if ((state == HAL_CAN_STATE_READY) ||
 1317              		.loc 1 1358 3 view .LVU415
 1318              		.loc 1 1358 38 is_stmt 0 view .LVU416
ARM GAS  C:\Users\XAVIER~1\AppData\Local\Temp\cc1dYJ0Y.s 			page 52


 1319 0004 013B     		subs	r3, r3, #1
 1320              	.LVL87:
 1321              		.loc 1 1358 38 view .LVU417
 1322 0006 DBB2     		uxtb	r3, r3
 1323              		.loc 1 1358 6 view .LVU418
 1324 0008 012B     		cmp	r3, #1
 1325 000a 05D9     		bls	.L111
1359:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****       (state == HAL_CAN_STATE_LISTENING))
1360:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   {
1361:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****     /* Check Tx Mailbox 0 */
1362:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****     if ((TxMailboxes & CAN_TX_MAILBOX0) != 0U)
1363:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****     {
1364:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****       /* Add cancellation request for Tx Mailbox 0 */
1365:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****       SET_BIT(hcan->Instance->TSR, CAN_TSR_ABRQ0);
1366:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****     }
1367:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** 
1368:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****     /* Check Tx Mailbox 1 */
1369:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****     if ((TxMailboxes & CAN_TX_MAILBOX1) != 0U)
1370:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****     {
1371:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****       /* Add cancellation request for Tx Mailbox 1 */
1372:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****       SET_BIT(hcan->Instance->TSR, CAN_TSR_ABRQ1);
1373:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****     }
1374:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** 
1375:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****     /* Check Tx Mailbox 2 */
1376:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****     if ((TxMailboxes & CAN_TX_MAILBOX2) != 0U)
1377:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****     {
1378:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****       /* Add cancellation request for Tx Mailbox 2 */
1379:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****       SET_BIT(hcan->Instance->TSR, CAN_TSR_ABRQ2);
1380:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****     }
1381:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** 
1382:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****     /* Return function status */
1383:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****     return HAL_OK;
1384:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   }
1385:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   else
1386:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   {
1387:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****     /* Update error code */
1388:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****     hcan->ErrorCode |= HAL_CAN_ERROR_NOT_INITIALIZED;
 1326              		.loc 1 1388 5 is_stmt 1 view .LVU419
 1327              		.loc 1 1388 21 is_stmt 0 view .LVU420
 1328 000c 436A     		ldr	r3, [r0, #36]
 1329 000e 43F48023 		orr	r3, r3, #262144
 1330 0012 4362     		str	r3, [r0, #36]
1389:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** 
1390:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****     return HAL_ERROR;
 1331              		.loc 1 1390 5 is_stmt 1 view .LVU421
 1332              		.loc 1 1390 12 is_stmt 0 view .LVU422
 1333 0014 0120     		movs	r0, #1
 1334              	.LVL88:
1391:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   }
1392:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** }
 1335              		.loc 1 1392 1 view .LVU423
 1336 0016 7047     		bx	lr
 1337              	.LVL89:
 1338              	.L111:
1362:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****     {
 1339              		.loc 1 1362 5 is_stmt 1 view .LVU424
1362:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****     {
ARM GAS  C:\Users\XAVIER~1\AppData\Local\Temp\cc1dYJ0Y.s 			page 53


 1340              		.loc 1 1362 8 is_stmt 0 view .LVU425
 1341 0018 11F0010F 		tst	r1, #1
 1342 001c 04D0     		beq	.L107
1365:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****     }
 1343              		.loc 1 1365 7 is_stmt 1 view .LVU426
 1344 001e 0268     		ldr	r2, [r0]
 1345 0020 9368     		ldr	r3, [r2, #8]
 1346 0022 43F08003 		orr	r3, r3, #128
 1347 0026 9360     		str	r3, [r2, #8]
 1348              	.L107:
1369:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****     {
 1349              		.loc 1 1369 5 view .LVU427
1369:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****     {
 1350              		.loc 1 1369 8 is_stmt 0 view .LVU428
 1351 0028 11F0020F 		tst	r1, #2
 1352 002c 04D0     		beq	.L108
1372:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****     }
 1353              		.loc 1 1372 7 is_stmt 1 view .LVU429
 1354 002e 0268     		ldr	r2, [r0]
 1355 0030 9368     		ldr	r3, [r2, #8]
 1356 0032 43F40043 		orr	r3, r3, #32768
 1357 0036 9360     		str	r3, [r2, #8]
 1358              	.L108:
1376:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****     {
 1359              		.loc 1 1376 5 view .LVU430
1376:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****     {
 1360              		.loc 1 1376 8 is_stmt 0 view .LVU431
 1361 0038 11F0040F 		tst	r1, #4
 1362 003c 04D0     		beq	.L109
1379:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****     }
 1363              		.loc 1 1379 7 is_stmt 1 view .LVU432
 1364 003e 0268     		ldr	r2, [r0]
 1365 0040 9368     		ldr	r3, [r2, #8]
 1366 0042 43F40003 		orr	r3, r3, #8388608
 1367 0046 9360     		str	r3, [r2, #8]
 1368              	.L109:
1383:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   }
 1369              		.loc 1 1383 5 view .LVU433
1383:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   }
 1370              		.loc 1 1383 12 is_stmt 0 view .LVU434
 1371 0048 0020     		movs	r0, #0
 1372              	.LVL90:
1383:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   }
 1373              		.loc 1 1383 12 view .LVU435
 1374 004a 7047     		bx	lr
 1375              		.cfi_endproc
 1376              	.LFE152:
 1378              		.section	.text.HAL_CAN_GetTxMailboxesFreeLevel,"ax",%progbits
 1379              		.align	1
 1380              		.global	HAL_CAN_GetTxMailboxesFreeLevel
 1381              		.syntax unified
 1382              		.thumb
 1383              		.thumb_func
 1384              		.fpu fpv5-sp-d16
 1386              	HAL_CAN_GetTxMailboxesFreeLevel:
 1387              	.LVL91:
 1388              	.LFB153:
ARM GAS  C:\Users\XAVIER~1\AppData\Local\Temp\cc1dYJ0Y.s 			page 54


1393:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** 
1394:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** /**
1395:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   * @brief  Return Tx Mailboxes free level: number of free Tx Mailboxes.
1396:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   * @param  hcan pointer to a CAN_HandleTypeDef structure that contains
1397:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   *         the configuration information for the specified CAN.
1398:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   * @retval Number of free Tx Mailboxes.
1399:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   */
1400:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** uint32_t HAL_CAN_GetTxMailboxesFreeLevel(const CAN_HandleTypeDef *hcan)
1401:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** {
 1389              		.loc 1 1401 1 is_stmt 1 view -0
 1390              		.cfi_startproc
 1391              		@ args = 0, pretend = 0, frame = 0
 1392              		@ frame_needed = 0, uses_anonymous_args = 0
 1393              		@ link register save eliminated.
1402:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   uint32_t freelevel = 0U;
 1394              		.loc 1 1402 3 view .LVU437
1403:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   HAL_CAN_StateTypeDef state = hcan->State;
 1395              		.loc 1 1403 3 view .LVU438
 1396              		.loc 1 1403 24 is_stmt 0 view .LVU439
 1397 0000 90F82030 		ldrb	r3, [r0, #32]	@ zero_extendqisi2
 1398              	.LVL92:
1404:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** 
1405:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   if ((state == HAL_CAN_STATE_READY) ||
 1399              		.loc 1 1405 3 is_stmt 1 view .LVU440
 1400              		.loc 1 1405 38 is_stmt 0 view .LVU441
 1401 0004 013B     		subs	r3, r3, #1
 1402              	.LVL93:
 1403              		.loc 1 1405 38 view .LVU442
 1404 0006 DBB2     		uxtb	r3, r3
 1405              		.loc 1 1405 6 view .LVU443
 1406 0008 012B     		cmp	r3, #1
 1407 000a 01D9     		bls	.L118
1402:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   HAL_CAN_StateTypeDef state = hcan->State;
 1408              		.loc 1 1402 12 view .LVU444
 1409 000c 0020     		movs	r0, #0
 1410              	.LVL94:
1406:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****       (state == HAL_CAN_STATE_LISTENING))
1407:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   {
1408:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****     /* Check Tx Mailbox 0 status */
1409:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****     if ((hcan->Instance->TSR & CAN_TSR_TME0) != 0U)
1410:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****     {
1411:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****       freelevel++;
1412:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****     }
1413:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** 
1414:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****     /* Check Tx Mailbox 1 status */
1415:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****     if ((hcan->Instance->TSR & CAN_TSR_TME1) != 0U)
1416:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****     {
1417:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****       freelevel++;
1418:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****     }
1419:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** 
1420:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****     /* Check Tx Mailbox 2 status */
1421:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****     if ((hcan->Instance->TSR & CAN_TSR_TME2) != 0U)
1422:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****     {
1423:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****       freelevel++;
1424:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****     }
1425:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   }
1426:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** 
ARM GAS  C:\Users\XAVIER~1\AppData\Local\Temp\cc1dYJ0Y.s 			page 55


1427:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   /* Return Tx Mailboxes free level */
1428:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   return freelevel;
 1411              		.loc 1 1428 3 is_stmt 1 view .LVU445
 1412              	.L112:
1429:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** }
 1413              		.loc 1 1429 1 is_stmt 0 view .LVU446
 1414 000e 7047     		bx	lr
 1415              	.LVL95:
 1416              	.L118:
1409:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****     {
 1417              		.loc 1 1409 5 is_stmt 1 view .LVU447
1409:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****     {
 1418              		.loc 1 1409 14 is_stmt 0 view .LVU448
 1419 0010 0368     		ldr	r3, [r0]
1409:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****     {
 1420              		.loc 1 1409 24 view .LVU449
 1421 0012 9868     		ldr	r0, [r3, #8]
 1422              	.LVL96:
1409:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****     {
 1423              		.loc 1 1409 8 view .LVU450
 1424 0014 10F08060 		ands	r0, r0, #67108864
 1425 0018 00D0     		beq	.L114
1411:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****     }
 1426              		.loc 1 1411 16 view .LVU451
 1427 001a 0120     		movs	r0, #1
 1428              	.L114:
 1429              	.LVL97:
1415:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****     {
 1430              		.loc 1 1415 5 is_stmt 1 view .LVU452
1415:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****     {
 1431              		.loc 1 1415 24 is_stmt 0 view .LVU453
 1432 001c 9A68     		ldr	r2, [r3, #8]
1415:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****     {
 1433              		.loc 1 1415 8 view .LVU454
 1434 001e 12F0006F 		tst	r2, #134217728
 1435 0022 00D0     		beq	.L115
1417:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****     }
 1436              		.loc 1 1417 7 is_stmt 1 view .LVU455
1417:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****     }
 1437              		.loc 1 1417 16 is_stmt 0 view .LVU456
 1438 0024 0130     		adds	r0, r0, #1
 1439              	.LVL98:
 1440              	.L115:
1421:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****     {
 1441              		.loc 1 1421 5 is_stmt 1 view .LVU457
1421:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****     {
 1442              		.loc 1 1421 24 is_stmt 0 view .LVU458
 1443 0026 9B68     		ldr	r3, [r3, #8]
1421:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****     {
 1444              		.loc 1 1421 8 view .LVU459
 1445 0028 13F0805F 		tst	r3, #268435456
 1446 002c EFD0     		beq	.L112
1423:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****     }
 1447              		.loc 1 1423 7 is_stmt 1 view .LVU460
1423:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****     }
 1448              		.loc 1 1423 16 is_stmt 0 view .LVU461
 1449 002e 0130     		adds	r0, r0, #1
ARM GAS  C:\Users\XAVIER~1\AppData\Local\Temp\cc1dYJ0Y.s 			page 56


 1450              	.LVL99:
1423:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****     }
 1451              		.loc 1 1423 16 view .LVU462
 1452 0030 7047     		bx	lr
 1453              		.cfi_endproc
 1454              	.LFE153:
 1456              		.section	.text.HAL_CAN_IsTxMessagePending,"ax",%progbits
 1457              		.align	1
 1458              		.global	HAL_CAN_IsTxMessagePending
 1459              		.syntax unified
 1460              		.thumb
 1461              		.thumb_func
 1462              		.fpu fpv5-sp-d16
 1464              	HAL_CAN_IsTxMessagePending:
 1465              	.LVL100:
 1466              	.LFB154:
1430:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** 
1431:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** /**
1432:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   * @brief  Check if a transmission request is pending on the selected Tx
1433:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   *         Mailboxes.
1434:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   * @param  hcan pointer to an CAN_HandleTypeDef structure that contains
1435:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   *         the configuration information for the specified CAN.
1436:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   * @param  TxMailboxes List of Tx Mailboxes to check.
1437:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   *         This parameter can be any combination of @arg CAN_Tx_Mailboxes.
1438:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   * @retval Status
1439:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   *          - 0 : No pending transmission request on any selected Tx Mailboxes.
1440:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   *          - 1 : Pending transmission request on at least one of the selected
1441:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   *                Tx Mailbox.
1442:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   */
1443:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** uint32_t HAL_CAN_IsTxMessagePending(const CAN_HandleTypeDef *hcan, uint32_t TxMailboxes)
1444:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** {
 1467              		.loc 1 1444 1 is_stmt 1 view -0
 1468              		.cfi_startproc
 1469              		@ args = 0, pretend = 0, frame = 0
 1470              		@ frame_needed = 0, uses_anonymous_args = 0
 1471              		@ link register save eliminated.
1445:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   uint32_t status = 0U;
 1472              		.loc 1 1445 3 view .LVU464
1446:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   HAL_CAN_StateTypeDef state = hcan->State;
 1473              		.loc 1 1446 3 view .LVU465
 1474              		.loc 1 1446 24 is_stmt 0 view .LVU466
 1475 0000 90F82030 		ldrb	r3, [r0, #32]	@ zero_extendqisi2
 1476              	.LVL101:
1447:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** 
1448:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   /* Check function parameters */
1449:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   assert_param(IS_CAN_TX_MAILBOX_LIST(TxMailboxes));
 1477              		.loc 1 1449 3 is_stmt 1 view .LVU467
1450:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** 
1451:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   if ((state == HAL_CAN_STATE_READY) ||
 1478              		.loc 1 1451 3 view .LVU468
 1479              		.loc 1 1451 38 is_stmt 0 view .LVU469
 1480 0004 013B     		subs	r3, r3, #1
 1481              	.LVL102:
 1482              		.loc 1 1451 38 view .LVU470
 1483 0006 DBB2     		uxtb	r3, r3
 1484              		.loc 1 1451 6 view .LVU471
 1485 0008 012B     		cmp	r3, #1
ARM GAS  C:\Users\XAVIER~1\AppData\Local\Temp\cc1dYJ0Y.s 			page 57


 1486 000a 01D9     		bls	.L123
1445:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   HAL_CAN_StateTypeDef state = hcan->State;
 1487              		.loc 1 1445 12 view .LVU472
 1488 000c 0020     		movs	r0, #0
 1489              	.LVL103:
1445:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   HAL_CAN_StateTypeDef state = hcan->State;
 1490              		.loc 1 1445 12 view .LVU473
 1491 000e 7047     		bx	lr
 1492              	.LVL104:
 1493              	.L123:
1452:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****       (state == HAL_CAN_STATE_LISTENING))
1453:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   {
1454:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****     /* Check pending transmission request on the selected Tx Mailboxes */
1455:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****     if ((hcan->Instance->TSR & (TxMailboxes << CAN_TSR_TME0_Pos)) != (TxMailboxes << CAN_TSR_TME0_P
 1494              		.loc 1 1455 5 is_stmt 1 view .LVU474
 1495              		.loc 1 1455 14 is_stmt 0 view .LVU475
 1496 0010 0368     		ldr	r3, [r0]
 1497              		.loc 1 1455 24 view .LVU476
 1498 0012 9B68     		ldr	r3, [r3, #8]
 1499              		.loc 1 1455 30 view .LVU477
 1500 0014 03EA8163 		and	r3, r3, r1, lsl #26
 1501              		.loc 1 1455 8 view .LVU478
 1502 0018 B3EB816F 		cmp	r3, r1, lsl #26
 1503 001c 01D0     		beq	.L124
1456:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****     {
1457:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****       status = 1U;
 1504              		.loc 1 1457 14 view .LVU479
 1505 001e 0120     		movs	r0, #1
 1506              	.LVL105:
1458:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****     }
1459:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   }
1460:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** 
1461:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   /* Return status */
1462:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   return status;
 1507              		.loc 1 1462 3 is_stmt 1 view .LVU480
1463:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** }
 1508              		.loc 1 1463 1 is_stmt 0 view .LVU481
 1509 0020 7047     		bx	lr
 1510              	.LVL106:
 1511              	.L124:
1445:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   HAL_CAN_StateTypeDef state = hcan->State;
 1512              		.loc 1 1445 12 view .LVU482
 1513 0022 0020     		movs	r0, #0
 1514              	.LVL107:
1445:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   HAL_CAN_StateTypeDef state = hcan->State;
 1515              		.loc 1 1445 12 view .LVU483
 1516 0024 7047     		bx	lr
 1517              		.cfi_endproc
 1518              	.LFE154:
 1520              		.section	.text.HAL_CAN_GetTxTimestamp,"ax",%progbits
 1521              		.align	1
 1522              		.global	HAL_CAN_GetTxTimestamp
 1523              		.syntax unified
 1524              		.thumb
 1525              		.thumb_func
 1526              		.fpu fpv5-sp-d16
 1528              	HAL_CAN_GetTxTimestamp:
ARM GAS  C:\Users\XAVIER~1\AppData\Local\Temp\cc1dYJ0Y.s 			page 58


 1529              	.LVL108:
 1530              	.LFB155:
1464:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** 
1465:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** /**
1466:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   * @brief  Return timestamp of Tx message sent, if time triggered communication
1467:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****             mode is enabled.
1468:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   * @param  hcan pointer to a CAN_HandleTypeDef structure that contains
1469:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   *         the configuration information for the specified CAN.
1470:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   * @param  TxMailbox Tx Mailbox where the timestamp of message sent will be
1471:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   *         read.
1472:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   *         This parameter can be one value of @arg CAN_Tx_Mailboxes.
1473:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   * @retval Timestamp of message sent from Tx Mailbox.
1474:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   */
1475:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** uint32_t HAL_CAN_GetTxTimestamp(const CAN_HandleTypeDef *hcan, uint32_t TxMailbox)
1476:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** {
 1531              		.loc 1 1476 1 is_stmt 1 view -0
 1532              		.cfi_startproc
 1533              		@ args = 0, pretend = 0, frame = 0
 1534              		@ frame_needed = 0, uses_anonymous_args = 0
 1535              		@ link register save eliminated.
1477:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   uint32_t timestamp = 0U;
 1536              		.loc 1 1477 3 view .LVU485
1478:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   uint32_t transmitmailbox;
 1537              		.loc 1 1478 3 view .LVU486
1479:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   HAL_CAN_StateTypeDef state = hcan->State;
 1538              		.loc 1 1479 3 view .LVU487
 1539              		.loc 1 1479 24 is_stmt 0 view .LVU488
 1540 0000 90F82030 		ldrb	r3, [r0, #32]	@ zero_extendqisi2
 1541              	.LVL109:
1480:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** 
1481:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   /* Check function parameters */
1482:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   assert_param(IS_CAN_TX_MAILBOX(TxMailbox));
 1542              		.loc 1 1482 3 is_stmt 1 view .LVU489
1483:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** 
1484:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   if ((state == HAL_CAN_STATE_READY) ||
 1543              		.loc 1 1484 3 view .LVU490
 1544              		.loc 1 1484 38 is_stmt 0 view .LVU491
 1545 0004 013B     		subs	r3, r3, #1
 1546              	.LVL110:
 1547              		.loc 1 1484 38 view .LVU492
 1548 0006 DBB2     		uxtb	r3, r3
 1549              		.loc 1 1484 6 view .LVU493
 1550 0008 012B     		cmp	r3, #1
 1551 000a 01D9     		bls	.L128
1477:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   uint32_t transmitmailbox;
 1552              		.loc 1 1477 12 view .LVU494
 1553 000c 0020     		movs	r0, #0
 1554              	.LVL111:
1485:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****       (state == HAL_CAN_STATE_LISTENING))
1486:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   {
1487:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****     /* Select the Tx mailbox */
1488:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****     transmitmailbox = POSITION_VAL(TxMailbox);
1489:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** 
1490:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****     /* Get timestamp */
1491:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****     timestamp = (hcan->Instance->sTxMailBox[transmitmailbox].TDTR & CAN_TDT0R_TIME) >> CAN_TDT0R_TI
1492:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   }
1493:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** 
ARM GAS  C:\Users\XAVIER~1\AppData\Local\Temp\cc1dYJ0Y.s 			page 59


1494:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   /* Return the timestamp */
1495:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   return timestamp;
 1555              		.loc 1 1495 3 is_stmt 1 view .LVU495
1496:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** }
 1556              		.loc 1 1496 1 is_stmt 0 view .LVU496
 1557 000e 7047     		bx	lr
 1558              	.LVL112:
 1559              	.L128:
1488:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** 
 1560              		.loc 1 1488 5 is_stmt 1 view .LVU497
 1561              	.LBB4:
 1562              	.LBI4:
 1563              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.0.4
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     09. April 2018
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2018 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
ARM GAS  C:\Users\XAVIER~1\AppData\Local\Temp\cc1dYJ0Y.s 			page 60


  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif                                           
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
ARM GAS  C:\Users\XAVIER~1\AppData\Local\Temp\cc1dYJ0Y.s 			page 61


 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 117:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 120:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 121:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 122:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 129:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 130:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 131:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 133:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 134:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 135:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 140:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 141:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 143:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 144:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 145:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 146:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 147:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Control Register
 148:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the Control Register.
 149:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Control Register value
 150:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 151:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_CONTROL(void)
 152:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 153:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 154:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 155:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, control" : "=r" (result) );
 156:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 157:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 158:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  C:\Users\XAVIER~1\AppData\Local\Temp\cc1dYJ0Y.s 			page 62


 159:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 160:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 161:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 162:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Control Register (non-secure)
 163:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the non-secure Control Register when in secure mode.
 164:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               non-secure Control Register value
 165:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 166:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_CONTROL_NS(void)
 167:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 168:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 169:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 170:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, control_ns" : "=r" (result) );
 171:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 172:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 173:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 174:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 175:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 176:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 177:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Control Register
 178:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Writes the given value to the Control Register.
 179:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    control  Control Register value to set
 180:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 181:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_CONTROL(uint32_t control)
 182:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 183:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR control, %0" : : "r" (control) : "memory");
 184:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 185:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 186:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 187:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 188:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 189:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Control Register (non-secure)
 190:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Writes the given value to the non-secure Control Register when in secure state.
 191:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    control  Control Register value to set
 192:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 193:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_CONTROL_NS(uint32_t control)
 194:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 195:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR control_ns, %0" : : "r" (control) : "memory");
 196:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 197:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 198:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 199:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 200:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 201:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get IPSR Register
 202:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the IPSR Register.
 203:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               IPSR Register value
 204:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 205:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_IPSR(void)
 206:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 207:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 208:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 209:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 210:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 211:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 212:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 213:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 214:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 215:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get APSR Register
ARM GAS  C:\Users\XAVIER~1\AppData\Local\Temp\cc1dYJ0Y.s 			page 63


 216:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the APSR Register.
 217:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               APSR Register value
 218:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 219:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_APSR(void)
 220:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 221:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 222:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 223:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, apsr" : "=r" (result) );
 224:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 225:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 226:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 227:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 228:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 229:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get xPSR Register
 230:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the xPSR Register.
 231:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               xPSR Register value
 232:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 233:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_xPSR(void)
 234:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 235:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 236:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 237:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, xpsr" : "=r" (result) );
 238:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 239:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 240:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 241:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 242:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 243:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer
 244:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Process Stack Pointer (PSP).
 245:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               PSP Register value
 246:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 247:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_PSP(void)
 248:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 249:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 250:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 251:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psp"  : "=r" (result) );
 252:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 253:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 254:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 255:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 256:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 257:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 258:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer (non-secure)
 259:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Process Stack Pointer (PSP) when in secure s
 260:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               PSP Register value
 261:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 262:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_PSP_NS(void)
 263:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 264:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 265:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 266:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psp_ns"  : "=r" (result) );
 267:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 268:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 269:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 270:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 271:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 272:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
ARM GAS  C:\Users\XAVIER~1\AppData\Local\Temp\cc1dYJ0Y.s 			page 64


 273:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer
 274:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Process Stack Pointer (PSP).
 275:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfProcStack  Process Stack Pointer value to set
 276:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 277:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_PSP(uint32_t topOfProcStack)
 278:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 279:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psp, %0" : : "r" (topOfProcStack) : );
 280:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 281:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 282:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 283:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 284:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 285:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer (non-secure)
 286:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Process Stack Pointer (PSP) when in secure sta
 287:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfProcStack  Process Stack Pointer value to set
 288:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 289:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_PSP_NS(uint32_t topOfProcStack)
 290:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 291:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psp_ns, %0" : : "r" (topOfProcStack) : );
 292:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 293:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 294:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 295:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 296:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 297:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer
 298:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Main Stack Pointer (MSP).
 299:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               MSP Register value
 300:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 301:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_MSP(void)
 302:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 303:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 304:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 305:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msp" : "=r" (result) );
 306:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 307:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 308:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 309:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 310:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 311:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 312:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer (non-secure)
 313:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Main Stack Pointer (MSP) when in secure stat
 314:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               MSP Register value
 315:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 316:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_MSP_NS(void)
 317:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 318:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 319:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 320:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msp_ns" : "=r" (result) );
 321:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 322:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 323:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 324:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 325:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 326:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 327:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer
 328:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Main Stack Pointer (MSP).
 329:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfMainStack  Main Stack Pointer value to set
ARM GAS  C:\Users\XAVIER~1\AppData\Local\Temp\cc1dYJ0Y.s 			page 65


 330:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 331:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_MSP(uint32_t topOfMainStack)
 332:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 333:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msp, %0" : : "r" (topOfMainStack) : );
 334:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 335:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 336:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 337:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 338:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 339:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer (non-secure)
 340:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Main Stack Pointer (MSP) when in secure state.
 341:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfMainStack  Main Stack Pointer value to set
 342:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 343:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_MSP_NS(uint32_t topOfMainStack)
 344:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 345:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msp_ns, %0" : : "r" (topOfMainStack) : );
 346:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 347:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 348:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 349:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 350:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 351:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 352:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Stack Pointer (non-secure)
 353:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Stack Pointer (SP) when in secure state.
 354:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               SP Register value
 355:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 356:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_SP_NS(void)
 357:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 358:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 359:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 360:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, sp_ns" : "=r" (result) );
 361:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 362:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 363:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 364:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 365:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 366:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Stack Pointer (non-secure)
 367:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Stack Pointer (SP) when in secure state.
 368:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfStack  Stack Pointer value to set
 369:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 370:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_SP_NS(uint32_t topOfStack)
 371:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 372:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR sp_ns, %0" : : "r" (topOfStack) : );
 373:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 374:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 375:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 376:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 377:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 378:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Priority Mask
 379:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current state of the priority mask bit from the Priority Mask Register.
 380:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Priority Mask value
 381:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 382:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_PRIMASK(void)
 383:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 384:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 385:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 386:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
ARM GAS  C:\Users\XAVIER~1\AppData\Local\Temp\cc1dYJ0Y.s 			page 66


 387:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 388:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 389:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 390:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 391:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 392:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 393:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Priority Mask (non-secure)
 394:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current state of the non-secure priority mask bit from the Priority Mask Reg
 395:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Priority Mask value
 396:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 397:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_PRIMASK_NS(void)
 398:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 399:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 400:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 401:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, primask_ns" : "=r" (result) :: "memory");
 402:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 403:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 404:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 405:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 406:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 407:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 408:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Priority Mask
 409:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Priority Mask Register.
 410:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    priMask  Priority Mask
 411:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 412:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_PRIMASK(uint32_t priMask)
 413:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 414:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR primask, %0" : : "r" (priMask) : "memory");
 415:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 416:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 417:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 418:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 419:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 420:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Priority Mask (non-secure)
 421:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Priority Mask Register when in secure state.
 422:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    priMask  Priority Mask
 423:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 424:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_PRIMASK_NS(uint32_t priMask)
 425:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 426:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR primask_ns, %0" : : "r" (priMask) : "memory");
 427:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 428:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 429:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 430:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 431:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 432:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 433:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 434:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 435:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable FIQ
 436:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables FIQ interrupts by clearing the F-bit in the CPSR.
 437:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 438:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 439:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_fault_irq(void)
 440:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 441:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie f" : : : "memory");
 442:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 443:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  C:\Users\XAVIER~1\AppData\Local\Temp\cc1dYJ0Y.s 			page 67


 444:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 445:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 446:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable FIQ
 447:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables FIQ interrupts by setting the F-bit in the CPSR.
 448:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 449:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 450:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_fault_irq(void)
 451:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 452:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid f" : : : "memory");
 453:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 454:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 455:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 456:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 457:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Base Priority
 458:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Base Priority register.
 459:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Base Priority register value
 460:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 461:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_BASEPRI(void)
 462:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 463:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 464:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 465:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 466:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 467:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 468:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 469:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 470:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 471:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 472:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Base Priority (non-secure)
 473:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Base Priority register when in secure state.
 474:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Base Priority register value
 475:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 476:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_BASEPRI_NS(void)
 477:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 478:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 479:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 480:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, basepri_ns" : "=r" (result) );
 481:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 482:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 483:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 484:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 485:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 486:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 487:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Base Priority
 488:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Base Priority register.
 489:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 490:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 491:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_BASEPRI(uint32_t basePri)
 492:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 493:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR basepri, %0" : : "r" (basePri) : "memory");
 494:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 495:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 496:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 497:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 498:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 499:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Base Priority (non-secure)
 500:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Base Priority register when in secure state.
ARM GAS  C:\Users\XAVIER~1\AppData\Local\Temp\cc1dYJ0Y.s 			page 68


 501:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 502:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 503:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_BASEPRI_NS(uint32_t basePri)
 504:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 505:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR basepri_ns, %0" : : "r" (basePri) : "memory");
 506:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 507:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 508:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 509:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 510:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 511:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Base Priority with condition
 512:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Base Priority register only if BASEPRI masking is disable
 513:Drivers/CMSIS/Include/cmsis_gcc.h ****            or the new value increases the BASEPRI priority level.
 514:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 515:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 516:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_BASEPRI_MAX(uint32_t basePri)
 517:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 518:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR basepri_max, %0" : : "r" (basePri) : "memory");
 519:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 520:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 521:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 522:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 523:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Fault Mask
 524:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Fault Mask register.
 525:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Fault Mask register value
 526:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 527:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_FAULTMASK(void)
 528:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 529:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 530:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 531:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, faultmask" : "=r" (result) );
 532:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 533:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 534:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 535:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 536:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 537:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 538:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Fault Mask (non-secure)
 539:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Fault Mask register when in secure state.
 540:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Fault Mask register value
 541:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 542:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_FAULTMASK_NS(void)
 543:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 544:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 545:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 546:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, faultmask_ns" : "=r" (result) );
 547:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 548:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 549:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 550:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 551:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 552:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 553:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Fault Mask
 554:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Fault Mask register.
 555:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    faultMask  Fault Mask value to set
 556:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 557:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_FAULTMASK(uint32_t faultMask)
ARM GAS  C:\Users\XAVIER~1\AppData\Local\Temp\cc1dYJ0Y.s 			page 69


 558:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 559:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR faultmask, %0" : : "r" (faultMask) : "memory");
 560:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 561:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 562:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 563:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 564:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 565:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Fault Mask (non-secure)
 566:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Fault Mask register when in secure state.
 567:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    faultMask  Fault Mask value to set
 568:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 569:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_FAULTMASK_NS(uint32_t faultMask)
 570:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 571:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR faultmask_ns, %0" : : "r" (faultMask) : "memory");
 572:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 573:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 574:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 575:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 576:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 577:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    ) */
 578:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 579:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 580:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 581:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    )
 582:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 583:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 584:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer Limit
 585:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 586:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence zero is returned always in non-secure
 587:Drivers/CMSIS/Include/cmsis_gcc.h ****   mode.
 588:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 589:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Process Stack Pointer Limit (PSPLIM).
 590:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               PSPLIM Register value
 591:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 592:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_PSPLIM(void)
 593:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 594:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) && \
 595:Drivers/CMSIS/Include/cmsis_gcc.h ****     (!defined (__ARM_FEATURE_CMSE) || (__ARM_FEATURE_CMSE < 3)))
 596:Drivers/CMSIS/Include/cmsis_gcc.h ****     // without main extensions, the non-secure PSPLIM is RAZ/WI
 597:Drivers/CMSIS/Include/cmsis_gcc.h ****   return 0U;
 598:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 599:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 600:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psplim"  : "=r" (result) );
 601:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 602:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 603:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 604:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 605:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE) && (__ARM_FEATURE_CMSE == 3))
 606:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 607:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer Limit (non-secure)
 608:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 609:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence zero is returned always.
 610:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 611:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Process Stack Pointer Limit (PSPLIM) when in
 612:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               PSPLIM Register value
 613:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 614:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_PSPLIM_NS(void)
ARM GAS  C:\Users\XAVIER~1\AppData\Local\Temp\cc1dYJ0Y.s 			page 70


 615:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 616:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)))
 617:Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure PSPLIM is RAZ/WI
 618:Drivers/CMSIS/Include/cmsis_gcc.h ****   return 0U;
 619:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 620:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 621:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psplim_ns"  : "=r" (result) );
 622:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 623:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 624:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 625:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 626:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 627:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 628:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 629:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer Limit
 630:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 631:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence the write is silently ignored in non-secure
 632:Drivers/CMSIS/Include/cmsis_gcc.h ****   mode.
 633:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 634:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Process Stack Pointer Limit (PSPLIM).
 635:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ProcStackPtrLimit  Process Stack Pointer Limit value to set
 636:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 637:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_PSPLIM(uint32_t ProcStackPtrLimit)
 638:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 639:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) && \
 640:Drivers/CMSIS/Include/cmsis_gcc.h ****     (!defined (__ARM_FEATURE_CMSE) || (__ARM_FEATURE_CMSE < 3)))
 641:Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure PSPLIM is RAZ/WI
 642:Drivers/CMSIS/Include/cmsis_gcc.h ****   (void)ProcStackPtrLimit;
 643:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 644:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psplim, %0" : : "r" (ProcStackPtrLimit));
 645:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 646:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 647:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 648:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 649:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3))
 650:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 651:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer (non-secure)
 652:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 653:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence the write is silently ignored.
 654:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 655:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Process Stack Pointer Limit (PSPLIM) when in s
 656:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ProcStackPtrLimit  Process Stack Pointer Limit value to set
 657:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 658:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_PSPLIM_NS(uint32_t ProcStackPtrLimit)
 659:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 660:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)))
 661:Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure PSPLIM is RAZ/WI
 662:Drivers/CMSIS/Include/cmsis_gcc.h ****   (void)ProcStackPtrLimit;
 663:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 664:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psplim_ns, %0\n" : : "r" (ProcStackPtrLimit));
 665:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 666:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 667:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 668:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 669:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 670:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 671:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer Limit
ARM GAS  C:\Users\XAVIER~1\AppData\Local\Temp\cc1dYJ0Y.s 			page 71


 672:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 673:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence zero is returned always in non-secure
 674:Drivers/CMSIS/Include/cmsis_gcc.h ****   mode.
 675:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 676:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Main Stack Pointer Limit (MSPLIM).
 677:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               MSPLIM Register value
 678:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 679:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_MSPLIM(void)
 680:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 681:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) && \
 682:Drivers/CMSIS/Include/cmsis_gcc.h ****     (!defined (__ARM_FEATURE_CMSE) || (__ARM_FEATURE_CMSE < 3)))
 683:Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure MSPLIM is RAZ/WI
 684:Drivers/CMSIS/Include/cmsis_gcc.h ****   return 0U;
 685:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 686:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 687:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msplim" : "=r" (result) );
 688:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 689:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 690:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 691:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 692:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 693:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3))
 694:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 695:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer Limit (non-secure)
 696:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 697:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence zero is returned always.
 698:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 699:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Main Stack Pointer Limit(MSPLIM) when in sec
 700:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               MSPLIM Register value
 701:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 702:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_MSPLIM_NS(void)
 703:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 704:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)))
 705:Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure MSPLIM is RAZ/WI
 706:Drivers/CMSIS/Include/cmsis_gcc.h ****   return 0U;
 707:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 708:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 709:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msplim_ns" : "=r" (result) );
 710:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 711:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 712:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 713:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 714:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 715:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 716:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 717:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer Limit
 718:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 719:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence the write is silently ignored in non-secure
 720:Drivers/CMSIS/Include/cmsis_gcc.h ****   mode.
 721:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 722:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Main Stack Pointer Limit (MSPLIM).
 723:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    MainStackPtrLimit  Main Stack Pointer Limit value to set
 724:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 725:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_MSPLIM(uint32_t MainStackPtrLimit)
 726:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 727:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) && \
 728:Drivers/CMSIS/Include/cmsis_gcc.h ****     (!defined (__ARM_FEATURE_CMSE) || (__ARM_FEATURE_CMSE < 3)))
ARM GAS  C:\Users\XAVIER~1\AppData\Local\Temp\cc1dYJ0Y.s 			page 72


 729:Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure MSPLIM is RAZ/WI
 730:Drivers/CMSIS/Include/cmsis_gcc.h ****   (void)MainStackPtrLimit;
 731:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 732:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msplim, %0" : : "r" (MainStackPtrLimit));
 733:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 734:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 735:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 736:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 737:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3))
 738:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 739:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer Limit (non-secure)
 740:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 741:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence the write is silently ignored.
 742:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 743:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Main Stack Pointer Limit (MSPLIM) when in secu
 744:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    MainStackPtrLimit  Main Stack Pointer value to set
 745:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 746:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_MSPLIM_NS(uint32_t MainStackPtrLimit)
 747:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 748:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)))
 749:Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure MSPLIM is RAZ/WI
 750:Drivers/CMSIS/Include/cmsis_gcc.h ****   (void)MainStackPtrLimit;
 751:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 752:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msplim_ns, %0" : : "r" (MainStackPtrLimit));
 753:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 754:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 755:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 756:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 757:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 758:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    ) */
 759:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 760:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 761:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 762:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get FPSCR
 763:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Floating Point Status/Control register.
 764:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Floating Point Status/Control register value
 765:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 766:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_FPSCR(void)
 767:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 768:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)) && \
 769:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__FPU_USED   ) && (__FPU_USED    == 1U))     )
 770:Drivers/CMSIS/Include/cmsis_gcc.h **** #if __has_builtin(__builtin_arm_get_fpscr) 
 771:Drivers/CMSIS/Include/cmsis_gcc.h **** // Re-enable using built-in when GCC has been fixed
 772:Drivers/CMSIS/Include/cmsis_gcc.h **** // || (__GNUC__ > 7) || (__GNUC__ == 7 && __GNUC_MINOR__ >= 2)
 773:Drivers/CMSIS/Include/cmsis_gcc.h ****   /* see https://gcc.gnu.org/ml/gcc-patches/2017-04/msg00443.html */
 774:Drivers/CMSIS/Include/cmsis_gcc.h ****   return __builtin_arm_get_fpscr();
 775:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 776:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 777:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 778:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("VMRS %0, fpscr" : "=r" (result) );
 779:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 780:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 781:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 782:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(0U);
 783:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 784:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 785:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  C:\Users\XAVIER~1\AppData\Local\Temp\cc1dYJ0Y.s 			page 73


 786:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 787:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 788:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set FPSCR
 789:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Floating Point Status/Control register.
 790:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    fpscr  Floating Point Status/Control value to set
 791:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 792:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_FPSCR(uint32_t fpscr)
 793:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 794:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)) && \
 795:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__FPU_USED   ) && (__FPU_USED    == 1U))     )
 796:Drivers/CMSIS/Include/cmsis_gcc.h **** #if __has_builtin(__builtin_arm_set_fpscr)
 797:Drivers/CMSIS/Include/cmsis_gcc.h **** // Re-enable using built-in when GCC has been fixed
 798:Drivers/CMSIS/Include/cmsis_gcc.h **** // || (__GNUC__ > 7) || (__GNUC__ == 7 && __GNUC_MINOR__ >= 2)
 799:Drivers/CMSIS/Include/cmsis_gcc.h ****   /* see https://gcc.gnu.org/ml/gcc-patches/2017-04/msg00443.html */
 800:Drivers/CMSIS/Include/cmsis_gcc.h ****   __builtin_arm_set_fpscr(fpscr);
 801:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 802:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("VMSR fpscr, %0" : : "r" (fpscr) : "vfpcc", "memory");
 803:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 804:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 805:Drivers/CMSIS/Include/cmsis_gcc.h ****   (void)fpscr;
 806:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 807:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 808:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 809:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 810:Drivers/CMSIS/Include/cmsis_gcc.h **** /*@} end of CMSIS_Core_RegAccFunctions */
 811:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 812:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 813:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ##########################  Core Instruction Access  ######################### */
 814:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \defgroup CMSIS_Core_InstructionInterface CMSIS Core Instruction Interface
 815:Drivers/CMSIS/Include/cmsis_gcc.h ****   Access to dedicated instructions
 816:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 817:Drivers/CMSIS/Include/cmsis_gcc.h **** */
 818:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 819:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Define macros for porting to both thumb1 and thumb2.
 820:Drivers/CMSIS/Include/cmsis_gcc.h ****  * For thumb1, use low register (r0-r7), specified by constraint "l"
 821:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Otherwise, use general registers, specified by constraint "r" */
 822:Drivers/CMSIS/Include/cmsis_gcc.h **** #if defined (__thumb__) && !defined (__thumb2__)
 823:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=l" (r)
 824:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+l" (r)
 825:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "l" (r)
 826:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 827:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=r" (r)
 828:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+r" (r)
 829:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "r" (r)
 830:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 831:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 832:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 833:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   No Operation
 834:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details No Operation does nothing. This instruction can be used for code alignment purposes.
 835:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 836:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __NOP()                             __ASM volatile ("nop")
 837:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 838:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 839:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Wait For Interrupt
 840:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Wait For Interrupt is a hint instruction that suspends execution until one of a number o
 841:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 842:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __WFI()                             __ASM volatile ("wfi")
ARM GAS  C:\Users\XAVIER~1\AppData\Local\Temp\cc1dYJ0Y.s 			page 74


 843:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 844:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 845:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 846:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Wait For Event
 847:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Wait For Event is a hint instruction that permits the processor to enter
 848:Drivers/CMSIS/Include/cmsis_gcc.h ****            a low-power state until one of a number of events occurs.
 849:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 850:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __WFE()                             __ASM volatile ("wfe")
 851:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 852:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 853:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 854:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Send Event
 855:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Send Event is a hint instruction. It causes an event to be signaled to the CPU.
 856:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 857:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __SEV()                             __ASM volatile ("sev")
 858:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 859:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 860:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 861:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Instruction Synchronization Barrier
 862:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Instruction Synchronization Barrier flushes the pipeline in the processor,
 863:Drivers/CMSIS/Include/cmsis_gcc.h ****            so that all instructions following the ISB are fetched from cache or memory,
 864:Drivers/CMSIS/Include/cmsis_gcc.h ****            after the instruction has been completed.
 865:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 866:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __ISB(void)
 867:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 868:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("isb 0xF":::"memory");
 869:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 870:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 871:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 872:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 873:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Data Synchronization Barrier
 874:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Acts as a special kind of Data Memory Barrier.
 875:Drivers/CMSIS/Include/cmsis_gcc.h ****            It completes when all explicit memory accesses before this instruction complete.
 876:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 877:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __DSB(void)
 878:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 879:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("dsb 0xF":::"memory");
 880:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 881:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 882:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 883:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 884:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Data Memory Barrier
 885:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Ensures the apparent order of the explicit memory operations before
 886:Drivers/CMSIS/Include/cmsis_gcc.h ****            and after the instruction, without ensuring their completion.
 887:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 888:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __DMB(void)
 889:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 890:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("dmb 0xF":::"memory");
 891:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 892:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 893:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 894:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 895:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse byte order (32 bit)
 896:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the byte order in unsigned integer value. For example, 0x12345678 becomes 0x785
 897:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 898:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 899:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
ARM GAS  C:\Users\XAVIER~1\AppData\Local\Temp\cc1dYJ0Y.s 			page 75


 900:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __REV(uint32_t value)
 901:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 902:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 5)
 903:Drivers/CMSIS/Include/cmsis_gcc.h ****   return __builtin_bswap32(value);
 904:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 905:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 906:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 907:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("rev %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 908:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 909:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 910:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 911:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 912:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 913:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 914:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse byte order (16 bit)
 915:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the byte order within each halfword of a word. For example, 0x12345678 becomes 
 916:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 917:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 918:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 919:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __REV16(uint32_t value)
 920:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 921:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 922:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 923:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("rev16 %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 924:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 925:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 926:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 927:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 928:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 929:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse byte order (16 bit)
 930:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the byte order in a 16-bit value and returns the signed 16-bit result. For exam
 931:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 932:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 933:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 934:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE int16_t __REVSH(int16_t value)
 935:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 936:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 937:Drivers/CMSIS/Include/cmsis_gcc.h ****   return (int16_t)__builtin_bswap16(value);
 938:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 939:Drivers/CMSIS/Include/cmsis_gcc.h ****   int16_t result;
 940:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 941:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("revsh %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 942:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 943:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 944:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 945:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 946:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 947:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 948:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Rotate Right in unsigned value (32 bit)
 949:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Rotate Right (immediate) provides the value of the contents of a register rotated by a v
 950:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    op1  Value to rotate
 951:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    op2  Number of Bits to rotate
 952:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Rotated value
 953:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 954:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __ROR(uint32_t op1, uint32_t op2)
 955:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 956:Drivers/CMSIS/Include/cmsis_gcc.h ****   op2 %= 32U;
ARM GAS  C:\Users\XAVIER~1\AppData\Local\Temp\cc1dYJ0Y.s 			page 76


 957:Drivers/CMSIS/Include/cmsis_gcc.h ****   if (op2 == 0U)
 958:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 959:Drivers/CMSIS/Include/cmsis_gcc.h ****     return op1;
 960:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 961:Drivers/CMSIS/Include/cmsis_gcc.h ****   return (op1 >> op2) | (op1 << (32U - op2));
 962:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 963:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 964:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 965:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 966:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Breakpoint
 967:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Causes the processor to enter Debug state.
 968:Drivers/CMSIS/Include/cmsis_gcc.h ****            Debug tools can use this to investigate system state when the instruction at a particula
 969:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  is ignored by the processor.
 970:Drivers/CMSIS/Include/cmsis_gcc.h ****                  If required, a debugger can use it to store additional information about the break
 971:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 972:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __BKPT(value)                       __ASM volatile ("bkpt "#value)
 973:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 974:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 975:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 976:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse bit order of value
 977:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the bit order of the given value.
 978:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 979:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 980:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 981:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __RBIT(uint32_t value)
 1564              		.loc 2 981 31 view .LVU498
 1565              	.LBB5:
 982:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 983:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 1566              		.loc 2 983 3 view .LVU499
 984:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 985:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 986:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 987:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 988:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("rbit %0, %1" : "=r" (result) : "r" (value) );
 1567              		.loc 2 988 4 view .LVU500
 1568              		.syntax unified
 1569              	@ 988 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1570 0010 91FAA1F1 		rbit r1, r1
 1571              	@ 0 "" 2
 1572              	.LVL113:
 989:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 990:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t s = (4U /*sizeof(v)*/ * 8U) - 1U; /* extra shift needed at end */
 991:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 992:Drivers/CMSIS/Include/cmsis_gcc.h ****   result = value;                      /* r will be reversed bits of v; first get LSB of v */
 993:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (value >>= 1U; value != 0U; value >>= 1U)
 994:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 995:Drivers/CMSIS/Include/cmsis_gcc.h ****     result <<= 1U;
 996:Drivers/CMSIS/Include/cmsis_gcc.h ****     result |= value & 1U;
 997:Drivers/CMSIS/Include/cmsis_gcc.h ****     s--;
 998:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 999:Drivers/CMSIS/Include/cmsis_gcc.h ****   result <<= s;                        /* shift when v's highest bits are zero */
1000:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
1001:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 1573              		.loc 2 1001 3 view .LVU501
 1574              		.loc 2 1001 3 is_stmt 0 view .LVU502
 1575              		.thumb
ARM GAS  C:\Users\XAVIER~1\AppData\Local\Temp\cc1dYJ0Y.s 			page 77


 1576              		.syntax unified
 1577              	.LBE5:
 1578              	.LBE4:
1488:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** 
 1579              		.loc 1 1488 21 view .LVU503
 1580 0014 B1FA81F1 		clz	r1, r1
 1581              	.LVL114:
1491:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   }
 1582              		.loc 1 1491 5 is_stmt 1 view .LVU504
1491:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   }
 1583              		.loc 1 1491 22 is_stmt 0 view .LVU505
 1584 0018 0368     		ldr	r3, [r0]
1491:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   }
 1585              		.loc 1 1491 61 view .LVU506
 1586 001a 1831     		adds	r1, r1, #24
 1587              	.LVL115:
1491:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   }
 1588              		.loc 1 1491 61 view .LVU507
 1589 001c 03EB0111 		add	r1, r3, r1, lsl #4
 1590              	.LVL116:
1491:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   }
 1591              		.loc 1 1491 61 view .LVU508
 1592 0020 4868     		ldr	r0, [r1, #4]
 1593              	.LVL117:
1491:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   }
 1594              		.loc 1 1491 85 view .LVU509
 1595 0022 000C     		lsrs	r0, r0, #16
 1596              	.LVL118:
1491:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   }
 1597              		.loc 1 1491 85 view .LVU510
 1598 0024 7047     		bx	lr
 1599              		.cfi_endproc
 1600              	.LFE155:
 1602              		.section	.text.HAL_CAN_GetRxMessage,"ax",%progbits
 1603              		.align	1
 1604              		.global	HAL_CAN_GetRxMessage
 1605              		.syntax unified
 1606              		.thumb
 1607              		.thumb_func
 1608              		.fpu fpv5-sp-d16
 1610              	HAL_CAN_GetRxMessage:
 1611              	.LVL119:
 1612              	.LFB156:
1497:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** 
1498:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** /**
1499:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   * @brief  Get an CAN frame from the Rx FIFO zone into the message RAM.
1500:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   * @param  hcan pointer to an CAN_HandleTypeDef structure that contains
1501:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   *         the configuration information for the specified CAN.
1502:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   * @param  RxFifo Fifo number of the received message to be read.
1503:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   *         This parameter can be a value of @arg CAN_receive_FIFO_number.
1504:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   * @param  pHeader pointer to a CAN_RxHeaderTypeDef structure where the header
1505:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   *         of the Rx frame will be stored.
1506:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   * @param  aData array where the payload of the Rx frame will be stored.
1507:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   * @retval HAL status
1508:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   */
1509:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** HAL_StatusTypeDef HAL_CAN_GetRxMessage(CAN_HandleTypeDef *hcan, uint32_t RxFifo,
1510:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****                                        CAN_RxHeaderTypeDef *pHeader, uint8_t aData[])
ARM GAS  C:\Users\XAVIER~1\AppData\Local\Temp\cc1dYJ0Y.s 			page 78


1511:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** {
 1613              		.loc 1 1511 1 is_stmt 1 view -0
 1614              		.cfi_startproc
 1615              		@ args = 0, pretend = 0, frame = 0
 1616              		@ frame_needed = 0, uses_anonymous_args = 0
 1617              		@ link register save eliminated.
1512:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   HAL_CAN_StateTypeDef state = hcan->State;
 1618              		.loc 1 1512 3 view .LVU512
 1619              		.loc 1 1512 24 is_stmt 0 view .LVU513
 1620 0000 90F820C0 		ldrb	ip, [r0, #32]	@ zero_extendqisi2
 1621              	.LVL120:
1513:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** 
1514:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   assert_param(IS_CAN_RX_FIFO(RxFifo));
 1622              		.loc 1 1514 3 is_stmt 1 view .LVU514
1515:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** 
1516:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   if ((state == HAL_CAN_STATE_READY) ||
 1623              		.loc 1 1516 3 view .LVU515
 1624              		.loc 1 1516 38 is_stmt 0 view .LVU516
 1625 0004 0CF1FF3C 		add	ip, ip, #-1
 1626              	.LVL121:
 1627              		.loc 1 1516 38 view .LVU517
 1628 0008 5FFA8CFC 		uxtb	ip, ip
 1629              		.loc 1 1516 6 view .LVU518
 1630 000c BCF1010F 		cmp	ip, #1
 1631 0010 00F29580 		bhi	.L130
1511:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   HAL_CAN_StateTypeDef state = hcan->State;
 1632              		.loc 1 1511 1 view .LVU519
 1633 0014 30B4     		push	{r4, r5}
 1634              	.LCFI10:
 1635              		.cfi_def_cfa_offset 8
 1636              		.cfi_offset 4, -8
 1637              		.cfi_offset 5, -4
1517:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****       (state == HAL_CAN_STATE_LISTENING))
1518:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   {
1519:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****     /* Check the Rx FIFO */
1520:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****     if (RxFifo == CAN_RX_FIFO0) /* Rx element is assigned to Rx FIFO 0 */
 1638              		.loc 1 1520 5 is_stmt 1 view .LVU520
 1639              		.loc 1 1520 8 is_stmt 0 view .LVU521
 1640 0016 51B9     		cbnz	r1, .L131
1521:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****     {
1522:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****       /* Check that the Rx FIFO 0 is not empty */
1523:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****       if ((hcan->Instance->RF0R & CAN_RF0R_FMP0) == 0U)
 1641              		.loc 1 1523 7 is_stmt 1 view .LVU522
 1642              		.loc 1 1523 16 is_stmt 0 view .LVU523
 1643 0018 0468     		ldr	r4, [r0]
 1644              		.loc 1 1523 26 view .LVU524
 1645 001a E468     		ldr	r4, [r4, #12]
 1646              		.loc 1 1523 10 view .LVU525
 1647 001c 14F0030F 		tst	r4, #3
 1648 0020 10D1     		bne	.L132
1524:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****       {
1525:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****         /* Update error code */
1526:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****         hcan->ErrorCode |= HAL_CAN_ERROR_PARAM;
 1649              		.loc 1 1526 9 is_stmt 1 view .LVU526
 1650              		.loc 1 1526 25 is_stmt 0 view .LVU527
 1651 0022 436A     		ldr	r3, [r0, #36]
 1652              	.LVL122:
ARM GAS  C:\Users\XAVIER~1\AppData\Local\Temp\cc1dYJ0Y.s 			page 79


 1653              		.loc 1 1526 25 view .LVU528
 1654 0024 43F40013 		orr	r3, r3, #2097152
 1655 0028 4362     		str	r3, [r0, #36]
1527:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** 
1528:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****         return HAL_ERROR;
 1656              		.loc 1 1528 9 is_stmt 1 view .LVU529
 1657              		.loc 1 1528 16 is_stmt 0 view .LVU530
 1658 002a 0120     		movs	r0, #1
 1659              	.LVL123:
 1660              		.loc 1 1528 16 view .LVU531
 1661 002c 77E0     		b	.L133
 1662              	.LVL124:
 1663              	.L131:
1529:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****       }
1530:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****     }
1531:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****     else /* Rx element is assigned to Rx FIFO 1 */
1532:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****     {
1533:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****       /* Check that the Rx FIFO 1 is not empty */
1534:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****       if ((hcan->Instance->RF1R & CAN_RF1R_FMP1) == 0U)
 1664              		.loc 1 1534 7 is_stmt 1 view .LVU532
 1665              		.loc 1 1534 16 is_stmt 0 view .LVU533
 1666 002e 0468     		ldr	r4, [r0]
 1667              		.loc 1 1534 26 view .LVU534
 1668 0030 2469     		ldr	r4, [r4, #16]
 1669              		.loc 1 1534 10 view .LVU535
 1670 0032 14F0030F 		tst	r4, #3
 1671 0036 05D1     		bne	.L132
1535:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****       {
1536:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****         /* Update error code */
1537:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****         hcan->ErrorCode |= HAL_CAN_ERROR_PARAM;
 1672              		.loc 1 1537 9 is_stmt 1 view .LVU536
 1673              		.loc 1 1537 25 is_stmt 0 view .LVU537
 1674 0038 436A     		ldr	r3, [r0, #36]
 1675              	.LVL125:
 1676              		.loc 1 1537 25 view .LVU538
 1677 003a 43F40013 		orr	r3, r3, #2097152
 1678 003e 4362     		str	r3, [r0, #36]
1538:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** 
1539:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****         return HAL_ERROR;
 1679              		.loc 1 1539 9 is_stmt 1 view .LVU539
 1680              		.loc 1 1539 16 is_stmt 0 view .LVU540
 1681 0040 0120     		movs	r0, #1
 1682              	.LVL126:
 1683              		.loc 1 1539 16 view .LVU541
 1684 0042 6CE0     		b	.L133
 1685              	.LVL127:
 1686              	.L132:
1540:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****       }
1541:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****     }
1542:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** 
1543:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****     /* Get the header */
1544:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****     pHeader->IDE = CAN_RI0R_IDE & hcan->Instance->sFIFOMailBox[RxFifo].RIR;
 1687              		.loc 1 1544 5 is_stmt 1 view .LVU542
 1688              		.loc 1 1544 71 is_stmt 0 view .LVU543
 1689 0044 01F11B04 		add	r4, r1, #27
 1690 0048 2401     		lsls	r4, r4, #4
 1691 004a 0568     		ldr	r5, [r0]
ARM GAS  C:\Users\XAVIER~1\AppData\Local\Temp\cc1dYJ0Y.s 			page 80


 1692 004c 2C59     		ldr	r4, [r5, r4]
 1693              		.loc 1 1544 33 view .LVU544
 1694 004e 04F00404 		and	r4, r4, #4
 1695              		.loc 1 1544 18 view .LVU545
 1696 0052 9460     		str	r4, [r2, #8]
1545:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****     if (pHeader->IDE == CAN_ID_STD)
 1697              		.loc 1 1545 5 is_stmt 1 view .LVU546
 1698              		.loc 1 1545 8 is_stmt 0 view .LVU547
 1699 0054 002C     		cmp	r4, #0
 1700 0056 64D1     		bne	.L134
1546:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****     {
1547:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****       pHeader->StdId = (CAN_RI0R_STID & hcan->Instance->sFIFOMailBox[RxFifo].RIR) >> CAN_TI0R_STID_
 1701              		.loc 1 1547 7 is_stmt 1 view .LVU548
 1702              		.loc 1 1547 77 is_stmt 0 view .LVU549
 1703 0058 01F11B04 		add	r4, r1, #27
 1704 005c 2401     		lsls	r4, r4, #4
 1705 005e 0568     		ldr	r5, [r0]
 1706 0060 2C59     		ldr	r4, [r5, r4]
 1707              		.loc 1 1547 83 view .LVU550
 1708 0062 640D     		lsrs	r4, r4, #21
 1709              		.loc 1 1547 22 view .LVU551
 1710 0064 1460     		str	r4, [r2]
 1711              	.L135:
1548:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****     }
1549:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****     else
1550:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****     {
1551:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****       pHeader->ExtId = ((CAN_RI0R_EXID | CAN_RI0R_STID) &
1552:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****                         hcan->Instance->sFIFOMailBox[RxFifo].RIR) >> CAN_RI0R_EXID_Pos;
1553:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****     }
1554:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****     pHeader->RTR = (CAN_RI0R_RTR & hcan->Instance->sFIFOMailBox[RxFifo].RIR);
 1712              		.loc 1 1554 5 is_stmt 1 view .LVU552
 1713              		.loc 1 1554 40 is_stmt 0 view .LVU553
 1714 0066 0468     		ldr	r4, [r0]
 1715              		.loc 1 1554 72 view .LVU554
 1716 0068 01F11B0C 		add	ip, r1, #27
 1717 006c 4FEA0C1C 		lsl	ip, ip, #4
 1718 0070 54F80C40 		ldr	r4, [r4, ip]
 1719              		.loc 1 1554 34 view .LVU555
 1720 0074 04F00204 		and	r4, r4, #2
 1721              		.loc 1 1554 18 view .LVU556
 1722 0078 D460     		str	r4, [r2, #12]
1555:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****     pHeader->DLC = (CAN_RDT0R_DLC & hcan->Instance->sFIFOMailBox[RxFifo].RDTR) >> CAN_RDT0R_DLC_Pos
 1723              		.loc 1 1555 5 is_stmt 1 view .LVU557
 1724              		.loc 1 1555 41 is_stmt 0 view .LVU558
 1725 007a 0468     		ldr	r4, [r0]
 1726              		.loc 1 1555 73 view .LVU559
 1727 007c 6444     		add	r4, r4, ip
 1728 007e 6468     		ldr	r4, [r4, #4]
 1729              		.loc 1 1555 80 view .LVU560
 1730 0080 04F00F04 		and	r4, r4, #15
 1731              		.loc 1 1555 18 view .LVU561
 1732 0084 1461     		str	r4, [r2, #16]
1556:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****     pHeader->FilterMatchIndex = (CAN_RDT0R_FMI & hcan->Instance->sFIFOMailBox[RxFifo].RDTR) >> CAN_
 1733              		.loc 1 1556 5 is_stmt 1 view .LVU562
 1734              		.loc 1 1556 54 is_stmt 0 view .LVU563
 1735 0086 0468     		ldr	r4, [r0]
 1736              		.loc 1 1556 86 view .LVU564
ARM GAS  C:\Users\XAVIER~1\AppData\Local\Temp\cc1dYJ0Y.s 			page 81


 1737 0088 6444     		add	r4, r4, ip
 1738 008a 6468     		ldr	r4, [r4, #4]
 1739              		.loc 1 1556 93 view .LVU565
 1740 008c C4F30724 		ubfx	r4, r4, #8, #8
 1741              		.loc 1 1556 31 view .LVU566
 1742 0090 9461     		str	r4, [r2, #24]
1557:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****     pHeader->Timestamp = (CAN_RDT0R_TIME & hcan->Instance->sFIFOMailBox[RxFifo].RDTR) >> CAN_RDT0R_
 1743              		.loc 1 1557 5 is_stmt 1 view .LVU567
 1744              		.loc 1 1557 48 is_stmt 0 view .LVU568
 1745 0092 0468     		ldr	r4, [r0]
 1746              		.loc 1 1557 80 view .LVU569
 1747 0094 6444     		add	r4, r4, ip
 1748 0096 6468     		ldr	r4, [r4, #4]
 1749              		.loc 1 1557 87 view .LVU570
 1750 0098 240C     		lsrs	r4, r4, #16
 1751              		.loc 1 1557 24 view .LVU571
 1752 009a 5461     		str	r4, [r2, #20]
1558:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** 
1559:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****     /* Get the data */
1560:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****     aData[0] = (uint8_t)((CAN_RDL0R_DATA0 & hcan->Instance->sFIFOMailBox[RxFifo].RDLR) >> CAN_RDL0R
 1753              		.loc 1 1560 5 is_stmt 1 view .LVU572
 1754              		.loc 1 1560 49 is_stmt 0 view .LVU573
 1755 009c 0268     		ldr	r2, [r0]
 1756              	.LVL128:
 1757              		.loc 1 1560 81 view .LVU574
 1758 009e 02EB0112 		add	r2, r2, r1, lsl #4
 1759 00a2 D2F8B821 		ldr	r2, [r2, #440]
 1760              		.loc 1 1560 14 view .LVU575
 1761 00a6 1A70     		strb	r2, [r3]
1561:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****     aData[1] = (uint8_t)((CAN_RDL0R_DATA1 & hcan->Instance->sFIFOMailBox[RxFifo].RDLR) >> CAN_RDL0R
 1762              		.loc 1 1561 5 is_stmt 1 view .LVU576
 1763              		.loc 1 1561 49 is_stmt 0 view .LVU577
 1764 00a8 0268     		ldr	r2, [r0]
 1765              		.loc 1 1561 81 view .LVU578
 1766 00aa 02EB0112 		add	r2, r2, r1, lsl #4
 1767 00ae D2F8B821 		ldr	r2, [r2, #440]
 1768              		.loc 1 1561 16 view .LVU579
 1769 00b2 C2F30722 		ubfx	r2, r2, #8, #8
 1770              		.loc 1 1561 14 view .LVU580
 1771 00b6 5A70     		strb	r2, [r3, #1]
1562:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****     aData[2] = (uint8_t)((CAN_RDL0R_DATA2 & hcan->Instance->sFIFOMailBox[RxFifo].RDLR) >> CAN_RDL0R
 1772              		.loc 1 1562 5 is_stmt 1 view .LVU581
 1773              		.loc 1 1562 49 is_stmt 0 view .LVU582
 1774 00b8 0268     		ldr	r2, [r0]
 1775              		.loc 1 1562 81 view .LVU583
 1776 00ba 02EB0112 		add	r2, r2, r1, lsl #4
 1777 00be D2F8B821 		ldr	r2, [r2, #440]
 1778              		.loc 1 1562 16 view .LVU584
 1779 00c2 C2F30742 		ubfx	r2, r2, #16, #8
 1780              		.loc 1 1562 14 view .LVU585
 1781 00c6 9A70     		strb	r2, [r3, #2]
1563:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****     aData[3] = (uint8_t)((CAN_RDL0R_DATA3 & hcan->Instance->sFIFOMailBox[RxFifo].RDLR) >> CAN_RDL0R
 1782              		.loc 1 1563 5 is_stmt 1 view .LVU586
 1783              		.loc 1 1563 49 is_stmt 0 view .LVU587
 1784 00c8 0268     		ldr	r2, [r0]
 1785              		.loc 1 1563 81 view .LVU588
 1786 00ca 02EB0112 		add	r2, r2, r1, lsl #4
ARM GAS  C:\Users\XAVIER~1\AppData\Local\Temp\cc1dYJ0Y.s 			page 82


 1787 00ce D2F8B821 		ldr	r2, [r2, #440]
 1788              		.loc 1 1563 16 view .LVU589
 1789 00d2 120E     		lsrs	r2, r2, #24
 1790              		.loc 1 1563 14 view .LVU590
 1791 00d4 DA70     		strb	r2, [r3, #3]
1564:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****     aData[4] = (uint8_t)((CAN_RDH0R_DATA4 & hcan->Instance->sFIFOMailBox[RxFifo].RDHR) >> CAN_RDH0R
 1792              		.loc 1 1564 5 is_stmt 1 view .LVU591
 1793              		.loc 1 1564 49 is_stmt 0 view .LVU592
 1794 00d6 0268     		ldr	r2, [r0]
 1795              		.loc 1 1564 81 view .LVU593
 1796 00d8 02EB0112 		add	r2, r2, r1, lsl #4
 1797 00dc D2F8BC21 		ldr	r2, [r2, #444]
 1798              		.loc 1 1564 14 view .LVU594
 1799 00e0 1A71     		strb	r2, [r3, #4]
1565:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****     aData[5] = (uint8_t)((CAN_RDH0R_DATA5 & hcan->Instance->sFIFOMailBox[RxFifo].RDHR) >> CAN_RDH0R
 1800              		.loc 1 1565 5 is_stmt 1 view .LVU595
 1801              		.loc 1 1565 49 is_stmt 0 view .LVU596
 1802 00e2 0268     		ldr	r2, [r0]
 1803              		.loc 1 1565 81 view .LVU597
 1804 00e4 02EB0112 		add	r2, r2, r1, lsl #4
 1805 00e8 D2F8BC21 		ldr	r2, [r2, #444]
 1806              		.loc 1 1565 16 view .LVU598
 1807 00ec C2F30722 		ubfx	r2, r2, #8, #8
 1808              		.loc 1 1565 14 view .LVU599
 1809 00f0 5A71     		strb	r2, [r3, #5]
1566:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****     aData[6] = (uint8_t)((CAN_RDH0R_DATA6 & hcan->Instance->sFIFOMailBox[RxFifo].RDHR) >> CAN_RDH0R
 1810              		.loc 1 1566 5 is_stmt 1 view .LVU600
 1811              		.loc 1 1566 49 is_stmt 0 view .LVU601
 1812 00f2 0268     		ldr	r2, [r0]
 1813              		.loc 1 1566 81 view .LVU602
 1814 00f4 02EB0112 		add	r2, r2, r1, lsl #4
 1815 00f8 D2F8BC21 		ldr	r2, [r2, #444]
 1816              		.loc 1 1566 16 view .LVU603
 1817 00fc C2F30742 		ubfx	r2, r2, #16, #8
 1818              		.loc 1 1566 14 view .LVU604
 1819 0100 9A71     		strb	r2, [r3, #6]
1567:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****     aData[7] = (uint8_t)((CAN_RDH0R_DATA7 & hcan->Instance->sFIFOMailBox[RxFifo].RDHR) >> CAN_RDH0R
 1820              		.loc 1 1567 5 is_stmt 1 view .LVU605
 1821              		.loc 1 1567 49 is_stmt 0 view .LVU606
 1822 0102 0268     		ldr	r2, [r0]
 1823              		.loc 1 1567 81 view .LVU607
 1824 0104 02EB0112 		add	r2, r2, r1, lsl #4
 1825 0108 D2F8BC21 		ldr	r2, [r2, #444]
 1826              		.loc 1 1567 16 view .LVU608
 1827 010c 120E     		lsrs	r2, r2, #24
 1828              		.loc 1 1567 14 view .LVU609
 1829 010e DA71     		strb	r2, [r3, #7]
1568:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** 
1569:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****     /* Release the FIFO */
1570:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****     if (RxFifo == CAN_RX_FIFO0) /* Rx element is assigned to Rx FIFO 0 */
 1830              		.loc 1 1570 5 is_stmt 1 view .LVU610
 1831              		.loc 1 1570 8 is_stmt 0 view .LVU611
 1832 0110 79B9     		cbnz	r1, .L136
1571:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****     {
1572:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****       /* Release RX FIFO 0 */
1573:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****       SET_BIT(hcan->Instance->RF0R, CAN_RF0R_RFOM0);
 1833              		.loc 1 1573 7 is_stmt 1 view .LVU612
ARM GAS  C:\Users\XAVIER~1\AppData\Local\Temp\cc1dYJ0Y.s 			page 83


 1834 0112 0268     		ldr	r2, [r0]
 1835 0114 D368     		ldr	r3, [r2, #12]
 1836              	.LVL129:
 1837              		.loc 1 1573 7 is_stmt 0 view .LVU613
 1838 0116 43F02003 		orr	r3, r3, #32
 1839 011a D360     		str	r3, [r2, #12]
 1840              	.L137:
1574:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****     }
1575:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****     else /* Rx element is assigned to Rx FIFO 1 */
1576:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****     {
1577:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****       /* Release RX FIFO 1 */
1578:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****       SET_BIT(hcan->Instance->RF1R, CAN_RF1R_RFOM1);
1579:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****     }
1580:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** 
1581:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****     /* Return function status */
1582:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****     return HAL_OK;
 1841              		.loc 1 1582 5 is_stmt 1 view .LVU614
 1842              		.loc 1 1582 12 is_stmt 0 view .LVU615
 1843 011c 0020     		movs	r0, #0
 1844              	.LVL130:
 1845              	.L133:
1583:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   }
1584:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   else
1585:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   {
1586:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****     /* Update error code */
1587:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****     hcan->ErrorCode |= HAL_CAN_ERROR_NOT_INITIALIZED;
1588:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** 
1589:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****     return HAL_ERROR;
1590:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   }
1591:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** }
 1846              		.loc 1 1591 1 view .LVU616
 1847 011e 30BC     		pop	{r4, r5}
 1848              	.LCFI11:
 1849              		.cfi_remember_state
 1850              		.cfi_restore 5
 1851              		.cfi_restore 4
 1852              		.cfi_def_cfa_offset 0
 1853 0120 7047     		bx	lr
 1854              	.LVL131:
 1855              	.L134:
 1856              	.LCFI12:
 1857              		.cfi_restore_state
1551:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****                         hcan->Instance->sFIFOMailBox[RxFifo].RIR) >> CAN_RI0R_EXID_Pos;
 1858              		.loc 1 1551 7 is_stmt 1 view .LVU617
1552:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****     }
 1859              		.loc 1 1552 61 is_stmt 0 view .LVU618
 1860 0122 01F11B04 		add	r4, r1, #27
 1861 0126 2401     		lsls	r4, r4, #4
 1862 0128 0568     		ldr	r5, [r0]
 1863 012a 2C59     		ldr	r4, [r5, r4]
1552:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****     }
 1864              		.loc 1 1552 67 view .LVU619
 1865 012c E408     		lsrs	r4, r4, #3
1551:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****                         hcan->Instance->sFIFOMailBox[RxFifo].RIR) >> CAN_RI0R_EXID_Pos;
 1866              		.loc 1 1551 22 view .LVU620
 1867 012e 5460     		str	r4, [r2, #4]
 1868 0130 99E7     		b	.L135
ARM GAS  C:\Users\XAVIER~1\AppData\Local\Temp\cc1dYJ0Y.s 			page 84


 1869              	.LVL132:
 1870              	.L136:
1578:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****     }
 1871              		.loc 1 1578 7 is_stmt 1 view .LVU621
 1872 0132 0268     		ldr	r2, [r0]
 1873 0134 1369     		ldr	r3, [r2, #16]
 1874              	.LVL133:
1578:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****     }
 1875              		.loc 1 1578 7 is_stmt 0 view .LVU622
 1876 0136 43F02003 		orr	r3, r3, #32
 1877 013a 1361     		str	r3, [r2, #16]
 1878 013c EEE7     		b	.L137
 1879              	.LVL134:
 1880              	.L130:
 1881              	.LCFI13:
 1882              		.cfi_def_cfa_offset 0
 1883              		.cfi_restore 4
 1884              		.cfi_restore 5
1587:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** 
 1885              		.loc 1 1587 5 is_stmt 1 view .LVU623
1587:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** 
 1886              		.loc 1 1587 21 is_stmt 0 view .LVU624
 1887 013e 436A     		ldr	r3, [r0, #36]
 1888              	.LVL135:
1587:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** 
 1889              		.loc 1 1587 21 view .LVU625
 1890 0140 43F48023 		orr	r3, r3, #262144
 1891 0144 4362     		str	r3, [r0, #36]
1589:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   }
 1892              		.loc 1 1589 5 is_stmt 1 view .LVU626
1589:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   }
 1893              		.loc 1 1589 12 is_stmt 0 view .LVU627
 1894 0146 0120     		movs	r0, #1
 1895              	.LVL136:
 1896              		.loc 1 1591 1 view .LVU628
 1897 0148 7047     		bx	lr
 1898              		.cfi_endproc
 1899              	.LFE156:
 1901              		.section	.text.HAL_CAN_GetRxFifoFillLevel,"ax",%progbits
 1902              		.align	1
 1903              		.global	HAL_CAN_GetRxFifoFillLevel
 1904              		.syntax unified
 1905              		.thumb
 1906              		.thumb_func
 1907              		.fpu fpv5-sp-d16
 1909              	HAL_CAN_GetRxFifoFillLevel:
 1910              	.LVL137:
 1911              	.LFB157:
1592:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** 
1593:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** /**
1594:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   * @brief  Return Rx FIFO fill level.
1595:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   * @param  hcan pointer to an CAN_HandleTypeDef structure that contains
1596:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   *         the configuration information for the specified CAN.
1597:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   * @param  RxFifo Rx FIFO.
1598:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   *         This parameter can be a value of @arg CAN_receive_FIFO_number.
1599:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   * @retval Number of messages available in Rx FIFO.
1600:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   */
ARM GAS  C:\Users\XAVIER~1\AppData\Local\Temp\cc1dYJ0Y.s 			page 85


1601:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** uint32_t HAL_CAN_GetRxFifoFillLevel(const CAN_HandleTypeDef *hcan, uint32_t RxFifo)
1602:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** {
 1912              		.loc 1 1602 1 is_stmt 1 view -0
 1913              		.cfi_startproc
 1914              		@ args = 0, pretend = 0, frame = 0
 1915              		@ frame_needed = 0, uses_anonymous_args = 0
 1916              		@ link register save eliminated.
1603:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   uint32_t filllevel = 0U;
 1917              		.loc 1 1603 3 view .LVU630
1604:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   HAL_CAN_StateTypeDef state = hcan->State;
 1918              		.loc 1 1604 3 view .LVU631
 1919              		.loc 1 1604 24 is_stmt 0 view .LVU632
 1920 0000 90F82030 		ldrb	r3, [r0, #32]	@ zero_extendqisi2
 1921              	.LVL138:
1605:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** 
1606:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   /* Check function parameters */
1607:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   assert_param(IS_CAN_RX_FIFO(RxFifo));
 1922              		.loc 1 1607 3 is_stmt 1 view .LVU633
1608:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** 
1609:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   if ((state == HAL_CAN_STATE_READY) ||
 1923              		.loc 1 1609 3 view .LVU634
 1924              		.loc 1 1609 38 is_stmt 0 view .LVU635
 1925 0004 013B     		subs	r3, r3, #1
 1926              	.LVL139:
 1927              		.loc 1 1609 38 view .LVU636
 1928 0006 DBB2     		uxtb	r3, r3
 1929              		.loc 1 1609 6 view .LVU637
 1930 0008 012B     		cmp	r3, #1
 1931 000a 01D9     		bls	.L146
1603:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   HAL_CAN_StateTypeDef state = hcan->State;
 1932              		.loc 1 1603 12 view .LVU638
 1933 000c 0020     		movs	r0, #0
 1934              	.LVL140:
1610:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****       (state == HAL_CAN_STATE_LISTENING))
1611:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   {
1612:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****     if (RxFifo == CAN_RX_FIFO0)
1613:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****     {
1614:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****       filllevel = hcan->Instance->RF0R & CAN_RF0R_FMP0;
1615:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****     }
1616:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****     else /* RxFifo == CAN_RX_FIFO1 */
1617:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****     {
1618:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****       filllevel = hcan->Instance->RF1R & CAN_RF1R_FMP1;
1619:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****     }
1620:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   }
1621:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** 
1622:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   /* Return Rx FIFO fill level */
1623:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   return filllevel;
 1935              		.loc 1 1623 3 is_stmt 1 view .LVU639
1624:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** }
 1936              		.loc 1 1624 1 is_stmt 0 view .LVU640
 1937 000e 7047     		bx	lr
 1938              	.LVL141:
 1939              	.L146:
1612:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****     {
 1940              		.loc 1 1612 5 is_stmt 1 view .LVU641
1612:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****     {
 1941              		.loc 1 1612 8 is_stmt 0 view .LVU642
ARM GAS  C:\Users\XAVIER~1\AppData\Local\Temp\cc1dYJ0Y.s 			page 86


 1942 0010 21B9     		cbnz	r1, .L144
1614:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****     }
 1943              		.loc 1 1614 7 is_stmt 1 view .LVU643
1614:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****     }
 1944              		.loc 1 1614 23 is_stmt 0 view .LVU644
 1945 0012 0368     		ldr	r3, [r0]
1614:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****     }
 1946              		.loc 1 1614 33 view .LVU645
 1947 0014 D868     		ldr	r0, [r3, #12]
 1948              	.LVL142:
1614:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****     }
 1949              		.loc 1 1614 17 view .LVU646
 1950 0016 00F00300 		and	r0, r0, #3
 1951              	.LVL143:
1614:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****     }
 1952              		.loc 1 1614 17 view .LVU647
 1953 001a 7047     		bx	lr
 1954              	.LVL144:
 1955              	.L144:
1618:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****     }
 1956              		.loc 1 1618 7 is_stmt 1 view .LVU648
1618:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****     }
 1957              		.loc 1 1618 23 is_stmt 0 view .LVU649
 1958 001c 0368     		ldr	r3, [r0]
1618:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****     }
 1959              		.loc 1 1618 33 view .LVU650
 1960 001e 1869     		ldr	r0, [r3, #16]
 1961              	.LVL145:
1618:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****     }
 1962              		.loc 1 1618 17 view .LVU651
 1963 0020 00F00300 		and	r0, r0, #3
 1964              	.LVL146:
1618:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****     }
 1965              		.loc 1 1618 17 view .LVU652
 1966 0024 7047     		bx	lr
 1967              		.cfi_endproc
 1968              	.LFE157:
 1970              		.section	.text.HAL_CAN_ActivateNotification,"ax",%progbits
 1971              		.align	1
 1972              		.global	HAL_CAN_ActivateNotification
 1973              		.syntax unified
 1974              		.thumb
 1975              		.thumb_func
 1976              		.fpu fpv5-sp-d16
 1978              	HAL_CAN_ActivateNotification:
 1979              	.LVL147:
 1980              	.LFB158:
1625:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** 
1626:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** /**
1627:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   * @}
1628:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   */
1629:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** 
1630:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** /** @defgroup CAN_Exported_Functions_Group4 Interrupts management
1631:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****  *  @brief    Interrupts management
1632:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****  *
1633:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** @verbatim
1634:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   ==============================================================================
ARM GAS  C:\Users\XAVIER~1\AppData\Local\Temp\cc1dYJ0Y.s 			page 87


1635:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****                        ##### Interrupts management #####
1636:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   ==============================================================================
1637:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****     [..]  This section provides functions allowing to:
1638:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****       (+) HAL_CAN_ActivateNotification      : Enable interrupts
1639:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****       (+) HAL_CAN_DeactivateNotification    : Disable interrupts
1640:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****       (+) HAL_CAN_IRQHandler                : Handles CAN interrupt request
1641:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** 
1642:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** @endverbatim
1643:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   * @{
1644:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   */
1645:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** 
1646:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** /**
1647:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   * @brief  Enable interrupts.
1648:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   * @param  hcan pointer to an CAN_HandleTypeDef structure that contains
1649:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   *         the configuration information for the specified CAN.
1650:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   * @param  ActiveITs indicates which interrupts will be enabled.
1651:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   *         This parameter can be any combination of @arg CAN_Interrupts.
1652:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   * @retval HAL status
1653:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   */
1654:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** HAL_StatusTypeDef HAL_CAN_ActivateNotification(CAN_HandleTypeDef *hcan, uint32_t ActiveITs)
1655:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** {
 1981              		.loc 1 1655 1 is_stmt 1 view -0
 1982              		.cfi_startproc
 1983              		@ args = 0, pretend = 0, frame = 0
 1984              		@ frame_needed = 0, uses_anonymous_args = 0
 1985              		@ link register save eliminated.
1656:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   HAL_CAN_StateTypeDef state = hcan->State;
 1986              		.loc 1 1656 3 view .LVU654
 1987              		.loc 1 1656 24 is_stmt 0 view .LVU655
 1988 0000 90F82030 		ldrb	r3, [r0, #32]	@ zero_extendqisi2
 1989              	.LVL148:
1657:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** 
1658:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   /* Check function parameters */
1659:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   assert_param(IS_CAN_IT(ActiveITs));
 1990              		.loc 1 1659 3 is_stmt 1 view .LVU656
1660:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** 
1661:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   if ((state == HAL_CAN_STATE_READY) ||
 1991              		.loc 1 1661 3 view .LVU657
 1992              		.loc 1 1661 38 is_stmt 0 view .LVU658
 1993 0004 013B     		subs	r3, r3, #1
 1994              	.LVL149:
 1995              		.loc 1 1661 38 view .LVU659
 1996 0006 DBB2     		uxtb	r3, r3
 1997              		.loc 1 1661 6 view .LVU660
 1998 0008 012B     		cmp	r3, #1
 1999 000a 05D9     		bls	.L150
1662:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****       (state == HAL_CAN_STATE_LISTENING))
1663:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   {
1664:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****     /* Enable the selected interrupts */
1665:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****     __HAL_CAN_ENABLE_IT(hcan, ActiveITs);
1666:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** 
1667:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****     /* Return function status */
1668:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****     return HAL_OK;
1669:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   }
1670:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   else
1671:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   {
1672:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****     /* Update error code */
ARM GAS  C:\Users\XAVIER~1\AppData\Local\Temp\cc1dYJ0Y.s 			page 88


1673:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****     hcan->ErrorCode |= HAL_CAN_ERROR_NOT_INITIALIZED;
 2000              		.loc 1 1673 5 is_stmt 1 view .LVU661
 2001              		.loc 1 1673 21 is_stmt 0 view .LVU662
 2002 000c 436A     		ldr	r3, [r0, #36]
 2003 000e 43F48023 		orr	r3, r3, #262144
 2004 0012 4362     		str	r3, [r0, #36]
1674:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** 
1675:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****     return HAL_ERROR;
 2005              		.loc 1 1675 5 is_stmt 1 view .LVU663
 2006              		.loc 1 1675 12 is_stmt 0 view .LVU664
 2007 0014 0120     		movs	r0, #1
 2008              	.LVL150:
1676:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   }
1677:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** }
 2009              		.loc 1 1677 1 view .LVU665
 2010 0016 7047     		bx	lr
 2011              	.LVL151:
 2012              	.L150:
1665:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** 
 2013              		.loc 1 1665 5 is_stmt 1 view .LVU666
 2014 0018 0268     		ldr	r2, [r0]
 2015 001a 5369     		ldr	r3, [r2, #20]
 2016 001c 1943     		orrs	r1, r1, r3
 2017              	.LVL152:
1665:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** 
 2018              		.loc 1 1665 5 is_stmt 0 view .LVU667
 2019 001e 5161     		str	r1, [r2, #20]
1668:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   }
 2020              		.loc 1 1668 5 is_stmt 1 view .LVU668
1668:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   }
 2021              		.loc 1 1668 12 is_stmt 0 view .LVU669
 2022 0020 0020     		movs	r0, #0
 2023              	.LVL153:
1668:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   }
 2024              		.loc 1 1668 12 view .LVU670
 2025 0022 7047     		bx	lr
 2026              		.cfi_endproc
 2027              	.LFE158:
 2029              		.section	.text.HAL_CAN_DeactivateNotification,"ax",%progbits
 2030              		.align	1
 2031              		.global	HAL_CAN_DeactivateNotification
 2032              		.syntax unified
 2033              		.thumb
 2034              		.thumb_func
 2035              		.fpu fpv5-sp-d16
 2037              	HAL_CAN_DeactivateNotification:
 2038              	.LVL154:
 2039              	.LFB159:
1678:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** 
1679:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** /**
1680:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   * @brief  Disable interrupts.
1681:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   * @param  hcan pointer to an CAN_HandleTypeDef structure that contains
1682:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   *         the configuration information for the specified CAN.
1683:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   * @param  InactiveITs indicates which interrupts will be disabled.
1684:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   *         This parameter can be any combination of @arg CAN_Interrupts.
1685:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   * @retval HAL status
1686:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   */
ARM GAS  C:\Users\XAVIER~1\AppData\Local\Temp\cc1dYJ0Y.s 			page 89


1687:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** HAL_StatusTypeDef HAL_CAN_DeactivateNotification(CAN_HandleTypeDef *hcan, uint32_t InactiveITs)
1688:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** {
 2040              		.loc 1 1688 1 is_stmt 1 view -0
 2041              		.cfi_startproc
 2042              		@ args = 0, pretend = 0, frame = 0
 2043              		@ frame_needed = 0, uses_anonymous_args = 0
 2044              		@ link register save eliminated.
1689:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   HAL_CAN_StateTypeDef state = hcan->State;
 2045              		.loc 1 1689 3 view .LVU672
 2046              		.loc 1 1689 24 is_stmt 0 view .LVU673
 2047 0000 90F82030 		ldrb	r3, [r0, #32]	@ zero_extendqisi2
 2048              	.LVL155:
1690:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** 
1691:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   /* Check function parameters */
1692:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   assert_param(IS_CAN_IT(InactiveITs));
 2049              		.loc 1 1692 3 is_stmt 1 view .LVU674
1693:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** 
1694:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   if ((state == HAL_CAN_STATE_READY) ||
 2050              		.loc 1 1694 3 view .LVU675
 2051              		.loc 1 1694 38 is_stmt 0 view .LVU676
 2052 0004 013B     		subs	r3, r3, #1
 2053              	.LVL156:
 2054              		.loc 1 1694 38 view .LVU677
 2055 0006 DBB2     		uxtb	r3, r3
 2056              		.loc 1 1694 6 view .LVU678
 2057 0008 012B     		cmp	r3, #1
 2058 000a 05D9     		bls	.L154
1695:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****       (state == HAL_CAN_STATE_LISTENING))
1696:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   {
1697:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****     /* Disable the selected interrupts */
1698:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****     __HAL_CAN_DISABLE_IT(hcan, InactiveITs);
1699:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** 
1700:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****     /* Return function status */
1701:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****     return HAL_OK;
1702:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   }
1703:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   else
1704:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   {
1705:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****     /* Update error code */
1706:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****     hcan->ErrorCode |= HAL_CAN_ERROR_NOT_INITIALIZED;
 2059              		.loc 1 1706 5 is_stmt 1 view .LVU679
 2060              		.loc 1 1706 21 is_stmt 0 view .LVU680
 2061 000c 436A     		ldr	r3, [r0, #36]
 2062 000e 43F48023 		orr	r3, r3, #262144
 2063 0012 4362     		str	r3, [r0, #36]
1707:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** 
1708:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****     return HAL_ERROR;
 2064              		.loc 1 1708 5 is_stmt 1 view .LVU681
 2065              		.loc 1 1708 12 is_stmt 0 view .LVU682
 2066 0014 0120     		movs	r0, #1
 2067              	.LVL157:
1709:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   }
1710:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** }
 2068              		.loc 1 1710 1 view .LVU683
 2069 0016 7047     		bx	lr
 2070              	.LVL158:
 2071              	.L154:
1698:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** 
ARM GAS  C:\Users\XAVIER~1\AppData\Local\Temp\cc1dYJ0Y.s 			page 90


 2072              		.loc 1 1698 5 is_stmt 1 view .LVU684
 2073 0018 0268     		ldr	r2, [r0]
 2074 001a 5369     		ldr	r3, [r2, #20]
 2075 001c 23EA0101 		bic	r1, r3, r1
 2076              	.LVL159:
1698:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** 
 2077              		.loc 1 1698 5 is_stmt 0 view .LVU685
 2078 0020 5161     		str	r1, [r2, #20]
1701:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   }
 2079              		.loc 1 1701 5 is_stmt 1 view .LVU686
1701:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   }
 2080              		.loc 1 1701 12 is_stmt 0 view .LVU687
 2081 0022 0020     		movs	r0, #0
 2082              	.LVL160:
1701:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   }
 2083              		.loc 1 1701 12 view .LVU688
 2084 0024 7047     		bx	lr
 2085              		.cfi_endproc
 2086              	.LFE159:
 2088              		.section	.text.HAL_CAN_TxMailbox0CompleteCallback,"ax",%progbits
 2089              		.align	1
 2090              		.weak	HAL_CAN_TxMailbox0CompleteCallback
 2091              		.syntax unified
 2092              		.thumb
 2093              		.thumb_func
 2094              		.fpu fpv5-sp-d16
 2096              	HAL_CAN_TxMailbox0CompleteCallback:
 2097              	.LVL161:
 2098              	.LFB161:
1711:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** 
1712:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** /**
1713:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   * @brief  Handles CAN interrupt request
1714:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   * @param  hcan pointer to a CAN_HandleTypeDef structure that contains
1715:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   *         the configuration information for the specified CAN.
1716:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   * @retval None
1717:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   */
1718:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** void HAL_CAN_IRQHandler(CAN_HandleTypeDef *hcan)
1719:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** {
1720:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   uint32_t errorcode = HAL_CAN_ERROR_NONE;
1721:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   uint32_t interrupts = READ_REG(hcan->Instance->IER);
1722:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   uint32_t msrflags = READ_REG(hcan->Instance->MSR);
1723:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   uint32_t tsrflags = READ_REG(hcan->Instance->TSR);
1724:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   uint32_t rf0rflags = READ_REG(hcan->Instance->RF0R);
1725:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   uint32_t rf1rflags = READ_REG(hcan->Instance->RF1R);
1726:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   uint32_t esrflags = READ_REG(hcan->Instance->ESR);
1727:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** 
1728:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   /* Transmit Mailbox empty interrupt management *****************************/
1729:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   if ((interrupts & CAN_IT_TX_MAILBOX_EMPTY) != 0U)
1730:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   {
1731:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****     /* Transmit Mailbox 0 management *****************************************/
1732:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****     if ((tsrflags & CAN_TSR_RQCP0) != 0U)
1733:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****     {
1734:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****       /* Clear the Transmission Complete flag (and TXOK0,ALST0,TERR0 bits) */
1735:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****       __HAL_CAN_CLEAR_FLAG(hcan, CAN_FLAG_RQCP0);
1736:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** 
1737:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****       if ((tsrflags & CAN_TSR_TXOK0) != 0U)
1738:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****       {
ARM GAS  C:\Users\XAVIER~1\AppData\Local\Temp\cc1dYJ0Y.s 			page 91


1739:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****         /* Transmission Mailbox 0 complete callback */
1740:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** #if USE_HAL_CAN_REGISTER_CALLBACKS == 1
1741:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****         /* Call registered callback*/
1742:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****         hcan->TxMailbox0CompleteCallback(hcan);
1743:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** #else
1744:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****         /* Call weak (surcharged) callback */
1745:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****         HAL_CAN_TxMailbox0CompleteCallback(hcan);
1746:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** #endif /* USE_HAL_CAN_REGISTER_CALLBACKS */
1747:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****       }
1748:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****       else
1749:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****       {
1750:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****         if ((tsrflags & CAN_TSR_ALST0) != 0U)
1751:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****         {
1752:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****           /* Update error code */
1753:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****           errorcode |= HAL_CAN_ERROR_TX_ALST0;
1754:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****         }
1755:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****         else if ((tsrflags & CAN_TSR_TERR0) != 0U)
1756:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****         {
1757:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****           /* Update error code */
1758:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****           errorcode |= HAL_CAN_ERROR_TX_TERR0;
1759:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****         }
1760:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****         else
1761:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****         {
1762:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****           /* Transmission Mailbox 0 abort callback */
1763:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** #if USE_HAL_CAN_REGISTER_CALLBACKS == 1
1764:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****           /* Call registered callback*/
1765:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****           hcan->TxMailbox0AbortCallback(hcan);
1766:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** #else
1767:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****           /* Call weak (surcharged) callback */
1768:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****           HAL_CAN_TxMailbox0AbortCallback(hcan);
1769:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** #endif /* USE_HAL_CAN_REGISTER_CALLBACKS */
1770:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****         }
1771:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****       }
1772:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****     }
1773:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** 
1774:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****     /* Transmit Mailbox 1 management *****************************************/
1775:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****     if ((tsrflags & CAN_TSR_RQCP1) != 0U)
1776:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****     {
1777:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****       /* Clear the Transmission Complete flag (and TXOK1,ALST1,TERR1 bits) */
1778:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****       __HAL_CAN_CLEAR_FLAG(hcan, CAN_FLAG_RQCP1);
1779:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** 
1780:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****       if ((tsrflags & CAN_TSR_TXOK1) != 0U)
1781:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****       {
1782:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****         /* Transmission Mailbox 1 complete callback */
1783:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** #if USE_HAL_CAN_REGISTER_CALLBACKS == 1
1784:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****         /* Call registered callback*/
1785:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****         hcan->TxMailbox1CompleteCallback(hcan);
1786:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** #else
1787:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****         /* Call weak (surcharged) callback */
1788:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****         HAL_CAN_TxMailbox1CompleteCallback(hcan);
1789:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** #endif /* USE_HAL_CAN_REGISTER_CALLBACKS */
1790:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****       }
1791:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****       else
1792:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****       {
1793:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****         if ((tsrflags & CAN_TSR_ALST1) != 0U)
1794:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****         {
1795:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****           /* Update error code */
ARM GAS  C:\Users\XAVIER~1\AppData\Local\Temp\cc1dYJ0Y.s 			page 92


1796:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****           errorcode |= HAL_CAN_ERROR_TX_ALST1;
1797:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****         }
1798:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****         else if ((tsrflags & CAN_TSR_TERR1) != 0U)
1799:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****         {
1800:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****           /* Update error code */
1801:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****           errorcode |= HAL_CAN_ERROR_TX_TERR1;
1802:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****         }
1803:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****         else
1804:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****         {
1805:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****           /* Transmission Mailbox 1 abort callback */
1806:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** #if USE_HAL_CAN_REGISTER_CALLBACKS == 1
1807:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****           /* Call registered callback*/
1808:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****           hcan->TxMailbox1AbortCallback(hcan);
1809:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** #else
1810:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****           /* Call weak (surcharged) callback */
1811:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****           HAL_CAN_TxMailbox1AbortCallback(hcan);
1812:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** #endif /* USE_HAL_CAN_REGISTER_CALLBACKS */
1813:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****         }
1814:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****       }
1815:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****     }
1816:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** 
1817:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****     /* Transmit Mailbox 2 management *****************************************/
1818:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****     if ((tsrflags & CAN_TSR_RQCP2) != 0U)
1819:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****     {
1820:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****       /* Clear the Transmission Complete flag (and TXOK2,ALST2,TERR2 bits) */
1821:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****       __HAL_CAN_CLEAR_FLAG(hcan, CAN_FLAG_RQCP2);
1822:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** 
1823:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****       if ((tsrflags & CAN_TSR_TXOK2) != 0U)
1824:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****       {
1825:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****         /* Transmission Mailbox 2 complete callback */
1826:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** #if USE_HAL_CAN_REGISTER_CALLBACKS == 1
1827:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****         /* Call registered callback*/
1828:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****         hcan->TxMailbox2CompleteCallback(hcan);
1829:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** #else
1830:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****         /* Call weak (surcharged) callback */
1831:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****         HAL_CAN_TxMailbox2CompleteCallback(hcan);
1832:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** #endif /* USE_HAL_CAN_REGISTER_CALLBACKS */
1833:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****       }
1834:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****       else
1835:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****       {
1836:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****         if ((tsrflags & CAN_TSR_ALST2) != 0U)
1837:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****         {
1838:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****           /* Update error code */
1839:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****           errorcode |= HAL_CAN_ERROR_TX_ALST2;
1840:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****         }
1841:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****         else if ((tsrflags & CAN_TSR_TERR2) != 0U)
1842:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****         {
1843:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****           /* Update error code */
1844:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****           errorcode |= HAL_CAN_ERROR_TX_TERR2;
1845:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****         }
1846:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****         else
1847:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****         {
1848:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****           /* Transmission Mailbox 2 abort callback */
1849:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** #if USE_HAL_CAN_REGISTER_CALLBACKS == 1
1850:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****           /* Call registered callback*/
1851:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****           hcan->TxMailbox2AbortCallback(hcan);
1852:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** #else
ARM GAS  C:\Users\XAVIER~1\AppData\Local\Temp\cc1dYJ0Y.s 			page 93


1853:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****           /* Call weak (surcharged) callback */
1854:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****           HAL_CAN_TxMailbox2AbortCallback(hcan);
1855:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** #endif /* USE_HAL_CAN_REGISTER_CALLBACKS */
1856:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****         }
1857:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****       }
1858:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****     }
1859:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   }
1860:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** 
1861:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   /* Receive FIFO 0 overrun interrupt management *****************************/
1862:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   if ((interrupts & CAN_IT_RX_FIFO0_OVERRUN) != 0U)
1863:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   {
1864:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****     if ((rf0rflags & CAN_RF0R_FOVR0) != 0U)
1865:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****     {
1866:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****       /* Set CAN error code to Rx Fifo 0 overrun error */
1867:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****       errorcode |= HAL_CAN_ERROR_RX_FOV0;
1868:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** 
1869:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****       /* Clear FIFO0 Overrun Flag */
1870:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****       __HAL_CAN_CLEAR_FLAG(hcan, CAN_FLAG_FOV0);
1871:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****     }
1872:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   }
1873:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** 
1874:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   /* Receive FIFO 0 full interrupt management ********************************/
1875:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   if ((interrupts & CAN_IT_RX_FIFO0_FULL) != 0U)
1876:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   {
1877:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****     if ((rf0rflags & CAN_RF0R_FULL0) != 0U)
1878:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****     {
1879:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****       /* Clear FIFO 0 full Flag */
1880:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****       __HAL_CAN_CLEAR_FLAG(hcan, CAN_FLAG_FF0);
1881:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** 
1882:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****       /* Receive FIFO 0 full Callback */
1883:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** #if USE_HAL_CAN_REGISTER_CALLBACKS == 1
1884:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****       /* Call registered callback*/
1885:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****       hcan->RxFifo0FullCallback(hcan);
1886:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** #else
1887:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****       /* Call weak (surcharged) callback */
1888:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****       HAL_CAN_RxFifo0FullCallback(hcan);
1889:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** #endif /* USE_HAL_CAN_REGISTER_CALLBACKS */
1890:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****     }
1891:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   }
1892:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** 
1893:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   /* Receive FIFO 0 message pending interrupt management *********************/
1894:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   if ((interrupts & CAN_IT_RX_FIFO0_MSG_PENDING) != 0U)
1895:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   {
1896:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****     /* Check if message is still pending */
1897:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****     if ((hcan->Instance->RF0R & CAN_RF0R_FMP0) != 0U)
1898:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****     {
1899:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****       /* Receive FIFO 0 message pending Callback */
1900:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** #if USE_HAL_CAN_REGISTER_CALLBACKS == 1
1901:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****       /* Call registered callback*/
1902:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****       hcan->RxFifo0MsgPendingCallback(hcan);
1903:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** #else
1904:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****       /* Call weak (surcharged) callback */
1905:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****       HAL_CAN_RxFifo0MsgPendingCallback(hcan);
1906:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** #endif /* USE_HAL_CAN_REGISTER_CALLBACKS */
1907:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****     }
1908:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   }
1909:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** 
ARM GAS  C:\Users\XAVIER~1\AppData\Local\Temp\cc1dYJ0Y.s 			page 94


1910:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   /* Receive FIFO 1 overrun interrupt management *****************************/
1911:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   if ((interrupts & CAN_IT_RX_FIFO1_OVERRUN) != 0U)
1912:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   {
1913:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****     if ((rf1rflags & CAN_RF1R_FOVR1) != 0U)
1914:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****     {
1915:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****       /* Set CAN error code to Rx Fifo 1 overrun error */
1916:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****       errorcode |= HAL_CAN_ERROR_RX_FOV1;
1917:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** 
1918:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****       /* Clear FIFO1 Overrun Flag */
1919:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****       __HAL_CAN_CLEAR_FLAG(hcan, CAN_FLAG_FOV1);
1920:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****     }
1921:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   }
1922:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** 
1923:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   /* Receive FIFO 1 full interrupt management ********************************/
1924:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   if ((interrupts & CAN_IT_RX_FIFO1_FULL) != 0U)
1925:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   {
1926:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****     if ((rf1rflags & CAN_RF1R_FULL1) != 0U)
1927:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****     {
1928:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****       /* Clear FIFO 1 full Flag */
1929:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****       __HAL_CAN_CLEAR_FLAG(hcan, CAN_FLAG_FF1);
1930:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** 
1931:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****       /* Receive FIFO 1 full Callback */
1932:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** #if USE_HAL_CAN_REGISTER_CALLBACKS == 1
1933:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****       /* Call registered callback*/
1934:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****       hcan->RxFifo1FullCallback(hcan);
1935:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** #else
1936:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****       /* Call weak (surcharged) callback */
1937:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****       HAL_CAN_RxFifo1FullCallback(hcan);
1938:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** #endif /* USE_HAL_CAN_REGISTER_CALLBACKS */
1939:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****     }
1940:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   }
1941:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** 
1942:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   /* Receive FIFO 1 message pending interrupt management *********************/
1943:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   if ((interrupts & CAN_IT_RX_FIFO1_MSG_PENDING) != 0U)
1944:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   {
1945:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****     /* Check if message is still pending */
1946:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****     if ((hcan->Instance->RF1R & CAN_RF1R_FMP1) != 0U)
1947:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****     {
1948:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****       /* Receive FIFO 1 message pending Callback */
1949:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** #if USE_HAL_CAN_REGISTER_CALLBACKS == 1
1950:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****       /* Call registered callback*/
1951:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****       hcan->RxFifo1MsgPendingCallback(hcan);
1952:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** #else
1953:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****       /* Call weak (surcharged) callback */
1954:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****       HAL_CAN_RxFifo1MsgPendingCallback(hcan);
1955:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** #endif /* USE_HAL_CAN_REGISTER_CALLBACKS */
1956:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****     }
1957:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   }
1958:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** 
1959:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   /* Sleep interrupt management *********************************************/
1960:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   if ((interrupts & CAN_IT_SLEEP_ACK) != 0U)
1961:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   {
1962:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****     if ((msrflags & CAN_MSR_SLAKI) != 0U)
1963:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****     {
1964:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****       /* Clear Sleep interrupt Flag */
1965:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****       __HAL_CAN_CLEAR_FLAG(hcan, CAN_FLAG_SLAKI);
1966:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** 
ARM GAS  C:\Users\XAVIER~1\AppData\Local\Temp\cc1dYJ0Y.s 			page 95


1967:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****       /* Sleep Callback */
1968:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** #if USE_HAL_CAN_REGISTER_CALLBACKS == 1
1969:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****       /* Call registered callback*/
1970:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****       hcan->SleepCallback(hcan);
1971:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** #else
1972:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****       /* Call weak (surcharged) callback */
1973:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****       HAL_CAN_SleepCallback(hcan);
1974:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** #endif /* USE_HAL_CAN_REGISTER_CALLBACKS */
1975:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****     }
1976:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   }
1977:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** 
1978:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   /* WakeUp interrupt management *********************************************/
1979:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   if ((interrupts & CAN_IT_WAKEUP) != 0U)
1980:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   {
1981:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****     if ((msrflags & CAN_MSR_WKUI) != 0U)
1982:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****     {
1983:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****       /* Clear WakeUp Flag */
1984:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****       __HAL_CAN_CLEAR_FLAG(hcan, CAN_FLAG_WKU);
1985:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** 
1986:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****       /* WakeUp Callback */
1987:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** #if USE_HAL_CAN_REGISTER_CALLBACKS == 1
1988:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****       /* Call registered callback*/
1989:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****       hcan->WakeUpFromRxMsgCallback(hcan);
1990:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** #else
1991:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****       /* Call weak (surcharged) callback */
1992:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****       HAL_CAN_WakeUpFromRxMsgCallback(hcan);
1993:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** #endif /* USE_HAL_CAN_REGISTER_CALLBACKS */
1994:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****     }
1995:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   }
1996:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** 
1997:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   /* Error interrupts management *********************************************/
1998:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   if ((interrupts & CAN_IT_ERROR) != 0U)
1999:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   {
2000:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****     if ((msrflags & CAN_MSR_ERRI) != 0U)
2001:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****     {
2002:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****       /* Check Error Warning Flag */
2003:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****       if (((interrupts & CAN_IT_ERROR_WARNING) != 0U) &&
2004:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****           ((esrflags & CAN_ESR_EWGF) != 0U))
2005:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****       {
2006:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****         /* Set CAN error code to Error Warning */
2007:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****         errorcode |= HAL_CAN_ERROR_EWG;
2008:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** 
2009:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****         /* No need for clear of Error Warning Flag as read-only */
2010:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****       }
2011:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** 
2012:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****       /* Check Error Passive Flag */
2013:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****       if (((interrupts & CAN_IT_ERROR_PASSIVE) != 0U) &&
2014:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****           ((esrflags & CAN_ESR_EPVF) != 0U))
2015:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****       {
2016:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****         /* Set CAN error code to Error Passive */
2017:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****         errorcode |= HAL_CAN_ERROR_EPV;
2018:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** 
2019:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****         /* No need for clear of Error Passive Flag as read-only */
2020:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****       }
2021:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** 
2022:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****       /* Check Bus-off Flag */
2023:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****       if (((interrupts & CAN_IT_BUSOFF) != 0U) &&
ARM GAS  C:\Users\XAVIER~1\AppData\Local\Temp\cc1dYJ0Y.s 			page 96


2024:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****           ((esrflags & CAN_ESR_BOFF) != 0U))
2025:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****       {
2026:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****         /* Set CAN error code to Bus-Off */
2027:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****         errorcode |= HAL_CAN_ERROR_BOF;
2028:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** 
2029:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****         /* No need for clear of Error Bus-Off as read-only */
2030:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****       }
2031:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** 
2032:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****       /* Check Last Error Code Flag */
2033:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****       if (((interrupts & CAN_IT_LAST_ERROR_CODE) != 0U) &&
2034:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****           ((esrflags & CAN_ESR_LEC) != 0U))
2035:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****       {
2036:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****         switch (esrflags & CAN_ESR_LEC)
2037:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****         {
2038:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****           case (CAN_ESR_LEC_0):
2039:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****             /* Set CAN error code to Stuff error */
2040:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****             errorcode |= HAL_CAN_ERROR_STF;
2041:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****             break;
2042:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****           case (CAN_ESR_LEC_1):
2043:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****             /* Set CAN error code to Form error */
2044:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****             errorcode |= HAL_CAN_ERROR_FOR;
2045:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****             break;
2046:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****           case (CAN_ESR_LEC_1 | CAN_ESR_LEC_0):
2047:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****             /* Set CAN error code to Acknowledgement error */
2048:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****             errorcode |= HAL_CAN_ERROR_ACK;
2049:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****             break;
2050:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****           case (CAN_ESR_LEC_2):
2051:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****             /* Set CAN error code to Bit recessive error */
2052:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****             errorcode |= HAL_CAN_ERROR_BR;
2053:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****             break;
2054:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****           case (CAN_ESR_LEC_2 | CAN_ESR_LEC_0):
2055:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****             /* Set CAN error code to Bit Dominant error */
2056:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****             errorcode |= HAL_CAN_ERROR_BD;
2057:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****             break;
2058:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****           case (CAN_ESR_LEC_2 | CAN_ESR_LEC_1):
2059:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****             /* Set CAN error code to CRC error */
2060:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****             errorcode |= HAL_CAN_ERROR_CRC;
2061:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****             break;
2062:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****           default:
2063:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****             break;
2064:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****         }
2065:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** 
2066:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****         /* Clear Last error code Flag */
2067:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****         CLEAR_BIT(hcan->Instance->ESR, CAN_ESR_LEC);
2068:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****       }
2069:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****     }
2070:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** 
2071:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****     /* Clear ERRI Flag */
2072:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****     __HAL_CAN_CLEAR_FLAG(hcan, CAN_FLAG_ERRI);
2073:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   }
2074:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** 
2075:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   /* Call the Error call Back in case of Errors */
2076:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   if (errorcode != HAL_CAN_ERROR_NONE)
2077:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   {
2078:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****     /* Update error code in handle */
2079:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****     hcan->ErrorCode |= errorcode;
2080:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** 
ARM GAS  C:\Users\XAVIER~1\AppData\Local\Temp\cc1dYJ0Y.s 			page 97


2081:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****     /* Call Error callback function */
2082:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** #if USE_HAL_CAN_REGISTER_CALLBACKS == 1
2083:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****     /* Call registered callback*/
2084:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****     hcan->ErrorCallback(hcan);
2085:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** #else
2086:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****     /* Call weak (surcharged) callback */
2087:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****     HAL_CAN_ErrorCallback(hcan);
2088:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** #endif /* USE_HAL_CAN_REGISTER_CALLBACKS */
2089:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   }
2090:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** }
2091:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** 
2092:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** /**
2093:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   * @}
2094:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   */
2095:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** 
2096:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** /** @defgroup CAN_Exported_Functions_Group5 Callback functions
2097:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****  *  @brief   CAN Callback functions
2098:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****  *
2099:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** @verbatim
2100:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   ==============================================================================
2101:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****                           ##### Callback functions #####
2102:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   ==============================================================================
2103:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****     [..]
2104:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****     This subsection provides the following callback functions:
2105:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****       (+) HAL_CAN_TxMailbox0CompleteCallback
2106:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****       (+) HAL_CAN_TxMailbox1CompleteCallback
2107:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****       (+) HAL_CAN_TxMailbox2CompleteCallback
2108:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****       (+) HAL_CAN_TxMailbox0AbortCallback
2109:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****       (+) HAL_CAN_TxMailbox1AbortCallback
2110:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****       (+) HAL_CAN_TxMailbox2AbortCallback
2111:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****       (+) HAL_CAN_RxFifo0MsgPendingCallback
2112:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****       (+) HAL_CAN_RxFifo0FullCallback
2113:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****       (+) HAL_CAN_RxFifo1MsgPendingCallback
2114:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****       (+) HAL_CAN_RxFifo1FullCallback
2115:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****       (+) HAL_CAN_SleepCallback
2116:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****       (+) HAL_CAN_WakeUpFromRxMsgCallback
2117:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****       (+) HAL_CAN_ErrorCallback
2118:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** 
2119:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** @endverbatim
2120:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   * @{
2121:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   */
2122:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** 
2123:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** /**
2124:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   * @brief  Transmission Mailbox 0 complete callback.
2125:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   * @param  hcan pointer to a CAN_HandleTypeDef structure that contains
2126:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   *         the configuration information for the specified CAN.
2127:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   * @retval None
2128:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   */
2129:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** __weak void HAL_CAN_TxMailbox0CompleteCallback(CAN_HandleTypeDef *hcan)
2130:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** {
 2099              		.loc 1 2130 1 is_stmt 1 view -0
 2100              		.cfi_startproc
 2101              		@ args = 0, pretend = 0, frame = 0
 2102              		@ frame_needed = 0, uses_anonymous_args = 0
 2103              		@ link register save eliminated.
2131:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   /* Prevent unused argument(s) compilation warning */
2132:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   UNUSED(hcan);
ARM GAS  C:\Users\XAVIER~1\AppData\Local\Temp\cc1dYJ0Y.s 			page 98


 2104              		.loc 1 2132 3 view .LVU690
2133:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** 
2134:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
2135:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****             the HAL_CAN_TxMailbox0CompleteCallback could be implemented in the
2136:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****             user file
2137:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****    */
2138:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** }
 2105              		.loc 1 2138 1 is_stmt 0 view .LVU691
 2106 0000 7047     		bx	lr
 2107              		.cfi_endproc
 2108              	.LFE161:
 2110              		.section	.text.HAL_CAN_TxMailbox1CompleteCallback,"ax",%progbits
 2111              		.align	1
 2112              		.weak	HAL_CAN_TxMailbox1CompleteCallback
 2113              		.syntax unified
 2114              		.thumb
 2115              		.thumb_func
 2116              		.fpu fpv5-sp-d16
 2118              	HAL_CAN_TxMailbox1CompleteCallback:
 2119              	.LVL162:
 2120              	.LFB162:
2139:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** 
2140:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** /**
2141:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   * @brief  Transmission Mailbox 1 complete callback.
2142:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   * @param  hcan pointer to a CAN_HandleTypeDef structure that contains
2143:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   *         the configuration information for the specified CAN.
2144:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   * @retval None
2145:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   */
2146:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** __weak void HAL_CAN_TxMailbox1CompleteCallback(CAN_HandleTypeDef *hcan)
2147:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** {
 2121              		.loc 1 2147 1 is_stmt 1 view -0
 2122              		.cfi_startproc
 2123              		@ args = 0, pretend = 0, frame = 0
 2124              		@ frame_needed = 0, uses_anonymous_args = 0
 2125              		@ link register save eliminated.
2148:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   /* Prevent unused argument(s) compilation warning */
2149:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   UNUSED(hcan);
 2126              		.loc 1 2149 3 view .LVU693
2150:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** 
2151:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
2152:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****             the HAL_CAN_TxMailbox1CompleteCallback could be implemented in the
2153:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****             user file
2154:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****    */
2155:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** }
 2127              		.loc 1 2155 1 is_stmt 0 view .LVU694
 2128 0000 7047     		bx	lr
 2129              		.cfi_endproc
 2130              	.LFE162:
 2132              		.section	.text.HAL_CAN_TxMailbox2CompleteCallback,"ax",%progbits
 2133              		.align	1
 2134              		.weak	HAL_CAN_TxMailbox2CompleteCallback
 2135              		.syntax unified
 2136              		.thumb
 2137              		.thumb_func
 2138              		.fpu fpv5-sp-d16
 2140              	HAL_CAN_TxMailbox2CompleteCallback:
 2141              	.LVL163:
ARM GAS  C:\Users\XAVIER~1\AppData\Local\Temp\cc1dYJ0Y.s 			page 99


 2142              	.LFB163:
2156:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** 
2157:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** /**
2158:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   * @brief  Transmission Mailbox 2 complete callback.
2159:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   * @param  hcan pointer to a CAN_HandleTypeDef structure that contains
2160:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   *         the configuration information for the specified CAN.
2161:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   * @retval None
2162:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   */
2163:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** __weak void HAL_CAN_TxMailbox2CompleteCallback(CAN_HandleTypeDef *hcan)
2164:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** {
 2143              		.loc 1 2164 1 is_stmt 1 view -0
 2144              		.cfi_startproc
 2145              		@ args = 0, pretend = 0, frame = 0
 2146              		@ frame_needed = 0, uses_anonymous_args = 0
 2147              		@ link register save eliminated.
2165:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   /* Prevent unused argument(s) compilation warning */
2166:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   UNUSED(hcan);
 2148              		.loc 1 2166 3 view .LVU696
2167:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** 
2168:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
2169:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****             the HAL_CAN_TxMailbox2CompleteCallback could be implemented in the
2170:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****             user file
2171:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****    */
2172:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** }
 2149              		.loc 1 2172 1 is_stmt 0 view .LVU697
 2150 0000 7047     		bx	lr
 2151              		.cfi_endproc
 2152              	.LFE163:
 2154              		.section	.text.HAL_CAN_TxMailbox0AbortCallback,"ax",%progbits
 2155              		.align	1
 2156              		.weak	HAL_CAN_TxMailbox0AbortCallback
 2157              		.syntax unified
 2158              		.thumb
 2159              		.thumb_func
 2160              		.fpu fpv5-sp-d16
 2162              	HAL_CAN_TxMailbox0AbortCallback:
 2163              	.LVL164:
 2164              	.LFB164:
2173:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** 
2174:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** /**
2175:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   * @brief  Transmission Mailbox 0 Cancellation callback.
2176:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   * @param  hcan pointer to an CAN_HandleTypeDef structure that contains
2177:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   *         the configuration information for the specified CAN.
2178:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   * @retval None
2179:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   */
2180:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** __weak void HAL_CAN_TxMailbox0AbortCallback(CAN_HandleTypeDef *hcan)
2181:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** {
 2165              		.loc 1 2181 1 is_stmt 1 view -0
 2166              		.cfi_startproc
 2167              		@ args = 0, pretend = 0, frame = 0
 2168              		@ frame_needed = 0, uses_anonymous_args = 0
 2169              		@ link register save eliminated.
2182:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   /* Prevent unused argument(s) compilation warning */
2183:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   UNUSED(hcan);
 2170              		.loc 1 2183 3 view .LVU699
2184:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** 
2185:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
ARM GAS  C:\Users\XAVIER~1\AppData\Local\Temp\cc1dYJ0Y.s 			page 100


2186:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****             the HAL_CAN_TxMailbox0AbortCallback could be implemented in the
2187:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****             user file
2188:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****    */
2189:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** }
 2171              		.loc 1 2189 1 is_stmt 0 view .LVU700
 2172 0000 7047     		bx	lr
 2173              		.cfi_endproc
 2174              	.LFE164:
 2176              		.section	.text.HAL_CAN_TxMailbox1AbortCallback,"ax",%progbits
 2177              		.align	1
 2178              		.weak	HAL_CAN_TxMailbox1AbortCallback
 2179              		.syntax unified
 2180              		.thumb
 2181              		.thumb_func
 2182              		.fpu fpv5-sp-d16
 2184              	HAL_CAN_TxMailbox1AbortCallback:
 2185              	.LVL165:
 2186              	.LFB165:
2190:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** 
2191:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** /**
2192:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   * @brief  Transmission Mailbox 1 Cancellation callback.
2193:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   * @param  hcan pointer to an CAN_HandleTypeDef structure that contains
2194:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   *         the configuration information for the specified CAN.
2195:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   * @retval None
2196:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   */
2197:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** __weak void HAL_CAN_TxMailbox1AbortCallback(CAN_HandleTypeDef *hcan)
2198:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** {
 2187              		.loc 1 2198 1 is_stmt 1 view -0
 2188              		.cfi_startproc
 2189              		@ args = 0, pretend = 0, frame = 0
 2190              		@ frame_needed = 0, uses_anonymous_args = 0
 2191              		@ link register save eliminated.
2199:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   /* Prevent unused argument(s) compilation warning */
2200:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   UNUSED(hcan);
 2192              		.loc 1 2200 3 view .LVU702
2201:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** 
2202:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
2203:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****             the HAL_CAN_TxMailbox1AbortCallback could be implemented in the
2204:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****             user file
2205:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****    */
2206:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** }
 2193              		.loc 1 2206 1 is_stmt 0 view .LVU703
 2194 0000 7047     		bx	lr
 2195              		.cfi_endproc
 2196              	.LFE165:
 2198              		.section	.text.HAL_CAN_TxMailbox2AbortCallback,"ax",%progbits
 2199              		.align	1
 2200              		.weak	HAL_CAN_TxMailbox2AbortCallback
 2201              		.syntax unified
 2202              		.thumb
 2203              		.thumb_func
 2204              		.fpu fpv5-sp-d16
 2206              	HAL_CAN_TxMailbox2AbortCallback:
 2207              	.LVL166:
 2208              	.LFB166:
2207:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** 
2208:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** /**
ARM GAS  C:\Users\XAVIER~1\AppData\Local\Temp\cc1dYJ0Y.s 			page 101


2209:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   * @brief  Transmission Mailbox 2 Cancellation callback.
2210:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   * @param  hcan pointer to an CAN_HandleTypeDef structure that contains
2211:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   *         the configuration information for the specified CAN.
2212:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   * @retval None
2213:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   */
2214:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** __weak void HAL_CAN_TxMailbox2AbortCallback(CAN_HandleTypeDef *hcan)
2215:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** {
 2209              		.loc 1 2215 1 is_stmt 1 view -0
 2210              		.cfi_startproc
 2211              		@ args = 0, pretend = 0, frame = 0
 2212              		@ frame_needed = 0, uses_anonymous_args = 0
 2213              		@ link register save eliminated.
2216:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   /* Prevent unused argument(s) compilation warning */
2217:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   UNUSED(hcan);
 2214              		.loc 1 2217 3 view .LVU705
2218:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** 
2219:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
2220:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****             the HAL_CAN_TxMailbox2AbortCallback could be implemented in the
2221:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****             user file
2222:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****    */
2223:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** }
 2215              		.loc 1 2223 1 is_stmt 0 view .LVU706
 2216 0000 7047     		bx	lr
 2217              		.cfi_endproc
 2218              	.LFE166:
 2220              		.section	.text.HAL_CAN_RxFifo0MsgPendingCallback,"ax",%progbits
 2221              		.align	1
 2222              		.weak	HAL_CAN_RxFifo0MsgPendingCallback
 2223              		.syntax unified
 2224              		.thumb
 2225              		.thumb_func
 2226              		.fpu fpv5-sp-d16
 2228              	HAL_CAN_RxFifo0MsgPendingCallback:
 2229              	.LVL167:
 2230              	.LFB167:
2224:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** 
2225:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** /**
2226:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   * @brief  Rx FIFO 0 message pending callback.
2227:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   * @param  hcan pointer to a CAN_HandleTypeDef structure that contains
2228:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   *         the configuration information for the specified CAN.
2229:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   * @retval None
2230:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   */
2231:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** __weak void HAL_CAN_RxFifo0MsgPendingCallback(CAN_HandleTypeDef *hcan)
2232:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** {
 2231              		.loc 1 2232 1 is_stmt 1 view -0
 2232              		.cfi_startproc
 2233              		@ args = 0, pretend = 0, frame = 0
 2234              		@ frame_needed = 0, uses_anonymous_args = 0
 2235              		@ link register save eliminated.
2233:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   /* Prevent unused argument(s) compilation warning */
2234:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   UNUSED(hcan);
 2236              		.loc 1 2234 3 view .LVU708
2235:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** 
2236:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
2237:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****             the HAL_CAN_RxFifo0MsgPendingCallback could be implemented in the
2238:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****             user file
2239:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****    */
ARM GAS  C:\Users\XAVIER~1\AppData\Local\Temp\cc1dYJ0Y.s 			page 102


2240:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** }
 2237              		.loc 1 2240 1 is_stmt 0 view .LVU709
 2238 0000 7047     		bx	lr
 2239              		.cfi_endproc
 2240              	.LFE167:
 2242              		.section	.text.HAL_CAN_RxFifo0FullCallback,"ax",%progbits
 2243              		.align	1
 2244              		.weak	HAL_CAN_RxFifo0FullCallback
 2245              		.syntax unified
 2246              		.thumb
 2247              		.thumb_func
 2248              		.fpu fpv5-sp-d16
 2250              	HAL_CAN_RxFifo0FullCallback:
 2251              	.LVL168:
 2252              	.LFB168:
2241:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** 
2242:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** /**
2243:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   * @brief  Rx FIFO 0 full callback.
2244:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   * @param  hcan pointer to a CAN_HandleTypeDef structure that contains
2245:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   *         the configuration information for the specified CAN.
2246:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   * @retval None
2247:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   */
2248:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** __weak void HAL_CAN_RxFifo0FullCallback(CAN_HandleTypeDef *hcan)
2249:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** {
 2253              		.loc 1 2249 1 is_stmt 1 view -0
 2254              		.cfi_startproc
 2255              		@ args = 0, pretend = 0, frame = 0
 2256              		@ frame_needed = 0, uses_anonymous_args = 0
 2257              		@ link register save eliminated.
2250:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   /* Prevent unused argument(s) compilation warning */
2251:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   UNUSED(hcan);
 2258              		.loc 1 2251 3 view .LVU711
2252:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** 
2253:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
2254:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****             the HAL_CAN_RxFifo0FullCallback could be implemented in the user
2255:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****             file
2256:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****    */
2257:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** }
 2259              		.loc 1 2257 1 is_stmt 0 view .LVU712
 2260 0000 7047     		bx	lr
 2261              		.cfi_endproc
 2262              	.LFE168:
 2264              		.section	.text.HAL_CAN_RxFifo1MsgPendingCallback,"ax",%progbits
 2265              		.align	1
 2266              		.weak	HAL_CAN_RxFifo1MsgPendingCallback
 2267              		.syntax unified
 2268              		.thumb
 2269              		.thumb_func
 2270              		.fpu fpv5-sp-d16
 2272              	HAL_CAN_RxFifo1MsgPendingCallback:
 2273              	.LVL169:
 2274              	.LFB169:
2258:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** 
2259:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** /**
2260:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   * @brief  Rx FIFO 1 message pending callback.
2261:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   * @param  hcan pointer to a CAN_HandleTypeDef structure that contains
2262:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   *         the configuration information for the specified CAN.
ARM GAS  C:\Users\XAVIER~1\AppData\Local\Temp\cc1dYJ0Y.s 			page 103


2263:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   * @retval None
2264:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   */
2265:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** __weak void HAL_CAN_RxFifo1MsgPendingCallback(CAN_HandleTypeDef *hcan)
2266:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** {
 2275              		.loc 1 2266 1 is_stmt 1 view -0
 2276              		.cfi_startproc
 2277              		@ args = 0, pretend = 0, frame = 0
 2278              		@ frame_needed = 0, uses_anonymous_args = 0
 2279              		@ link register save eliminated.
2267:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   /* Prevent unused argument(s) compilation warning */
2268:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   UNUSED(hcan);
 2280              		.loc 1 2268 3 view .LVU714
2269:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** 
2270:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
2271:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****             the HAL_CAN_RxFifo1MsgPendingCallback could be implemented in the
2272:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****             user file
2273:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****    */
2274:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** }
 2281              		.loc 1 2274 1 is_stmt 0 view .LVU715
 2282 0000 7047     		bx	lr
 2283              		.cfi_endproc
 2284              	.LFE169:
 2286              		.section	.text.HAL_CAN_RxFifo1FullCallback,"ax",%progbits
 2287              		.align	1
 2288              		.weak	HAL_CAN_RxFifo1FullCallback
 2289              		.syntax unified
 2290              		.thumb
 2291              		.thumb_func
 2292              		.fpu fpv5-sp-d16
 2294              	HAL_CAN_RxFifo1FullCallback:
 2295              	.LVL170:
 2296              	.LFB170:
2275:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** 
2276:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** /**
2277:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   * @brief  Rx FIFO 1 full callback.
2278:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   * @param  hcan pointer to a CAN_HandleTypeDef structure that contains
2279:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   *         the configuration information for the specified CAN.
2280:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   * @retval None
2281:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   */
2282:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** __weak void HAL_CAN_RxFifo1FullCallback(CAN_HandleTypeDef *hcan)
2283:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** {
 2297              		.loc 1 2283 1 is_stmt 1 view -0
 2298              		.cfi_startproc
 2299              		@ args = 0, pretend = 0, frame = 0
 2300              		@ frame_needed = 0, uses_anonymous_args = 0
 2301              		@ link register save eliminated.
2284:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   /* Prevent unused argument(s) compilation warning */
2285:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   UNUSED(hcan);
 2302              		.loc 1 2285 3 view .LVU717
2286:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** 
2287:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
2288:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****             the HAL_CAN_RxFifo1FullCallback could be implemented in the user
2289:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****             file
2290:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****    */
2291:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** }
 2303              		.loc 1 2291 1 is_stmt 0 view .LVU718
 2304 0000 7047     		bx	lr
ARM GAS  C:\Users\XAVIER~1\AppData\Local\Temp\cc1dYJ0Y.s 			page 104


 2305              		.cfi_endproc
 2306              	.LFE170:
 2308              		.section	.text.HAL_CAN_SleepCallback,"ax",%progbits
 2309              		.align	1
 2310              		.weak	HAL_CAN_SleepCallback
 2311              		.syntax unified
 2312              		.thumb
 2313              		.thumb_func
 2314              		.fpu fpv5-sp-d16
 2316              	HAL_CAN_SleepCallback:
 2317              	.LVL171:
 2318              	.LFB171:
2292:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** 
2293:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** /**
2294:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   * @brief  Sleep callback.
2295:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   * @param  hcan pointer to a CAN_HandleTypeDef structure that contains
2296:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   *         the configuration information for the specified CAN.
2297:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   * @retval None
2298:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   */
2299:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** __weak void HAL_CAN_SleepCallback(CAN_HandleTypeDef *hcan)
2300:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** {
 2319              		.loc 1 2300 1 is_stmt 1 view -0
 2320              		.cfi_startproc
 2321              		@ args = 0, pretend = 0, frame = 0
 2322              		@ frame_needed = 0, uses_anonymous_args = 0
 2323              		@ link register save eliminated.
2301:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   /* Prevent unused argument(s) compilation warning */
2302:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   UNUSED(hcan);
 2324              		.loc 1 2302 3 view .LVU720
2303:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** 
2304:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
2305:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****             the HAL_CAN_SleepCallback could be implemented in the user file
2306:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****    */
2307:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** }
 2325              		.loc 1 2307 1 is_stmt 0 view .LVU721
 2326 0000 7047     		bx	lr
 2327              		.cfi_endproc
 2328              	.LFE171:
 2330              		.section	.text.HAL_CAN_WakeUpFromRxMsgCallback,"ax",%progbits
 2331              		.align	1
 2332              		.weak	HAL_CAN_WakeUpFromRxMsgCallback
 2333              		.syntax unified
 2334              		.thumb
 2335              		.thumb_func
 2336              		.fpu fpv5-sp-d16
 2338              	HAL_CAN_WakeUpFromRxMsgCallback:
 2339              	.LVL172:
 2340              	.LFB172:
2308:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** 
2309:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** /**
2310:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   * @brief  WakeUp from Rx message callback.
2311:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   * @param  hcan pointer to a CAN_HandleTypeDef structure that contains
2312:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   *         the configuration information for the specified CAN.
2313:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   * @retval None
2314:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   */
2315:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** __weak void HAL_CAN_WakeUpFromRxMsgCallback(CAN_HandleTypeDef *hcan)
2316:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** {
ARM GAS  C:\Users\XAVIER~1\AppData\Local\Temp\cc1dYJ0Y.s 			page 105


 2341              		.loc 1 2316 1 is_stmt 1 view -0
 2342              		.cfi_startproc
 2343              		@ args = 0, pretend = 0, frame = 0
 2344              		@ frame_needed = 0, uses_anonymous_args = 0
 2345              		@ link register save eliminated.
2317:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   /* Prevent unused argument(s) compilation warning */
2318:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   UNUSED(hcan);
 2346              		.loc 1 2318 3 view .LVU723
2319:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** 
2320:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
2321:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****             the HAL_CAN_WakeUpFromRxMsgCallback could be implemented in the
2322:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****             user file
2323:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****    */
2324:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** }
 2347              		.loc 1 2324 1 is_stmt 0 view .LVU724
 2348 0000 7047     		bx	lr
 2349              		.cfi_endproc
 2350              	.LFE172:
 2352              		.section	.text.HAL_CAN_ErrorCallback,"ax",%progbits
 2353              		.align	1
 2354              		.weak	HAL_CAN_ErrorCallback
 2355              		.syntax unified
 2356              		.thumb
 2357              		.thumb_func
 2358              		.fpu fpv5-sp-d16
 2360              	HAL_CAN_ErrorCallback:
 2361              	.LVL173:
 2362              	.LFB173:
2325:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** 
2326:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** /**
2327:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   * @brief  Error CAN callback.
2328:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   * @param  hcan pointer to a CAN_HandleTypeDef structure that contains
2329:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   *         the configuration information for the specified CAN.
2330:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   * @retval None
2331:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   */
2332:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** __weak void HAL_CAN_ErrorCallback(CAN_HandleTypeDef *hcan)
2333:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** {
 2363              		.loc 1 2333 1 is_stmt 1 view -0
 2364              		.cfi_startproc
 2365              		@ args = 0, pretend = 0, frame = 0
 2366              		@ frame_needed = 0, uses_anonymous_args = 0
 2367              		@ link register save eliminated.
2334:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   /* Prevent unused argument(s) compilation warning */
2335:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   UNUSED(hcan);
 2368              		.loc 1 2335 3 view .LVU726
2336:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** 
2337:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
2338:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****             the HAL_CAN_ErrorCallback could be implemented in the user file
2339:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****    */
2340:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** }
 2369              		.loc 1 2340 1 is_stmt 0 view .LVU727
 2370 0000 7047     		bx	lr
 2371              		.cfi_endproc
 2372              	.LFE173:
 2374              		.section	.text.HAL_CAN_IRQHandler,"ax",%progbits
 2375              		.align	1
 2376              		.global	HAL_CAN_IRQHandler
ARM GAS  C:\Users\XAVIER~1\AppData\Local\Temp\cc1dYJ0Y.s 			page 106


 2377              		.syntax unified
 2378              		.thumb
 2379              		.thumb_func
 2380              		.fpu fpv5-sp-d16
 2382              	HAL_CAN_IRQHandler:
 2383              	.LVL174:
 2384              	.LFB160:
1719:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   uint32_t errorcode = HAL_CAN_ERROR_NONE;
 2385              		.loc 1 1719 1 is_stmt 1 view -0
 2386              		.cfi_startproc
 2387              		@ args = 0, pretend = 0, frame = 0
 2388              		@ frame_needed = 0, uses_anonymous_args = 0
1719:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   uint32_t errorcode = HAL_CAN_ERROR_NONE;
 2389              		.loc 1 1719 1 is_stmt 0 view .LVU729
 2390 0000 2DE9F84F 		push	{r3, r4, r5, r6, r7, r8, r9, r10, fp, lr}
 2391              	.LCFI14:
 2392              		.cfi_def_cfa_offset 40
 2393              		.cfi_offset 3, -40
 2394              		.cfi_offset 4, -36
 2395              		.cfi_offset 5, -32
 2396              		.cfi_offset 6, -28
 2397              		.cfi_offset 7, -24
 2398              		.cfi_offset 8, -20
 2399              		.cfi_offset 9, -16
 2400              		.cfi_offset 10, -12
 2401              		.cfi_offset 11, -8
 2402              		.cfi_offset 14, -4
 2403 0004 0546     		mov	r5, r0
1720:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   uint32_t interrupts = READ_REG(hcan->Instance->IER);
 2404              		.loc 1 1720 3 is_stmt 1 view .LVU730
 2405              	.LVL175:
1721:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   uint32_t msrflags = READ_REG(hcan->Instance->MSR);
 2406              		.loc 1 1721 3 view .LVU731
1721:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   uint32_t msrflags = READ_REG(hcan->Instance->MSR);
 2407              		.loc 1 1721 25 is_stmt 0 view .LVU732
 2408 0006 0368     		ldr	r3, [r0]
1721:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   uint32_t msrflags = READ_REG(hcan->Instance->MSR);
 2409              		.loc 1 1721 12 view .LVU733
 2410 0008 5C69     		ldr	r4, [r3, #20]
 2411              	.LVL176:
1722:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   uint32_t tsrflags = READ_REG(hcan->Instance->TSR);
 2412              		.loc 1 1722 3 is_stmt 1 view .LVU734
1722:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   uint32_t tsrflags = READ_REG(hcan->Instance->TSR);
 2413              		.loc 1 1722 12 is_stmt 0 view .LVU735
 2414 000a D3F80480 		ldr	r8, [r3, #4]
 2415              	.LVL177:
1723:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   uint32_t rf0rflags = READ_REG(hcan->Instance->RF0R);
 2416              		.loc 1 1723 3 is_stmt 1 view .LVU736
1723:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   uint32_t rf0rflags = READ_REG(hcan->Instance->RF0R);
 2417              		.loc 1 1723 12 is_stmt 0 view .LVU737
 2418 000e 9F68     		ldr	r7, [r3, #8]
 2419              	.LVL178:
1724:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   uint32_t rf1rflags = READ_REG(hcan->Instance->RF1R);
 2420              		.loc 1 1724 3 is_stmt 1 view .LVU738
1724:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   uint32_t rf1rflags = READ_REG(hcan->Instance->RF1R);
 2421              		.loc 1 1724 12 is_stmt 0 view .LVU739
 2422 0010 D3F80CB0 		ldr	fp, [r3, #12]
ARM GAS  C:\Users\XAVIER~1\AppData\Local\Temp\cc1dYJ0Y.s 			page 107


 2423              	.LVL179:
1725:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   uint32_t esrflags = READ_REG(hcan->Instance->ESR);
 2424              		.loc 1 1725 3 is_stmt 1 view .LVU740
1725:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   uint32_t esrflags = READ_REG(hcan->Instance->ESR);
 2425              		.loc 1 1725 12 is_stmt 0 view .LVU741
 2426 0014 D3F810A0 		ldr	r10, [r3, #16]
 2427              	.LVL180:
1726:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** 
 2428              		.loc 1 1726 3 is_stmt 1 view .LVU742
1726:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** 
 2429              		.loc 1 1726 12 is_stmt 0 view .LVU743
 2430 0018 D3F81890 		ldr	r9, [r3, #24]
 2431              	.LVL181:
1729:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   {
 2432              		.loc 1 1729 3 is_stmt 1 view .LVU744
1729:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   {
 2433              		.loc 1 1729 6 is_stmt 0 view .LVU745
 2434 001c 14F00106 		ands	r6, r4, #1
 2435 0020 3BD0     		beq	.L169
1732:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****     {
 2436              		.loc 1 1732 5 is_stmt 1 view .LVU746
1732:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****     {
 2437              		.loc 1 1732 8 is_stmt 0 view .LVU747
 2438 0022 17F00106 		ands	r6, r7, #1
 2439 0026 16D0     		beq	.L170
1735:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** 
 2440              		.loc 1 1735 7 is_stmt 1 view .LVU748
 2441 0028 0122     		movs	r2, #1
 2442 002a 9A60     		str	r2, [r3, #8]
1737:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****       {
 2443              		.loc 1 1737 7 view .LVU749
1737:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****       {
 2444              		.loc 1 1737 10 is_stmt 0 view .LVU750
 2445 002c 17F0020F 		tst	r7, #2
 2446 0030 08D1     		bne	.L204
1750:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****         {
 2447              		.loc 1 1750 9 is_stmt 1 view .LVU751
1750:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****         {
 2448              		.loc 1 1750 12 is_stmt 0 view .LVU752
 2449 0032 17F0040F 		tst	r7, #4
 2450 0036 0CD1     		bne	.L201
1755:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****         {
 2451              		.loc 1 1755 14 is_stmt 1 view .LVU753
1755:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****         {
 2452              		.loc 1 1755 17 is_stmt 0 view .LVU754
 2453 0038 17F00806 		ands	r6, r7, #8
 2454 003c 06D0     		beq	.L205
1758:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****         }
 2455              		.loc 1 1758 21 view .LVU755
 2456 003e 4FF48056 		mov	r6, #4096
 2457 0042 08E0     		b	.L170
 2458              	.L204:
1745:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** #endif /* USE_HAL_CAN_REGISTER_CALLBACKS */
 2459              		.loc 1 1745 9 is_stmt 1 view .LVU756
 2460 0044 FFF7FEFF 		bl	HAL_CAN_TxMailbox0CompleteCallback
 2461              	.LVL182:
1720:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   uint32_t interrupts = READ_REG(hcan->Instance->IER);
ARM GAS  C:\Users\XAVIER~1\AppData\Local\Temp\cc1dYJ0Y.s 			page 108


 2462              		.loc 1 1720 12 is_stmt 0 view .LVU757
 2463 0048 0026     		movs	r6, #0
 2464 004a 04E0     		b	.L170
 2465              	.LVL183:
 2466              	.L205:
1768:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** #endif /* USE_HAL_CAN_REGISTER_CALLBACKS */
 2467              		.loc 1 1768 11 is_stmt 1 view .LVU758
 2468 004c FFF7FEFF 		bl	HAL_CAN_TxMailbox0AbortCallback
 2469              	.LVL184:
1768:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** #endif /* USE_HAL_CAN_REGISTER_CALLBACKS */
 2470              		.loc 1 1768 11 is_stmt 0 view .LVU759
 2471 0050 01E0     		b	.L170
 2472              	.LVL185:
 2473              	.L201:
1753:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****         }
 2474              		.loc 1 1753 21 view .LVU760
 2475 0052 4FF40066 		mov	r6, #2048
 2476              	.LVL186:
 2477              	.L170:
1775:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****     {
 2478              		.loc 1 1775 5 is_stmt 1 view .LVU761
1775:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****     {
 2479              		.loc 1 1775 8 is_stmt 0 view .LVU762
 2480 0056 17F4807F 		tst	r7, #256
 2481 005a 0DD0     		beq	.L172
1778:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** 
 2482              		.loc 1 1778 7 is_stmt 1 view .LVU763
 2483 005c 2B68     		ldr	r3, [r5]
 2484 005e 4FF48072 		mov	r2, #256
 2485 0062 9A60     		str	r2, [r3, #8]
1780:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****       {
 2486              		.loc 1 1780 7 view .LVU764
1780:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****       {
 2487              		.loc 1 1780 10 is_stmt 0 view .LVU765
 2488 0064 17F4007F 		tst	r7, #512
 2489 0068 40F08680 		bne	.L206
1793:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****         {
 2490              		.loc 1 1793 9 is_stmt 1 view .LVU766
1793:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****         {
 2491              		.loc 1 1793 12 is_stmt 0 view .LVU767
 2492 006c 17F4806F 		tst	r7, #1024
 2493 0070 00F08680 		beq	.L174
1796:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****         }
 2494              		.loc 1 1796 11 is_stmt 1 view .LVU768
1796:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****         }
 2495              		.loc 1 1796 21 is_stmt 0 view .LVU769
 2496 0074 46F40056 		orr	r6, r6, #8192
 2497              	.LVL187:
 2498              	.L172:
1818:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****     {
 2499              		.loc 1 1818 5 is_stmt 1 view .LVU770
1818:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****     {
 2500              		.loc 1 1818 8 is_stmt 0 view .LVU771
 2501 0078 17F4803F 		tst	r7, #65536
 2502 007c 0DD0     		beq	.L169
1821:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** 
 2503              		.loc 1 1821 7 is_stmt 1 view .LVU772
ARM GAS  C:\Users\XAVIER~1\AppData\Local\Temp\cc1dYJ0Y.s 			page 109


 2504 007e 2B68     		ldr	r3, [r5]
 2505 0080 4FF48032 		mov	r2, #65536
 2506 0084 9A60     		str	r2, [r3, #8]
1823:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****       {
 2507              		.loc 1 1823 7 view .LVU773
1823:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****       {
 2508              		.loc 1 1823 10 is_stmt 0 view .LVU774
 2509 0086 17F4003F 		tst	r7, #131072
 2510 008a 40F08380 		bne	.L207
1836:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****         {
 2511              		.loc 1 1836 9 is_stmt 1 view .LVU775
1836:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****         {
 2512              		.loc 1 1836 12 is_stmt 0 view .LVU776
 2513 008e 17F4802F 		tst	r7, #262144
 2514 0092 00F08380 		beq	.L177
1839:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****         }
 2515              		.loc 1 1839 11 is_stmt 1 view .LVU777
1839:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****         }
 2516              		.loc 1 1839 21 is_stmt 0 view .LVU778
 2517 0096 46F40046 		orr	r6, r6, #32768
 2518              	.LVL188:
 2519              	.L169:
1862:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   {
 2520              		.loc 1 1862 3 is_stmt 1 view .LVU779
1862:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   {
 2521              		.loc 1 1862 6 is_stmt 0 view .LVU780
 2522 009a 14F0080F 		tst	r4, #8
 2523 009e 07D0     		beq	.L179
1864:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****     {
 2524              		.loc 1 1864 5 is_stmt 1 view .LVU781
1864:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****     {
 2525              		.loc 1 1864 8 is_stmt 0 view .LVU782
 2526 00a0 1BF0100F 		tst	fp, #16
 2527 00a4 04D0     		beq	.L179
1867:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** 
 2528              		.loc 1 1867 7 is_stmt 1 view .LVU783
1867:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** 
 2529              		.loc 1 1867 17 is_stmt 0 view .LVU784
 2530 00a6 46F40076 		orr	r6, r6, #512
 2531              	.LVL189:
1870:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****     }
 2532              		.loc 1 1870 7 is_stmt 1 view .LVU785
 2533 00aa 2B68     		ldr	r3, [r5]
 2534 00ac 1022     		movs	r2, #16
 2535 00ae DA60     		str	r2, [r3, #12]
 2536              	.L179:
1875:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   {
 2537              		.loc 1 1875 3 view .LVU786
1875:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   {
 2538              		.loc 1 1875 6 is_stmt 0 view .LVU787
 2539 00b0 14F0040F 		tst	r4, #4
 2540 00b4 02D0     		beq	.L180
1877:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****     {
 2541              		.loc 1 1877 5 is_stmt 1 view .LVU788
1877:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****     {
 2542              		.loc 1 1877 8 is_stmt 0 view .LVU789
 2543 00b6 1BF0080F 		tst	fp, #8
ARM GAS  C:\Users\XAVIER~1\AppData\Local\Temp\cc1dYJ0Y.s 			page 110


 2544 00ba 79D1     		bne	.L208
 2545              	.L180:
1894:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   {
 2546              		.loc 1 1894 3 is_stmt 1 view .LVU790
1894:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   {
 2547              		.loc 1 1894 6 is_stmt 0 view .LVU791
 2548 00bc 14F0020F 		tst	r4, #2
 2549 00c0 04D0     		beq	.L181
1897:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****     {
 2550              		.loc 1 1897 5 is_stmt 1 view .LVU792
1897:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****     {
 2551              		.loc 1 1897 14 is_stmt 0 view .LVU793
 2552 00c2 2B68     		ldr	r3, [r5]
1897:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****     {
 2553              		.loc 1 1897 24 view .LVU794
 2554 00c4 DB68     		ldr	r3, [r3, #12]
1897:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****     {
 2555              		.loc 1 1897 8 view .LVU795
 2556 00c6 13F0030F 		tst	r3, #3
 2557 00ca 78D1     		bne	.L209
 2558              	.L181:
1911:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   {
 2559              		.loc 1 1911 3 is_stmt 1 view .LVU796
1911:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   {
 2560              		.loc 1 1911 6 is_stmt 0 view .LVU797
 2561 00cc 14F0400F 		tst	r4, #64
 2562 00d0 07D0     		beq	.L182
1913:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****     {
 2563              		.loc 1 1913 5 is_stmt 1 view .LVU798
1913:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****     {
 2564              		.loc 1 1913 8 is_stmt 0 view .LVU799
 2565 00d2 1AF0100F 		tst	r10, #16
 2566 00d6 04D0     		beq	.L182
1916:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** 
 2567              		.loc 1 1916 7 is_stmt 1 view .LVU800
1916:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** 
 2568              		.loc 1 1916 17 is_stmt 0 view .LVU801
 2569 00d8 46F48066 		orr	r6, r6, #1024
 2570              	.LVL190:
1919:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****     }
 2571              		.loc 1 1919 7 is_stmt 1 view .LVU802
 2572 00dc 2B68     		ldr	r3, [r5]
 2573 00de 1022     		movs	r2, #16
 2574 00e0 1A61     		str	r2, [r3, #16]
 2575              	.L182:
1924:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   {
 2576              		.loc 1 1924 3 view .LVU803
1924:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   {
 2577              		.loc 1 1924 6 is_stmt 0 view .LVU804
 2578 00e2 14F0200F 		tst	r4, #32
 2579 00e6 02D0     		beq	.L183
1926:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****     {
 2580              		.loc 1 1926 5 is_stmt 1 view .LVU805
1926:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****     {
 2581              		.loc 1 1926 8 is_stmt 0 view .LVU806
 2582 00e8 1AF0080F 		tst	r10, #8
 2583 00ec 6BD1     		bne	.L210
ARM GAS  C:\Users\XAVIER~1\AppData\Local\Temp\cc1dYJ0Y.s 			page 111


 2584              	.L183:
1943:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   {
 2585              		.loc 1 1943 3 is_stmt 1 view .LVU807
1943:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   {
 2586              		.loc 1 1943 6 is_stmt 0 view .LVU808
 2587 00ee 14F0100F 		tst	r4, #16
 2588 00f2 04D0     		beq	.L184
1946:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****     {
 2589              		.loc 1 1946 5 is_stmt 1 view .LVU809
1946:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****     {
 2590              		.loc 1 1946 14 is_stmt 0 view .LVU810
 2591 00f4 2B68     		ldr	r3, [r5]
1946:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****     {
 2592              		.loc 1 1946 24 view .LVU811
 2593 00f6 1B69     		ldr	r3, [r3, #16]
1946:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****     {
 2594              		.loc 1 1946 8 view .LVU812
 2595 00f8 13F0030F 		tst	r3, #3
 2596 00fc 6AD1     		bne	.L211
 2597              	.L184:
1960:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   {
 2598              		.loc 1 1960 3 is_stmt 1 view .LVU813
1960:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   {
 2599              		.loc 1 1960 6 is_stmt 0 view .LVU814
 2600 00fe 14F4003F 		tst	r4, #131072
 2601 0102 02D0     		beq	.L185
1962:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****     {
 2602              		.loc 1 1962 5 is_stmt 1 view .LVU815
1962:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****     {
 2603              		.loc 1 1962 8 is_stmt 0 view .LVU816
 2604 0104 18F0100F 		tst	r8, #16
 2605 0108 68D1     		bne	.L212
 2606              	.L185:
1979:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   {
 2607              		.loc 1 1979 3 is_stmt 1 view .LVU817
1979:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   {
 2608              		.loc 1 1979 6 is_stmt 0 view .LVU818
 2609 010a 14F4803F 		tst	r4, #65536
 2610 010e 02D0     		beq	.L186
1981:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****     {
 2611              		.loc 1 1981 5 is_stmt 1 view .LVU819
1981:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****     {
 2612              		.loc 1 1981 8 is_stmt 0 view .LVU820
 2613 0110 18F0080F 		tst	r8, #8
 2614 0114 69D1     		bne	.L213
 2615              	.L186:
1998:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   {
 2616              		.loc 1 1998 3 is_stmt 1 view .LVU821
1998:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   {
 2617              		.loc 1 1998 6 is_stmt 0 view .LVU822
 2618 0116 14F4004F 		tst	r4, #32768
 2619 011a 7AD0     		beq	.L187
2000:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****     {
 2620              		.loc 1 2000 5 is_stmt 1 view .LVU823
2000:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****     {
 2621              		.loc 1 2000 8 is_stmt 0 view .LVU824
 2622 011c 18F0040F 		tst	r8, #4
ARM GAS  C:\Users\XAVIER~1\AppData\Local\Temp\cc1dYJ0Y.s 			page 112


 2623 0120 74D0     		beq	.L188
2003:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****           ((esrflags & CAN_ESR_EWGF) != 0U))
 2624              		.loc 1 2003 7 is_stmt 1 view .LVU825
2003:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****           ((esrflags & CAN_ESR_EWGF) != 0U))
 2625              		.loc 1 2003 10 is_stmt 0 view .LVU826
 2626 0122 14F4807F 		tst	r4, #256
 2627 0126 04D0     		beq	.L189
2003:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****           ((esrflags & CAN_ESR_EWGF) != 0U))
 2628              		.loc 1 2003 55 discriminator 1 view .LVU827
 2629 0128 19F0010F 		tst	r9, #1
 2630 012c 01D0     		beq	.L189
2007:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** 
 2631              		.loc 1 2007 9 is_stmt 1 view .LVU828
2007:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** 
 2632              		.loc 1 2007 19 is_stmt 0 view .LVU829
 2633 012e 46F00106 		orr	r6, r6, #1
 2634              	.LVL191:
 2635              	.L189:
2013:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****           ((esrflags & CAN_ESR_EPVF) != 0U))
 2636              		.loc 1 2013 7 is_stmt 1 view .LVU830
2013:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****           ((esrflags & CAN_ESR_EPVF) != 0U))
 2637              		.loc 1 2013 10 is_stmt 0 view .LVU831
 2638 0132 14F4007F 		tst	r4, #512
 2639 0136 04D0     		beq	.L190
2013:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****           ((esrflags & CAN_ESR_EPVF) != 0U))
 2640              		.loc 1 2013 55 discriminator 1 view .LVU832
 2641 0138 19F0020F 		tst	r9, #2
 2642 013c 01D0     		beq	.L190
2017:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** 
 2643              		.loc 1 2017 9 is_stmt 1 view .LVU833
2017:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** 
 2644              		.loc 1 2017 19 is_stmt 0 view .LVU834
 2645 013e 46F00206 		orr	r6, r6, #2
 2646              	.LVL192:
 2647              	.L190:
2023:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****           ((esrflags & CAN_ESR_BOFF) != 0U))
 2648              		.loc 1 2023 7 is_stmt 1 view .LVU835
2023:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****           ((esrflags & CAN_ESR_BOFF) != 0U))
 2649              		.loc 1 2023 10 is_stmt 0 view .LVU836
 2650 0142 14F4806F 		tst	r4, #1024
 2651 0146 04D0     		beq	.L191
2023:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****           ((esrflags & CAN_ESR_BOFF) != 0U))
 2652              		.loc 1 2023 48 discriminator 1 view .LVU837
 2653 0148 19F0040F 		tst	r9, #4
 2654 014c 01D0     		beq	.L191
2027:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** 
 2655              		.loc 1 2027 9 is_stmt 1 view .LVU838
2027:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** 
 2656              		.loc 1 2027 19 is_stmt 0 view .LVU839
 2657 014e 46F00406 		orr	r6, r6, #4
 2658              	.LVL193:
 2659              	.L191:
2033:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****           ((esrflags & CAN_ESR_LEC) != 0U))
 2660              		.loc 1 2033 7 is_stmt 1 view .LVU840
2033:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****           ((esrflags & CAN_ESR_LEC) != 0U))
 2661              		.loc 1 2033 10 is_stmt 0 view .LVU841
 2662 0152 14F4006F 		tst	r4, #2048
ARM GAS  C:\Users\XAVIER~1\AppData\Local\Temp\cc1dYJ0Y.s 			page 113


 2663 0156 59D0     		beq	.L188
2033:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****           ((esrflags & CAN_ESR_LEC) != 0U))
 2664              		.loc 1 2033 57 discriminator 1 view .LVU842
 2665 0158 19F07009 		ands	r9, r9, #112
 2666              	.LVL194:
2033:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****           ((esrflags & CAN_ESR_LEC) != 0U))
 2667              		.loc 1 2033 57 discriminator 1 view .LVU843
 2668 015c 56D0     		beq	.L188
2036:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****         {
 2669              		.loc 1 2036 9 is_stmt 1 view .LVU844
 2670 015e B9F1400F 		cmp	r9, #64
 2671 0162 65D0     		beq	.L192
 2672 0164 58D8     		bhi	.L193
 2673 0166 B9F1200F 		cmp	r9, #32
 2674 016a 5ED0     		beq	.L194
 2675 016c B9F1300F 		cmp	r9, #48
 2676 0170 42D1     		bne	.L214
2048:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****             break;
 2677              		.loc 1 2048 13 view .LVU845
2048:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****             break;
 2678              		.loc 1 2048 23 is_stmt 0 view .LVU846
 2679 0172 46F02006 		orr	r6, r6, #32
 2680              	.LVL195:
2049:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****           case (CAN_ESR_LEC_2):
 2681              		.loc 1 2049 13 is_stmt 1 view .LVU847
 2682 0176 44E0     		b	.L197
 2683              	.LVL196:
 2684              	.L206:
1788:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** #endif /* USE_HAL_CAN_REGISTER_CALLBACKS */
 2685              		.loc 1 1788 9 view .LVU848
 2686 0178 2846     		mov	r0, r5
 2687 017a FFF7FEFF 		bl	HAL_CAN_TxMailbox1CompleteCallback
 2688              	.LVL197:
 2689 017e 7BE7     		b	.L172
 2690              	.L174:
1798:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****         {
 2691              		.loc 1 1798 14 view .LVU849
1798:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****         {
 2692              		.loc 1 1798 17 is_stmt 0 view .LVU850
 2693 0180 17F4006F 		tst	r7, #2048
 2694 0184 02D0     		beq	.L175
1801:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****         }
 2695              		.loc 1 1801 11 is_stmt 1 view .LVU851
1801:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****         }
 2696              		.loc 1 1801 21 is_stmt 0 view .LVU852
 2697 0186 46F48046 		orr	r6, r6, #16384
 2698              	.LVL198:
1801:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****         }
 2699              		.loc 1 1801 21 view .LVU853
 2700 018a 75E7     		b	.L172
 2701              	.L175:
1811:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** #endif /* USE_HAL_CAN_REGISTER_CALLBACKS */
 2702              		.loc 1 1811 11 is_stmt 1 view .LVU854
 2703 018c 2846     		mov	r0, r5
 2704 018e FFF7FEFF 		bl	HAL_CAN_TxMailbox1AbortCallback
 2705              	.LVL199:
 2706 0192 71E7     		b	.L172
ARM GAS  C:\Users\XAVIER~1\AppData\Local\Temp\cc1dYJ0Y.s 			page 114


 2707              	.L207:
1831:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** #endif /* USE_HAL_CAN_REGISTER_CALLBACKS */
 2708              		.loc 1 1831 9 view .LVU855
 2709 0194 2846     		mov	r0, r5
 2710 0196 FFF7FEFF 		bl	HAL_CAN_TxMailbox2CompleteCallback
 2711              	.LVL200:
 2712 019a 7EE7     		b	.L169
 2713              	.L177:
1841:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****         {
 2714              		.loc 1 1841 14 view .LVU856
1841:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****         {
 2715              		.loc 1 1841 17 is_stmt 0 view .LVU857
 2716 019c 17F4002F 		tst	r7, #524288
 2717 01a0 02D0     		beq	.L178
1844:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****         }
 2718              		.loc 1 1844 11 is_stmt 1 view .LVU858
1844:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****         }
 2719              		.loc 1 1844 21 is_stmt 0 view .LVU859
 2720 01a2 46F48036 		orr	r6, r6, #65536
 2721              	.LVL201:
1844:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****         }
 2722              		.loc 1 1844 21 view .LVU860
 2723 01a6 78E7     		b	.L169
 2724              	.L178:
1854:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** #endif /* USE_HAL_CAN_REGISTER_CALLBACKS */
 2725              		.loc 1 1854 11 is_stmt 1 view .LVU861
 2726 01a8 2846     		mov	r0, r5
 2727 01aa FFF7FEFF 		bl	HAL_CAN_TxMailbox2AbortCallback
 2728              	.LVL202:
 2729 01ae 74E7     		b	.L169
 2730              	.L208:
1880:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** 
 2731              		.loc 1 1880 7 view .LVU862
 2732 01b0 2B68     		ldr	r3, [r5]
 2733 01b2 0822     		movs	r2, #8
 2734 01b4 DA60     		str	r2, [r3, #12]
1888:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** #endif /* USE_HAL_CAN_REGISTER_CALLBACKS */
 2735              		.loc 1 1888 7 view .LVU863
 2736 01b6 2846     		mov	r0, r5
 2737 01b8 FFF7FEFF 		bl	HAL_CAN_RxFifo0FullCallback
 2738              	.LVL203:
 2739 01bc 7EE7     		b	.L180
 2740              	.L209:
1905:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** #endif /* USE_HAL_CAN_REGISTER_CALLBACKS */
 2741              		.loc 1 1905 7 view .LVU864
 2742 01be 2846     		mov	r0, r5
 2743 01c0 FFF7FEFF 		bl	HAL_CAN_RxFifo0MsgPendingCallback
 2744              	.LVL204:
 2745 01c4 82E7     		b	.L181
 2746              	.L210:
1929:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** 
 2747              		.loc 1 1929 7 view .LVU865
 2748 01c6 2B68     		ldr	r3, [r5]
 2749 01c8 0822     		movs	r2, #8
 2750 01ca 1A61     		str	r2, [r3, #16]
1937:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** #endif /* USE_HAL_CAN_REGISTER_CALLBACKS */
 2751              		.loc 1 1937 7 view .LVU866
ARM GAS  C:\Users\XAVIER~1\AppData\Local\Temp\cc1dYJ0Y.s 			page 115


 2752 01cc 2846     		mov	r0, r5
 2753 01ce FFF7FEFF 		bl	HAL_CAN_RxFifo1FullCallback
 2754              	.LVL205:
 2755 01d2 8CE7     		b	.L183
 2756              	.L211:
1954:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** #endif /* USE_HAL_CAN_REGISTER_CALLBACKS */
 2757              		.loc 1 1954 7 view .LVU867
 2758 01d4 2846     		mov	r0, r5
 2759 01d6 FFF7FEFF 		bl	HAL_CAN_RxFifo1MsgPendingCallback
 2760              	.LVL206:
 2761 01da 90E7     		b	.L184
 2762              	.L212:
1965:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** 
 2763              		.loc 1 1965 7 view .LVU868
 2764 01dc 2B68     		ldr	r3, [r5]
 2765 01de 1022     		movs	r2, #16
 2766 01e0 5A60     		str	r2, [r3, #4]
1973:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** #endif /* USE_HAL_CAN_REGISTER_CALLBACKS */
 2767              		.loc 1 1973 7 view .LVU869
 2768 01e2 2846     		mov	r0, r5
 2769 01e4 FFF7FEFF 		bl	HAL_CAN_SleepCallback
 2770              	.LVL207:
 2771 01e8 8FE7     		b	.L185
 2772              	.L213:
1984:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** 
 2773              		.loc 1 1984 7 view .LVU870
 2774 01ea 2B68     		ldr	r3, [r5]
 2775 01ec 0822     		movs	r2, #8
 2776 01ee 5A60     		str	r2, [r3, #4]
1992:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** #endif /* USE_HAL_CAN_REGISTER_CALLBACKS */
 2777              		.loc 1 1992 7 view .LVU871
 2778 01f0 2846     		mov	r0, r5
 2779 01f2 FFF7FEFF 		bl	HAL_CAN_WakeUpFromRxMsgCallback
 2780              	.LVL208:
 2781 01f6 8EE7     		b	.L186
 2782              	.LVL209:
 2783              	.L214:
2036:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****         {
 2784              		.loc 1 2036 9 is_stmt 0 view .LVU872
 2785 01f8 B9F1100F 		cmp	r9, #16
 2786 01fc 01D1     		bne	.L197
2040:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****             break;
 2787              		.loc 1 2040 13 is_stmt 1 view .LVU873
2040:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****             break;
 2788              		.loc 1 2040 23 is_stmt 0 view .LVU874
 2789 01fe 46F00806 		orr	r6, r6, #8
 2790              	.LVL210:
2041:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****           case (CAN_ESR_LEC_1):
 2791              		.loc 1 2041 13 is_stmt 1 view .LVU875
 2792              	.L197:
2067:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****       }
 2793              		.loc 1 2067 9 view .LVU876
 2794 0202 2A68     		ldr	r2, [r5]
 2795 0204 9369     		ldr	r3, [r2, #24]
 2796 0206 23F07003 		bic	r3, r3, #112
 2797 020a 9361     		str	r3, [r2, #24]
 2798              	.L188:
ARM GAS  C:\Users\XAVIER~1\AppData\Local\Temp\cc1dYJ0Y.s 			page 116


2072:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   }
 2799              		.loc 1 2072 5 view .LVU877
 2800 020c 2B68     		ldr	r3, [r5]
 2801 020e 0422     		movs	r2, #4
 2802 0210 5A60     		str	r2, [r3, #4]
 2803              	.L187:
2076:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   {
 2804              		.loc 1 2076 3 view .LVU878
2076:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   {
 2805              		.loc 1 2076 6 is_stmt 0 view .LVU879
 2806 0212 9EB9     		cbnz	r6, .L215
 2807              	.LVL211:
 2808              	.L168:
2090:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** 
 2809              		.loc 1 2090 1 view .LVU880
 2810 0214 BDE8F88F 		pop	{r3, r4, r5, r6, r7, r8, r9, r10, fp, pc}
 2811              	.LVL212:
 2812              	.L193:
2036:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****         {
 2813              		.loc 1 2036 9 view .LVU881
 2814 0218 B9F1500F 		cmp	r9, #80
 2815 021c 0BD0     		beq	.L198
 2816 021e B9F1600F 		cmp	r9, #96
 2817 0222 EED1     		bne	.L197
2060:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****             break;
 2818              		.loc 1 2060 13 is_stmt 1 view .LVU882
2060:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****             break;
 2819              		.loc 1 2060 23 is_stmt 0 view .LVU883
 2820 0224 46F48076 		orr	r6, r6, #256
 2821              	.LVL213:
2061:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****           default:
 2822              		.loc 1 2061 13 is_stmt 1 view .LVU884
 2823 0228 EBE7     		b	.L197
 2824              	.L194:
2044:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****             break;
 2825              		.loc 1 2044 13 view .LVU885
2044:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****             break;
 2826              		.loc 1 2044 23 is_stmt 0 view .LVU886
 2827 022a 46F01006 		orr	r6, r6, #16
 2828              	.LVL214:
2045:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****           case (CAN_ESR_LEC_1 | CAN_ESR_LEC_0):
 2829              		.loc 1 2045 13 is_stmt 1 view .LVU887
 2830 022e E8E7     		b	.L197
 2831              	.L192:
2052:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****             break;
 2832              		.loc 1 2052 13 view .LVU888
2052:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****             break;
 2833              		.loc 1 2052 23 is_stmt 0 view .LVU889
 2834 0230 46F04006 		orr	r6, r6, #64
 2835              	.LVL215:
2053:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****           case (CAN_ESR_LEC_2 | CAN_ESR_LEC_0):
 2836              		.loc 1 2053 13 is_stmt 1 view .LVU890
 2837 0234 E5E7     		b	.L197
 2838              	.L198:
2056:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****             break;
 2839              		.loc 1 2056 13 view .LVU891
2056:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****             break;
ARM GAS  C:\Users\XAVIER~1\AppData\Local\Temp\cc1dYJ0Y.s 			page 117


 2840              		.loc 1 2056 23 is_stmt 0 view .LVU892
 2841 0236 46F08006 		orr	r6, r6, #128
 2842              	.LVL216:
2057:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****           case (CAN_ESR_LEC_2 | CAN_ESR_LEC_1):
 2843              		.loc 1 2057 13 is_stmt 1 view .LVU893
 2844 023a E2E7     		b	.L197
 2845              	.L215:
2079:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** 
 2846              		.loc 1 2079 5 view .LVU894
2079:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** 
 2847              		.loc 1 2079 21 is_stmt 0 view .LVU895
 2848 023c 6B6A     		ldr	r3, [r5, #36]
 2849 023e 1E43     		orrs	r6, r6, r3
 2850              	.LVL217:
2079:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** 
 2851              		.loc 1 2079 21 view .LVU896
 2852 0240 6E62     		str	r6, [r5, #36]
2087:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** #endif /* USE_HAL_CAN_REGISTER_CALLBACKS */
 2853              		.loc 1 2087 5 is_stmt 1 view .LVU897
 2854 0242 2846     		mov	r0, r5
 2855 0244 FFF7FEFF 		bl	HAL_CAN_ErrorCallback
 2856              	.LVL218:
2090:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** 
 2857              		.loc 1 2090 1 is_stmt 0 view .LVU898
 2858 0248 E4E7     		b	.L168
 2859              		.cfi_endproc
 2860              	.LFE160:
 2862              		.section	.text.HAL_CAN_GetState,"ax",%progbits
 2863              		.align	1
 2864              		.global	HAL_CAN_GetState
 2865              		.syntax unified
 2866              		.thumb
 2867              		.thumb_func
 2868              		.fpu fpv5-sp-d16
 2870              	HAL_CAN_GetState:
 2871              	.LVL219:
 2872              	.LFB174:
2341:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** 
2342:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** /**
2343:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   * @}
2344:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   */
2345:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** 
2346:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** /** @defgroup CAN_Exported_Functions_Group6 Peripheral State and Error functions
2347:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****  *  @brief   CAN Peripheral State functions
2348:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****  *
2349:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** @verbatim
2350:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   ==============================================================================
2351:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****             ##### Peripheral State and Error functions #####
2352:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   ==============================================================================
2353:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****     [..]
2354:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****     This subsection provides functions allowing to :
2355:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****       (+) HAL_CAN_GetState()  : Return the CAN state.
2356:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****       (+) HAL_CAN_GetError()  : Return the CAN error codes if any.
2357:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****       (+) HAL_CAN_ResetError(): Reset the CAN error codes if any.
2358:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** 
2359:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** @endverbatim
2360:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   * @{
ARM GAS  C:\Users\XAVIER~1\AppData\Local\Temp\cc1dYJ0Y.s 			page 118


2361:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   */
2362:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** 
2363:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** /**
2364:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   * @brief  Return the CAN state.
2365:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   * @param  hcan pointer to a CAN_HandleTypeDef structure that contains
2366:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   *         the configuration information for the specified CAN.
2367:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   * @retval HAL state
2368:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   */
2369:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** HAL_CAN_StateTypeDef HAL_CAN_GetState(const CAN_HandleTypeDef *hcan)
2370:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** {
 2873              		.loc 1 2370 1 is_stmt 1 view -0
 2874              		.cfi_startproc
 2875              		@ args = 0, pretend = 0, frame = 0
 2876              		@ frame_needed = 0, uses_anonymous_args = 0
 2877              		@ link register save eliminated.
 2878              		.loc 1 2370 1 is_stmt 0 view .LVU900
 2879 0000 0246     		mov	r2, r0
2371:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   HAL_CAN_StateTypeDef state = hcan->State;
 2880              		.loc 1 2371 3 is_stmt 1 view .LVU901
 2881              		.loc 1 2371 24 is_stmt 0 view .LVU902
 2882 0002 90F82030 		ldrb	r3, [r0, #32]	@ zero_extendqisi2
 2883 0006 D8B2     		uxtb	r0, r3
 2884              	.LVL220:
2372:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** 
2373:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   if ((state == HAL_CAN_STATE_READY) ||
 2885              		.loc 1 2373 3 is_stmt 1 view .LVU903
 2886              		.loc 1 2373 38 is_stmt 0 view .LVU904
 2887 0008 013B     		subs	r3, r3, #1
 2888 000a DBB2     		uxtb	r3, r3
 2889              		.loc 1 2373 6 view .LVU905
 2890 000c 012B     		cmp	r3, #1
 2891 000e 00D9     		bls	.L220
 2892              	.LVL221:
 2893              	.L217:
2374:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****       (state == HAL_CAN_STATE_LISTENING))
2375:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   {
2376:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****     /* Check sleep mode acknowledge flag */
2377:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****     if ((hcan->Instance->MSR & CAN_MSR_SLAK) != 0U)
2378:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****     {
2379:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****       /* Sleep mode is active */
2380:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****       state = HAL_CAN_STATE_SLEEP_ACTIVE;
2381:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****     }
2382:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****     /* Check sleep mode request flag */
2383:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****     else if ((hcan->Instance->MCR & CAN_MCR_SLEEP) != 0U)
2384:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****     {
2385:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****       /* Sleep mode request is pending */
2386:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****       state = HAL_CAN_STATE_SLEEP_PENDING;
2387:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****     }
2388:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****     else
2389:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****     {
2390:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****       /* Neither sleep mode request nor sleep mode acknowledge */
2391:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****     }
 2894              		.loc 1 2391 5 is_stmt 1 view .LVU906
2392:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   }
2393:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** 
2394:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   /* Return CAN state */
2395:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   return state;
ARM GAS  C:\Users\XAVIER~1\AppData\Local\Temp\cc1dYJ0Y.s 			page 119


 2895              		.loc 1 2395 3 view .LVU907
2396:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** }
 2896              		.loc 1 2396 1 is_stmt 0 view .LVU908
 2897 0010 7047     		bx	lr
 2898              	.LVL222:
 2899              	.L220:
2377:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****     {
 2900              		.loc 1 2377 5 is_stmt 1 view .LVU909
2377:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****     {
 2901              		.loc 1 2377 14 is_stmt 0 view .LVU910
 2902 0012 1368     		ldr	r3, [r2]
2377:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****     {
 2903              		.loc 1 2377 24 view .LVU911
 2904 0014 5A68     		ldr	r2, [r3, #4]
 2905              	.LVL223:
2377:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****     {
 2906              		.loc 1 2377 8 view .LVU912
 2907 0016 12F0020F 		tst	r2, #2
 2908 001a 05D1     		bne	.L218
2383:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****     {
 2909              		.loc 1 2383 10 is_stmt 1 view .LVU913
2383:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****     {
 2910              		.loc 1 2383 29 is_stmt 0 view .LVU914
 2911 001c 1B68     		ldr	r3, [r3]
2383:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****     {
 2912              		.loc 1 2383 13 view .LVU915
 2913 001e 13F0020F 		tst	r3, #2
 2914 0022 F5D0     		beq	.L217
2386:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****     }
 2915              		.loc 1 2386 13 view .LVU916
 2916 0024 0320     		movs	r0, #3
 2917              	.LVL224:
2386:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****     }
 2918              		.loc 1 2386 13 view .LVU917
 2919 0026 F3E7     		b	.L217
 2920              	.LVL225:
 2921              	.L218:
2380:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****     }
 2922              		.loc 1 2380 13 view .LVU918
 2923 0028 0420     		movs	r0, #4
 2924              	.LVL226:
2380:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****     }
 2925              		.loc 1 2380 13 view .LVU919
 2926 002a 7047     		bx	lr
 2927              		.cfi_endproc
 2928              	.LFE174:
 2930              		.section	.text.HAL_CAN_GetError,"ax",%progbits
 2931              		.align	1
 2932              		.global	HAL_CAN_GetError
 2933              		.syntax unified
 2934              		.thumb
 2935              		.thumb_func
 2936              		.fpu fpv5-sp-d16
 2938              	HAL_CAN_GetError:
 2939              	.LVL227:
 2940              	.LFB175:
2397:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** 
ARM GAS  C:\Users\XAVIER~1\AppData\Local\Temp\cc1dYJ0Y.s 			page 120


2398:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** /**
2399:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   * @brief  Return the CAN error code.
2400:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   * @param  hcan pointer to a CAN_HandleTypeDef structure that contains
2401:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   *         the configuration information for the specified CAN.
2402:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   * @retval CAN Error Code
2403:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   */
2404:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** uint32_t HAL_CAN_GetError(const CAN_HandleTypeDef *hcan)
2405:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** {
 2941              		.loc 1 2405 1 is_stmt 1 view -0
 2942              		.cfi_startproc
 2943              		@ args = 0, pretend = 0, frame = 0
 2944              		@ frame_needed = 0, uses_anonymous_args = 0
 2945              		@ link register save eliminated.
2406:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   /* Return CAN error code */
2407:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   return hcan->ErrorCode;
 2946              		.loc 1 2407 3 view .LVU921
 2947              		.loc 1 2407 14 is_stmt 0 view .LVU922
 2948 0000 406A     		ldr	r0, [r0, #36]
 2949              	.LVL228:
2408:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** }
 2950              		.loc 1 2408 1 view .LVU923
 2951 0002 7047     		bx	lr
 2952              		.cfi_endproc
 2953              	.LFE175:
 2955              		.section	.text.HAL_CAN_ResetError,"ax",%progbits
 2956              		.align	1
 2957              		.global	HAL_CAN_ResetError
 2958              		.syntax unified
 2959              		.thumb
 2960              		.thumb_func
 2961              		.fpu fpv5-sp-d16
 2963              	HAL_CAN_ResetError:
 2964              	.LVL229:
 2965              	.LFB176:
2409:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** 
2410:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** /**
2411:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   * @brief  Reset the CAN error code.
2412:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   * @param  hcan pointer to a CAN_HandleTypeDef structure that contains
2413:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   *         the configuration information for the specified CAN.
2414:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   * @retval HAL status
2415:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   */
2416:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** HAL_StatusTypeDef HAL_CAN_ResetError(CAN_HandleTypeDef *hcan)
2417:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** {
 2966              		.loc 1 2417 1 is_stmt 1 view -0
 2967              		.cfi_startproc
 2968              		@ args = 0, pretend = 0, frame = 0
 2969              		@ frame_needed = 0, uses_anonymous_args = 0
 2970              		@ link register save eliminated.
2418:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   HAL_StatusTypeDef status = HAL_OK;
 2971              		.loc 1 2418 3 view .LVU925
2419:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   HAL_CAN_StateTypeDef state = hcan->State;
 2972              		.loc 1 2419 3 view .LVU926
 2973              		.loc 1 2419 24 is_stmt 0 view .LVU927
 2974 0000 90F82030 		ldrb	r3, [r0, #32]	@ zero_extendqisi2
 2975              	.LVL230:
2420:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** 
2421:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   if ((state == HAL_CAN_STATE_READY) ||
ARM GAS  C:\Users\XAVIER~1\AppData\Local\Temp\cc1dYJ0Y.s 			page 121


 2976              		.loc 1 2421 3 is_stmt 1 view .LVU928
 2977              		.loc 1 2421 38 is_stmt 0 view .LVU929
 2978 0004 013B     		subs	r3, r3, #1
 2979              	.LVL231:
 2980              		.loc 1 2421 38 view .LVU930
 2981 0006 DBB2     		uxtb	r3, r3
 2982              		.loc 1 2421 6 view .LVU931
 2983 0008 012B     		cmp	r3, #1
 2984 000a 05D9     		bls	.L225
2422:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****       (state == HAL_CAN_STATE_LISTENING))
2423:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   {
2424:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****     /* Reset CAN error code */
2425:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****     hcan->ErrorCode = 0U;
2426:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   }
2427:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   else
2428:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   {
2429:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****     /* Update error code */
2430:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****     hcan->ErrorCode |= HAL_CAN_ERROR_NOT_INITIALIZED;
 2985              		.loc 1 2430 5 is_stmt 1 view .LVU932
 2986              		.loc 1 2430 21 is_stmt 0 view .LVU933
 2987 000c 436A     		ldr	r3, [r0, #36]
 2988 000e 43F48023 		orr	r3, r3, #262144
 2989 0012 4362     		str	r3, [r0, #36]
2431:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** 
2432:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****     status = HAL_ERROR;
 2990              		.loc 1 2432 5 is_stmt 1 view .LVU934
 2991              	.LVL232:
 2992              		.loc 1 2432 12 is_stmt 0 view .LVU935
 2993 0014 0120     		movs	r0, #1
 2994              	.LVL233:
2433:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   }
2434:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** 
2435:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   /* Return the status */
2436:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   return status;
 2995              		.loc 1 2436 3 is_stmt 1 view .LVU936
2437:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c **** }
 2996              		.loc 1 2437 1 is_stmt 0 view .LVU937
 2997 0016 7047     		bx	lr
 2998              	.LVL234:
 2999              	.L225:
2425:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   }
 3000              		.loc 1 2425 5 is_stmt 1 view .LVU938
2425:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   }
 3001              		.loc 1 2425 21 is_stmt 0 view .LVU939
 3002 0018 0023     		movs	r3, #0
 3003 001a 4362     		str	r3, [r0, #36]
2418:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   HAL_CAN_StateTypeDef state = hcan->State;
 3004              		.loc 1 2418 21 view .LVU940
 3005 001c 1846     		mov	r0, r3
 3006              	.LVL235:
2418:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c ****   HAL_CAN_StateTypeDef state = hcan->State;
 3007              		.loc 1 2418 21 view .LVU941
 3008 001e 7047     		bx	lr
 3009              		.cfi_endproc
 3010              	.LFE176:
 3012              		.text
 3013              	.Letext0:
ARM GAS  C:\Users\XAVIER~1\AppData\Local\Temp\cc1dYJ0Y.s 			page 122


 3014              		.file 3 "c:\\program files (x86)\\gnu arm embedded toolchain\\10 2020-q4-major\\arm-none-eabi\\inc
 3015              		.file 4 "c:\\program files (x86)\\gnu arm embedded toolchain\\10 2020-q4-major\\arm-none-eabi\\inc
 3016              		.file 5 "Drivers/CMSIS/Device/ST/STM32F7xx/Include/stm32f746xx.h"
 3017              		.file 6 "Drivers/CMSIS/Device/ST/STM32F7xx/Include/stm32f7xx.h"
 3018              		.file 7 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_def.h"
 3019              		.file 8 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_can.h"
 3020              		.file 9 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal.h"
ARM GAS  C:\Users\XAVIER~1\AppData\Local\Temp\cc1dYJ0Y.s 			page 123


DEFINED SYMBOLS
                            *ABS*:00000000 stm32f7xx_hal_can.c
C:\Users\XAVIER~1\AppData\Local\Temp\cc1dYJ0Y.s:18     .text.HAL_CAN_MspInit:00000000 $t
C:\Users\XAVIER~1\AppData\Local\Temp\cc1dYJ0Y.s:26     .text.HAL_CAN_MspInit:00000000 HAL_CAN_MspInit
C:\Users\XAVIER~1\AppData\Local\Temp\cc1dYJ0Y.s:42     .text.HAL_CAN_Init:00000000 $t
C:\Users\XAVIER~1\AppData\Local\Temp\cc1dYJ0Y.s:49     .text.HAL_CAN_Init:00000000 HAL_CAN_Init
C:\Users\XAVIER~1\AppData\Local\Temp\cc1dYJ0Y.s:339    .text.HAL_CAN_MspDeInit:00000000 $t
C:\Users\XAVIER~1\AppData\Local\Temp\cc1dYJ0Y.s:346    .text.HAL_CAN_MspDeInit:00000000 HAL_CAN_MspDeInit
C:\Users\XAVIER~1\AppData\Local\Temp\cc1dYJ0Y.s:361    .text.HAL_CAN_ConfigFilter:00000000 $t
C:\Users\XAVIER~1\AppData\Local\Temp\cc1dYJ0Y.s:368    .text.HAL_CAN_ConfigFilter:00000000 HAL_CAN_ConfigFilter
C:\Users\XAVIER~1\AppData\Local\Temp\cc1dYJ0Y.s:593    .text.HAL_CAN_ConfigFilter:00000134 $d
C:\Users\XAVIER~1\AppData\Local\Temp\cc1dYJ0Y.s:598    .text.HAL_CAN_Start:00000000 $t
C:\Users\XAVIER~1\AppData\Local\Temp\cc1dYJ0Y.s:605    .text.HAL_CAN_Start:00000000 HAL_CAN_Start
C:\Users\XAVIER~1\AppData\Local\Temp\cc1dYJ0Y.s:703    .text.HAL_CAN_Stop:00000000 $t
C:\Users\XAVIER~1\AppData\Local\Temp\cc1dYJ0Y.s:710    .text.HAL_CAN_Stop:00000000 HAL_CAN_Stop
C:\Users\XAVIER~1\AppData\Local\Temp\cc1dYJ0Y.s:809    .text.HAL_CAN_DeInit:00000000 $t
C:\Users\XAVIER~1\AppData\Local\Temp\cc1dYJ0Y.s:816    .text.HAL_CAN_DeInit:00000000 HAL_CAN_DeInit
C:\Users\XAVIER~1\AppData\Local\Temp\cc1dYJ0Y.s:872    .text.HAL_CAN_RequestSleep:00000000 $t
C:\Users\XAVIER~1\AppData\Local\Temp\cc1dYJ0Y.s:879    .text.HAL_CAN_RequestSleep:00000000 HAL_CAN_RequestSleep
C:\Users\XAVIER~1\AppData\Local\Temp\cc1dYJ0Y.s:928    .text.HAL_CAN_WakeUp:00000000 $t
C:\Users\XAVIER~1\AppData\Local\Temp\cc1dYJ0Y.s:935    .text.HAL_CAN_WakeUp:00000000 HAL_CAN_WakeUp
C:\Users\XAVIER~1\AppData\Local\Temp\cc1dYJ0Y.s:1032   .text.HAL_CAN_WakeUp:00000054 $d
C:\Users\XAVIER~1\AppData\Local\Temp\cc1dYJ0Y.s:1037   .text.HAL_CAN_IsSleepActive:00000000 $t
C:\Users\XAVIER~1\AppData\Local\Temp\cc1dYJ0Y.s:1044   .text.HAL_CAN_IsSleepActive:00000000 HAL_CAN_IsSleepActive
C:\Users\XAVIER~1\AppData\Local\Temp\cc1dYJ0Y.s:1094   .text.HAL_CAN_AddTxMessage:00000000 $t
C:\Users\XAVIER~1\AppData\Local\Temp\cc1dYJ0Y.s:1101   .text.HAL_CAN_AddTxMessage:00000000 HAL_CAN_AddTxMessage
C:\Users\XAVIER~1\AppData\Local\Temp\cc1dYJ0Y.s:1297   .text.HAL_CAN_AbortTxRequest:00000000 $t
C:\Users\XAVIER~1\AppData\Local\Temp\cc1dYJ0Y.s:1304   .text.HAL_CAN_AbortTxRequest:00000000 HAL_CAN_AbortTxRequest
C:\Users\XAVIER~1\AppData\Local\Temp\cc1dYJ0Y.s:1379   .text.HAL_CAN_GetTxMailboxesFreeLevel:00000000 $t
C:\Users\XAVIER~1\AppData\Local\Temp\cc1dYJ0Y.s:1386   .text.HAL_CAN_GetTxMailboxesFreeLevel:00000000 HAL_CAN_GetTxMailboxesFreeLevel
C:\Users\XAVIER~1\AppData\Local\Temp\cc1dYJ0Y.s:1457   .text.HAL_CAN_IsTxMessagePending:00000000 $t
C:\Users\XAVIER~1\AppData\Local\Temp\cc1dYJ0Y.s:1464   .text.HAL_CAN_IsTxMessagePending:00000000 HAL_CAN_IsTxMessagePending
C:\Users\XAVIER~1\AppData\Local\Temp\cc1dYJ0Y.s:1521   .text.HAL_CAN_GetTxTimestamp:00000000 $t
C:\Users\XAVIER~1\AppData\Local\Temp\cc1dYJ0Y.s:1528   .text.HAL_CAN_GetTxTimestamp:00000000 HAL_CAN_GetTxTimestamp
C:\Users\XAVIER~1\AppData\Local\Temp\cc1dYJ0Y.s:1603   .text.HAL_CAN_GetRxMessage:00000000 $t
C:\Users\XAVIER~1\AppData\Local\Temp\cc1dYJ0Y.s:1610   .text.HAL_CAN_GetRxMessage:00000000 HAL_CAN_GetRxMessage
C:\Users\XAVIER~1\AppData\Local\Temp\cc1dYJ0Y.s:1902   .text.HAL_CAN_GetRxFifoFillLevel:00000000 $t
C:\Users\XAVIER~1\AppData\Local\Temp\cc1dYJ0Y.s:1909   .text.HAL_CAN_GetRxFifoFillLevel:00000000 HAL_CAN_GetRxFifoFillLevel
C:\Users\XAVIER~1\AppData\Local\Temp\cc1dYJ0Y.s:1971   .text.HAL_CAN_ActivateNotification:00000000 $t
C:\Users\XAVIER~1\AppData\Local\Temp\cc1dYJ0Y.s:1978   .text.HAL_CAN_ActivateNotification:00000000 HAL_CAN_ActivateNotification
C:\Users\XAVIER~1\AppData\Local\Temp\cc1dYJ0Y.s:2030   .text.HAL_CAN_DeactivateNotification:00000000 $t
C:\Users\XAVIER~1\AppData\Local\Temp\cc1dYJ0Y.s:2037   .text.HAL_CAN_DeactivateNotification:00000000 HAL_CAN_DeactivateNotification
C:\Users\XAVIER~1\AppData\Local\Temp\cc1dYJ0Y.s:2089   .text.HAL_CAN_TxMailbox0CompleteCallback:00000000 $t
C:\Users\XAVIER~1\AppData\Local\Temp\cc1dYJ0Y.s:2096   .text.HAL_CAN_TxMailbox0CompleteCallback:00000000 HAL_CAN_TxMailbox0CompleteCallback
C:\Users\XAVIER~1\AppData\Local\Temp\cc1dYJ0Y.s:2111   .text.HAL_CAN_TxMailbox1CompleteCallback:00000000 $t
C:\Users\XAVIER~1\AppData\Local\Temp\cc1dYJ0Y.s:2118   .text.HAL_CAN_TxMailbox1CompleteCallback:00000000 HAL_CAN_TxMailbox1CompleteCallback
C:\Users\XAVIER~1\AppData\Local\Temp\cc1dYJ0Y.s:2133   .text.HAL_CAN_TxMailbox2CompleteCallback:00000000 $t
C:\Users\XAVIER~1\AppData\Local\Temp\cc1dYJ0Y.s:2140   .text.HAL_CAN_TxMailbox2CompleteCallback:00000000 HAL_CAN_TxMailbox2CompleteCallback
C:\Users\XAVIER~1\AppData\Local\Temp\cc1dYJ0Y.s:2155   .text.HAL_CAN_TxMailbox0AbortCallback:00000000 $t
C:\Users\XAVIER~1\AppData\Local\Temp\cc1dYJ0Y.s:2162   .text.HAL_CAN_TxMailbox0AbortCallback:00000000 HAL_CAN_TxMailbox0AbortCallback
C:\Users\XAVIER~1\AppData\Local\Temp\cc1dYJ0Y.s:2177   .text.HAL_CAN_TxMailbox1AbortCallback:00000000 $t
C:\Users\XAVIER~1\AppData\Local\Temp\cc1dYJ0Y.s:2184   .text.HAL_CAN_TxMailbox1AbortCallback:00000000 HAL_CAN_TxMailbox1AbortCallback
C:\Users\XAVIER~1\AppData\Local\Temp\cc1dYJ0Y.s:2199   .text.HAL_CAN_TxMailbox2AbortCallback:00000000 $t
C:\Users\XAVIER~1\AppData\Local\Temp\cc1dYJ0Y.s:2206   .text.HAL_CAN_TxMailbox2AbortCallback:00000000 HAL_CAN_TxMailbox2AbortCallback
C:\Users\XAVIER~1\AppData\Local\Temp\cc1dYJ0Y.s:2221   .text.HAL_CAN_RxFifo0MsgPendingCallback:00000000 $t
C:\Users\XAVIER~1\AppData\Local\Temp\cc1dYJ0Y.s:2228   .text.HAL_CAN_RxFifo0MsgPendingCallback:00000000 HAL_CAN_RxFifo0MsgPendingCallback
C:\Users\XAVIER~1\AppData\Local\Temp\cc1dYJ0Y.s:2243   .text.HAL_CAN_RxFifo0FullCallback:00000000 $t
ARM GAS  C:\Users\XAVIER~1\AppData\Local\Temp\cc1dYJ0Y.s 			page 124


C:\Users\XAVIER~1\AppData\Local\Temp\cc1dYJ0Y.s:2250   .text.HAL_CAN_RxFifo0FullCallback:00000000 HAL_CAN_RxFifo0FullCallback
C:\Users\XAVIER~1\AppData\Local\Temp\cc1dYJ0Y.s:2265   .text.HAL_CAN_RxFifo1MsgPendingCallback:00000000 $t
C:\Users\XAVIER~1\AppData\Local\Temp\cc1dYJ0Y.s:2272   .text.HAL_CAN_RxFifo1MsgPendingCallback:00000000 HAL_CAN_RxFifo1MsgPendingCallback
C:\Users\XAVIER~1\AppData\Local\Temp\cc1dYJ0Y.s:2287   .text.HAL_CAN_RxFifo1FullCallback:00000000 $t
C:\Users\XAVIER~1\AppData\Local\Temp\cc1dYJ0Y.s:2294   .text.HAL_CAN_RxFifo1FullCallback:00000000 HAL_CAN_RxFifo1FullCallback
C:\Users\XAVIER~1\AppData\Local\Temp\cc1dYJ0Y.s:2309   .text.HAL_CAN_SleepCallback:00000000 $t
C:\Users\XAVIER~1\AppData\Local\Temp\cc1dYJ0Y.s:2316   .text.HAL_CAN_SleepCallback:00000000 HAL_CAN_SleepCallback
C:\Users\XAVIER~1\AppData\Local\Temp\cc1dYJ0Y.s:2331   .text.HAL_CAN_WakeUpFromRxMsgCallback:00000000 $t
C:\Users\XAVIER~1\AppData\Local\Temp\cc1dYJ0Y.s:2338   .text.HAL_CAN_WakeUpFromRxMsgCallback:00000000 HAL_CAN_WakeUpFromRxMsgCallback
C:\Users\XAVIER~1\AppData\Local\Temp\cc1dYJ0Y.s:2353   .text.HAL_CAN_ErrorCallback:00000000 $t
C:\Users\XAVIER~1\AppData\Local\Temp\cc1dYJ0Y.s:2360   .text.HAL_CAN_ErrorCallback:00000000 HAL_CAN_ErrorCallback
C:\Users\XAVIER~1\AppData\Local\Temp\cc1dYJ0Y.s:2375   .text.HAL_CAN_IRQHandler:00000000 $t
C:\Users\XAVIER~1\AppData\Local\Temp\cc1dYJ0Y.s:2382   .text.HAL_CAN_IRQHandler:00000000 HAL_CAN_IRQHandler
C:\Users\XAVIER~1\AppData\Local\Temp\cc1dYJ0Y.s:2863   .text.HAL_CAN_GetState:00000000 $t
C:\Users\XAVIER~1\AppData\Local\Temp\cc1dYJ0Y.s:2870   .text.HAL_CAN_GetState:00000000 HAL_CAN_GetState
C:\Users\XAVIER~1\AppData\Local\Temp\cc1dYJ0Y.s:2931   .text.HAL_CAN_GetError:00000000 $t
C:\Users\XAVIER~1\AppData\Local\Temp\cc1dYJ0Y.s:2938   .text.HAL_CAN_GetError:00000000 HAL_CAN_GetError
C:\Users\XAVIER~1\AppData\Local\Temp\cc1dYJ0Y.s:2956   .text.HAL_CAN_ResetError:00000000 $t
C:\Users\XAVIER~1\AppData\Local\Temp\cc1dYJ0Y.s:2963   .text.HAL_CAN_ResetError:00000000 HAL_CAN_ResetError

UNDEFINED SYMBOLS
HAL_GetTick
